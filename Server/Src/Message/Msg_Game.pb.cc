// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Game.proto

#include "Msg_Game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class SkillItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SkillItem>
      _instance;
} _SkillItem_default_instance_;
class GmStopServerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GmStopServerReq>
      _instance;
} _GmStopServerReq_default_instance_;
class GmStopServerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GmStopServerAck>
      _instance;
} _GmStopServerAck_default_instance_;
class CheckVersionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckVersionReq>
      _instance;
} _CheckVersionReq_default_instance_;
class CheckVersionAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckVersionAck>
      _instance;
} _CheckVersionAck_default_instance_;
class AccountLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountLog>
      _instance;
} _AccountLog_default_instance_;
class AccountRegReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountRegReq>
      _instance;
} _AccountRegReq_default_instance_;
class AccountRegAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountRegAck>
      _instance;
} _AccountRegAck_default_instance_;
class AccountLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountLoginReq>
      _instance;
} _AccountLoginReq_default_instance_;
class AccountLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountLoginAck>
      _instance;
} _AccountLoginAck_default_instance_;
class ClientServerListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientServerListReq>
      _instance;
} _ClientServerListReq_default_instance_;
class ClientServerNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientServerNode>
      _instance;
} _ClientServerNode_default_instance_;
class ClientServerListAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientServerListAck>
      _instance;
} _ClientServerListAck_default_instance_;
class SvrRegToSvrReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SvrRegToSvrReq>
      _instance;
} _SvrRegToSvrReq_default_instance_;
class SvrRegToSvrAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SvrRegToSvrAck>
      _instance;
} _SvrRegToSvrAck_default_instance_;
class SelectServerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectServerReq>
      _instance;
} _SelectServerReq_default_instance_;
class SelectServerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectServerAck>
      _instance;
} _SelectServerAck_default_instance_;
class RoleItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleItem>
      _instance;
} _RoleItem_default_instance_;
class RoleListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleListReq>
      _instance;
} _RoleListReq_default_instance_;
class RoleListAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleListAck>
      _instance;
} _RoleListAck_default_instance_;
class RoleCreateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleCreateReq>
      _instance;
} _RoleCreateReq_default_instance_;
class RoleCreateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleCreateAck>
      _instance;
} _RoleCreateAck_default_instance_;
class RoleDeleteReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleDeleteReq>
      _instance;
} _RoleDeleteReq_default_instance_;
class RoleDeleteAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleDeleteAck>
      _instance;
} _RoleDeleteAck_default_instance_;
class RoleLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleLoginReq>
      _instance;
} _RoleLoginReq_default_instance_;
class RoleLogoutReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleLogoutReq>
      _instance;
} _RoleLogoutReq_default_instance_;
class RoleLogoutAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleLogoutAck>
      _instance;
} _RoleLogoutAck_default_instance_;
class RoleDisconnectReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleDisconnectReq>
      _instance;
} _RoleDisconnectReq_default_instance_;
class RoleDisconnectAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleDisconnectAck>
      _instance;
} _RoleDisconnectAck_default_instance_;
class RoleReconnectReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleReconnectReq>
      _instance;
} _RoleReconnectReq_default_instance_;
class RoleReconnectAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleReconnectAck>
      _instance;
} _RoleReconnectAck_default_instance_;
class CreateNewSceneReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNewSceneReq>
      _instance;
} _CreateNewSceneReq_default_instance_;
class CreateNewSceneAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNewSceneAck>
      _instance;
} _CreateNewSceneAck_default_instance_;
class EnterSceneReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneReq>
      _instance;
} _EnterSceneReq_default_instance_;
class EnterSceneAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneAck>
      _instance;
} _EnterSceneAck_default_instance_;
class BackToCityReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BackToCityReq>
      _instance;
} _BackToCityReq_default_instance_;
class BackToCityAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BackToCityAck>
      _instance;
} _BackToCityAck_default_instance_;
class LeaveSceneReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaveSceneReq>
      _instance;
} _LeaveSceneReq_default_instance_;
class LeaveSceneAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaveSceneAck>
      _instance;
} _LeaveSceneAck_default_instance_;
class AbortSceneReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AbortSceneReq>
      _instance;
} _AbortSceneReq_default_instance_;
class AbortSceneAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AbortSceneAck>
      _instance;
} _AbortSceneAck_default_instance_;
class AbortSceneNtyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AbortSceneNty>
      _instance;
} _AbortSceneNty_default_instance_;
class TransRoleDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransRoleData>
      _instance;
} _TransRoleData_default_instance_;
class TransPetDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransPetData>
      _instance;
} _TransPetData_default_instance_;
class TransPartnerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransPartnerData>
      _instance;
} _TransPartnerData_default_instance_;
class TransferDataItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferDataItem>
      _instance;
} _TransferDataItem_default_instance_;
class TransferDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferDataReq>
      _instance;
} _TransferDataReq_default_instance_;
class TransferDataAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferDataAck>
      _instance;
} _TransferDataAck_default_instance_;
class NotifyIntoSceneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyIntoScene>
      _instance;
} _NotifyIntoScene_default_instance_;
class NearByRoleItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NearByRoleItem>
      _instance;
} _NearByRoleItem_default_instance_;
class CopyInsItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CopyInsItem>
      _instance;
} _CopyInsItem_default_instance_;
class CopyReportReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CopyReportReq>
      _instance;
} _CopyReportReq_default_instance_;
class UseHpBottleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseHpBottleReq>
      _instance;
} _UseHpBottleReq_default_instance_;
class UseHpBottleAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseHpBottleAck>
      _instance;
} _UseHpBottleAck_default_instance_;
class UseMpBottleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseMpBottleReq>
      _instance;
} _UseMpBottleReq_default_instance_;
class UseMpBottleAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseMpBottleAck>
      _instance;
} _UseMpBottleAck_default_instance_;
class ChatMessageReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatMessageReq>
      _instance;
} _ChatMessageReq_default_instance_;
class ChatMessageAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatMessageAck>
      _instance;
} _ChatMessageAck_default_instance_;
class ChatMessageNtyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatMessageNty>
      _instance;
} _ChatMessageNty_default_instance_;
class SealAccountReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SealAccountReq>
      _instance;
} _SealAccountReq_default_instance_;
class SealAccountAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SealAccountAck>
      _instance;
} _SealAccountAck_default_instance_;
class SetLastServerNtyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLastServerNty>
      _instance;
} _SetLastServerNty_default_instance_;
class CommonReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonReq>
      _instance;
} _CommonReq_default_instance_;
class CommonAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonAck>
      _instance;
} _CommonAck_default_instance_;
class BroadMessageNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadMessageNotify>
      _instance;
} _BroadMessageNotify_default_instance_;
class LogicRegToLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicRegToLoginReq>
      _instance;
} _LogicRegToLoginReq_default_instance_;
class LogicRegToLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicRegToLoginAck>
      _instance;
} _LogicRegToLoginAck_default_instance_;
class LogicUpdateInfoReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicUpdateInfoReq>
      _instance;
} _LogicUpdateInfoReq_default_instance_;
class LogicUpdateInfoAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicUpdateInfoAck>
      _instance;
} _LogicUpdateInfoAck_default_instance_;
class WatchHeartBeatReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchHeartBeatReq>
      _instance;
} _WatchHeartBeatReq_default_instance_;
class WatchHeartBeatAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchHeartBeatAck>
      _instance;
} _WatchHeartBeatAck_default_instance_;
class SetupEquipReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupEquipReq>
      _instance;
} _SetupEquipReq_default_instance_;
class SetupEquipAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupEquipAck>
      _instance;
} _SetupEquipAck_default_instance_;
class UnsetEquipReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetEquipReq>
      _instance;
} _UnsetEquipReq_default_instance_;
class UnsetEquipAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetEquipAck>
      _instance;
} _UnsetEquipAck_default_instance_;
class SetupGemReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupGemReq>
      _instance;
} _SetupGemReq_default_instance_;
class SetupGemAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupGemAck>
      _instance;
} _SetupGemAck_default_instance_;
class UnsetGemReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetGemReq>
      _instance;
} _UnsetGemReq_default_instance_;
class UnsetGemAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetGemAck>
      _instance;
} _UnsetGemAck_default_instance_;
class SetupPartnerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupPartnerReq>
      _instance;
} _SetupPartnerReq_default_instance_;
class SetupPartnerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupPartnerAck>
      _instance;
} _SetupPartnerAck_default_instance_;
class UnsetPartnerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetPartnerReq>
      _instance;
} _UnsetPartnerReq_default_instance_;
class UnsetPartnerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetPartnerAck>
      _instance;
} _UnsetPartnerAck_default_instance_;
class SetupMountReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupMountReq>
      _instance;
} _SetupMountReq_default_instance_;
class SetupMountAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupMountAck>
      _instance;
} _SetupMountAck_default_instance_;
class UnsetMountReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetMountReq>
      _instance;
} _UnsetMountReq_default_instance_;
class UnsetMountAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetMountAck>
      _instance;
} _UnsetMountAck_default_instance_;
class SetupPetReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupPetReq>
      _instance;
} _SetupPetReq_default_instance_;
class SetupPetAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupPetAck>
      _instance;
} _SetupPetAck_default_instance_;
class UnsetPetReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetPetReq>
      _instance;
} _UnsetPetReq_default_instance_;
class UnsetPetAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsetPetAck>
      _instance;
} _UnsetPetAck_default_instance_;
class StoreBuyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreBuyReq>
      _instance;
} _StoreBuyReq_default_instance_;
class StoreBuyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreBuyAck>
      _instance;
} _StoreBuyAck_default_instance_;
class ObjectChangeNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectChangeNotify>
      _instance;
} _ObjectChangeNotify_default_instance_;
class HitEffectItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HitEffectItem>
      _instance;
} _HitEffectItem_default_instance_;
class HitEffectNtfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HitEffectNtf>
      _instance;
} _HitEffectNtf_default_instance_;
class UseItemReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseItemReq>
      _instance;
} _UseItemReq_default_instance_;
class UseItemAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseItemAck>
      _instance;
} _UseItemAck_default_instance_;
class MsgGetRandomNameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgGetRandomNameReq>
      _instance;
} _MsgGetRandomNameReq_default_instance_;
class MsgGetRandomNameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgGetRandomNameAck>
      _instance;
} _MsgGetRandomNameAck_default_instance_;
namespace protobuf_Msg_5fGame_2eproto {
void InitDefaultsSkillItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SkillItem_default_instance_;
    new (ptr) ::SkillItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SkillItem::InitAsDefaultInstance();
}

void InitDefaultsSkillItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSkillItemImpl);
}

void InitDefaultsGmStopServerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_GmStopServerReq_default_instance_;
    new (ptr) ::GmStopServerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GmStopServerReq::InitAsDefaultInstance();
}

void InitDefaultsGmStopServerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGmStopServerReqImpl);
}

void InitDefaultsGmStopServerAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_GmStopServerAck_default_instance_;
    new (ptr) ::GmStopServerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GmStopServerAck::InitAsDefaultInstance();
}

void InitDefaultsGmStopServerAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGmStopServerAckImpl);
}

void InitDefaultsCheckVersionReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_CheckVersionReq_default_instance_;
    new (ptr) ::CheckVersionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CheckVersionReq::InitAsDefaultInstance();
}

void InitDefaultsCheckVersionReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckVersionReqImpl);
}

void InitDefaultsCheckVersionAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_CheckVersionAck_default_instance_;
    new (ptr) ::CheckVersionAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CheckVersionAck::InitAsDefaultInstance();
}

void InitDefaultsCheckVersionAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckVersionAckImpl);
}

void InitDefaultsAccountLogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_AccountLog_default_instance_;
    new (ptr) ::AccountLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountLog::InitAsDefaultInstance();
}

void InitDefaultsAccountLog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountLogImpl);
}

void InitDefaultsAccountRegReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsAccountLog();
  {
    void* ptr = &::_AccountRegReq_default_instance_;
    new (ptr) ::AccountRegReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountRegReq::InitAsDefaultInstance();
}

void InitDefaultsAccountRegReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountRegReqImpl);
}

void InitDefaultsAccountRegAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_AccountRegAck_default_instance_;
    new (ptr) ::AccountRegAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountRegAck::InitAsDefaultInstance();
}

void InitDefaultsAccountRegAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountRegAckImpl);
}

void InitDefaultsAccountLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsAccountLog();
  {
    void* ptr = &::_AccountLoginReq_default_instance_;
    new (ptr) ::AccountLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountLoginReq::InitAsDefaultInstance();
}

void InitDefaultsAccountLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountLoginReqImpl);
}

void InitDefaultsAccountLoginAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_AccountLoginAck_default_instance_;
    new (ptr) ::AccountLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountLoginAck::InitAsDefaultInstance();
}

void InitDefaultsAccountLoginAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountLoginAckImpl);
}

void InitDefaultsClientServerListReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ClientServerListReq_default_instance_;
    new (ptr) ::ClientServerListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientServerListReq::InitAsDefaultInstance();
}

void InitDefaultsClientServerListReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientServerListReqImpl);
}

void InitDefaultsClientServerNodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ClientServerNode_default_instance_;
    new (ptr) ::ClientServerNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientServerNode::InitAsDefaultInstance();
}

void InitDefaultsClientServerNode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientServerNodeImpl);
}

void InitDefaultsClientServerListAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsClientServerNode();
  {
    void* ptr = &::_ClientServerListAck_default_instance_;
    new (ptr) ::ClientServerListAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientServerListAck::InitAsDefaultInstance();
}

void InitDefaultsClientServerListAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientServerListAckImpl);
}

void InitDefaultsSvrRegToSvrReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SvrRegToSvrReq_default_instance_;
    new (ptr) ::SvrRegToSvrReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SvrRegToSvrReq::InitAsDefaultInstance();
}

void InitDefaultsSvrRegToSvrReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSvrRegToSvrReqImpl);
}

void InitDefaultsSvrRegToSvrAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SvrRegToSvrAck_default_instance_;
    new (ptr) ::SvrRegToSvrAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SvrRegToSvrAck::InitAsDefaultInstance();
}

void InitDefaultsSvrRegToSvrAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSvrRegToSvrAckImpl);
}

void InitDefaultsSelectServerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SelectServerReq_default_instance_;
    new (ptr) ::SelectServerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SelectServerReq::InitAsDefaultInstance();
}

void InitDefaultsSelectServerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSelectServerReqImpl);
}

void InitDefaultsSelectServerAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SelectServerAck_default_instance_;
    new (ptr) ::SelectServerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SelectServerAck::InitAsDefaultInstance();
}

void InitDefaultsSelectServerAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSelectServerAckImpl);
}

void InitDefaultsRoleItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleItem_default_instance_;
    new (ptr) ::RoleItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleItem::InitAsDefaultInstance();
}

void InitDefaultsRoleItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleItemImpl);
}

void InitDefaultsRoleListReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleListReq_default_instance_;
    new (ptr) ::RoleListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleListReq::InitAsDefaultInstance();
}

void InitDefaultsRoleListReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleListReqImpl);
}

void InitDefaultsRoleListAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsRoleItem();
  {
    void* ptr = &::_RoleListAck_default_instance_;
    new (ptr) ::RoleListAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleListAck::InitAsDefaultInstance();
}

void InitDefaultsRoleListAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleListAckImpl);
}

void InitDefaultsRoleCreateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleCreateReq_default_instance_;
    new (ptr) ::RoleCreateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleCreateReq::InitAsDefaultInstance();
}

void InitDefaultsRoleCreateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleCreateReqImpl);
}

void InitDefaultsRoleCreateAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleCreateAck_default_instance_;
    new (ptr) ::RoleCreateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleCreateAck::InitAsDefaultInstance();
}

void InitDefaultsRoleCreateAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleCreateAckImpl);
}

void InitDefaultsRoleDeleteReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleDeleteReq_default_instance_;
    new (ptr) ::RoleDeleteReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleDeleteReq::InitAsDefaultInstance();
}

void InitDefaultsRoleDeleteReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleDeleteReqImpl);
}

void InitDefaultsRoleDeleteAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleDeleteAck_default_instance_;
    new (ptr) ::RoleDeleteAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleDeleteAck::InitAsDefaultInstance();
}

void InitDefaultsRoleDeleteAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleDeleteAckImpl);
}

void InitDefaultsRoleLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleLoginReq_default_instance_;
    new (ptr) ::RoleLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleLoginReq::InitAsDefaultInstance();
}

void InitDefaultsRoleLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleLoginReqImpl);
}

void InitDefaultsRoleLogoutReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleLogoutReq_default_instance_;
    new (ptr) ::RoleLogoutReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleLogoutReq::InitAsDefaultInstance();
}

void InitDefaultsRoleLogoutReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleLogoutReqImpl);
}

void InitDefaultsRoleLogoutAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleLogoutAck_default_instance_;
    new (ptr) ::RoleLogoutAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleLogoutAck::InitAsDefaultInstance();
}

void InitDefaultsRoleLogoutAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleLogoutAckImpl);
}

void InitDefaultsRoleDisconnectReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleDisconnectReq_default_instance_;
    new (ptr) ::RoleDisconnectReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleDisconnectReq::InitAsDefaultInstance();
}

void InitDefaultsRoleDisconnectReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleDisconnectReqImpl);
}

void InitDefaultsRoleDisconnectAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleDisconnectAck_default_instance_;
    new (ptr) ::RoleDisconnectAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleDisconnectAck::InitAsDefaultInstance();
}

void InitDefaultsRoleDisconnectAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleDisconnectAckImpl);
}

void InitDefaultsRoleReconnectReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleReconnectReq_default_instance_;
    new (ptr) ::RoleReconnectReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleReconnectReq::InitAsDefaultInstance();
}

void InitDefaultsRoleReconnectReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleReconnectReqImpl);
}

void InitDefaultsRoleReconnectAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_RoleReconnectAck_default_instance_;
    new (ptr) ::RoleReconnectAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoleReconnectAck::InitAsDefaultInstance();
}

void InitDefaultsRoleReconnectAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleReconnectAckImpl);
}

void InitDefaultsCreateNewSceneReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_CreateNewSceneReq_default_instance_;
    new (ptr) ::CreateNewSceneReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateNewSceneReq::InitAsDefaultInstance();
}

void InitDefaultsCreateNewSceneReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateNewSceneReqImpl);
}

void InitDefaultsCreateNewSceneAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_CreateNewSceneAck_default_instance_;
    new (ptr) ::CreateNewSceneAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateNewSceneAck::InitAsDefaultInstance();
}

void InitDefaultsCreateNewSceneAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateNewSceneAckImpl);
}

void InitDefaultsEnterSceneReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_EnterSceneReq_default_instance_;
    new (ptr) ::EnterSceneReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnterSceneReq::InitAsDefaultInstance();
}

void InitDefaultsEnterSceneReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterSceneReqImpl);
}

void InitDefaultsEnterSceneAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsSkillItem();
  {
    void* ptr = &::_EnterSceneAck_default_instance_;
    new (ptr) ::EnterSceneAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnterSceneAck::InitAsDefaultInstance();
}

void InitDefaultsEnterSceneAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterSceneAckImpl);
}

void InitDefaultsBackToCityReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_BackToCityReq_default_instance_;
    new (ptr) ::BackToCityReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BackToCityReq::InitAsDefaultInstance();
}

void InitDefaultsBackToCityReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBackToCityReqImpl);
}

void InitDefaultsBackToCityAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_BackToCityAck_default_instance_;
    new (ptr) ::BackToCityAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BackToCityAck::InitAsDefaultInstance();
}

void InitDefaultsBackToCityAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBackToCityAckImpl);
}

void InitDefaultsLeaveSceneReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_LeaveSceneReq_default_instance_;
    new (ptr) ::LeaveSceneReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LeaveSceneReq::InitAsDefaultInstance();
}

void InitDefaultsLeaveSceneReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaveSceneReqImpl);
}

void InitDefaultsLeaveSceneAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_LeaveSceneAck_default_instance_;
    new (ptr) ::LeaveSceneAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LeaveSceneAck::InitAsDefaultInstance();
}

void InitDefaultsLeaveSceneAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaveSceneAckImpl);
}

void InitDefaultsAbortSceneReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_AbortSceneReq_default_instance_;
    new (ptr) ::AbortSceneReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AbortSceneReq::InitAsDefaultInstance();
}

void InitDefaultsAbortSceneReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAbortSceneReqImpl);
}

void InitDefaultsAbortSceneAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_AbortSceneAck_default_instance_;
    new (ptr) ::AbortSceneAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AbortSceneAck::InitAsDefaultInstance();
}

void InitDefaultsAbortSceneAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAbortSceneAckImpl);
}

void InitDefaultsAbortSceneNtyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_AbortSceneNty_default_instance_;
    new (ptr) ::AbortSceneNty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AbortSceneNty::InitAsDefaultInstance();
}

void InitDefaultsAbortSceneNty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAbortSceneNtyImpl);
}

void InitDefaultsTransRoleDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsSkillItem();
  {
    void* ptr = &::_TransRoleData_default_instance_;
    new (ptr) ::TransRoleData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TransRoleData::InitAsDefaultInstance();
}

void InitDefaultsTransRoleData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransRoleDataImpl);
}

void InitDefaultsTransPetDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsSkillItem();
  {
    void* ptr = &::_TransPetData_default_instance_;
    new (ptr) ::TransPetData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TransPetData::InitAsDefaultInstance();
}

void InitDefaultsTransPetData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransPetDataImpl);
}

void InitDefaultsTransPartnerDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsSkillItem();
  {
    void* ptr = &::_TransPartnerData_default_instance_;
    new (ptr) ::TransPartnerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TransPartnerData::InitAsDefaultInstance();
}

void InitDefaultsTransPartnerData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransPartnerDataImpl);
}

void InitDefaultsTransferDataItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsTransRoleData();
  protobuf_Msg_5fGame_2eproto::InitDefaultsTransPetData();
  protobuf_Msg_5fGame_2eproto::InitDefaultsTransPartnerData();
  {
    void* ptr = &::_TransferDataItem_default_instance_;
    new (ptr) ::TransferDataItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TransferDataItem::InitAsDefaultInstance();
}

void InitDefaultsTransferDataItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferDataItemImpl);
}

void InitDefaultsTransferDataReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsTransferDataItem();
  {
    void* ptr = &::_TransferDataReq_default_instance_;
    new (ptr) ::TransferDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TransferDataReq::InitAsDefaultInstance();
}

void InitDefaultsTransferDataReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferDataReqImpl);
}

void InitDefaultsTransferDataAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_TransferDataAck_default_instance_;
    new (ptr) ::TransferDataAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TransferDataAck::InitAsDefaultInstance();
}

void InitDefaultsTransferDataAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferDataAckImpl);
}

void InitDefaultsNotifyIntoSceneImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_NotifyIntoScene_default_instance_;
    new (ptr) ::NotifyIntoScene();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NotifyIntoScene::InitAsDefaultInstance();
}

void InitDefaultsNotifyIntoScene() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNotifyIntoSceneImpl);
}

void InitDefaultsNearByRoleItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_NearByRoleItem_default_instance_;
    new (ptr) ::NearByRoleItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NearByRoleItem::InitAsDefaultInstance();
}

void InitDefaultsNearByRoleItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNearByRoleItemImpl);
}

void InitDefaultsCopyInsItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_CopyInsItem_default_instance_;
    new (ptr) ::CopyInsItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CopyInsItem::InitAsDefaultInstance();
}

void InitDefaultsCopyInsItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCopyInsItemImpl);
}

void InitDefaultsCopyReportReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsCopyInsItem();
  {
    void* ptr = &::_CopyReportReq_default_instance_;
    new (ptr) ::CopyReportReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CopyReportReq::InitAsDefaultInstance();
}

void InitDefaultsCopyReportReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCopyReportReqImpl);
}

void InitDefaultsUseHpBottleReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UseHpBottleReq_default_instance_;
    new (ptr) ::UseHpBottleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UseHpBottleReq::InitAsDefaultInstance();
}

void InitDefaultsUseHpBottleReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUseHpBottleReqImpl);
}

void InitDefaultsUseHpBottleAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UseHpBottleAck_default_instance_;
    new (ptr) ::UseHpBottleAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UseHpBottleAck::InitAsDefaultInstance();
}

void InitDefaultsUseHpBottleAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUseHpBottleAckImpl);
}

void InitDefaultsUseMpBottleReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UseMpBottleReq_default_instance_;
    new (ptr) ::UseMpBottleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UseMpBottleReq::InitAsDefaultInstance();
}

void InitDefaultsUseMpBottleReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUseMpBottleReqImpl);
}

void InitDefaultsUseMpBottleAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UseMpBottleAck_default_instance_;
    new (ptr) ::UseMpBottleAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UseMpBottleAck::InitAsDefaultInstance();
}

void InitDefaultsUseMpBottleAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUseMpBottleAckImpl);
}

void InitDefaultsChatMessageReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ChatMessageReq_default_instance_;
    new (ptr) ::ChatMessageReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatMessageReq::InitAsDefaultInstance();
}

void InitDefaultsChatMessageReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatMessageReqImpl);
}

void InitDefaultsChatMessageAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ChatMessageAck_default_instance_;
    new (ptr) ::ChatMessageAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatMessageAck::InitAsDefaultInstance();
}

void InitDefaultsChatMessageAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatMessageAckImpl);
}

void InitDefaultsChatMessageNtyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ChatMessageNty_default_instance_;
    new (ptr) ::ChatMessageNty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatMessageNty::InitAsDefaultInstance();
}

void InitDefaultsChatMessageNty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatMessageNtyImpl);
}

void InitDefaultsSealAccountReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SealAccountReq_default_instance_;
    new (ptr) ::SealAccountReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SealAccountReq::InitAsDefaultInstance();
}

void InitDefaultsSealAccountReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSealAccountReqImpl);
}

void InitDefaultsSealAccountAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SealAccountAck_default_instance_;
    new (ptr) ::SealAccountAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SealAccountAck::InitAsDefaultInstance();
}

void InitDefaultsSealAccountAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSealAccountAckImpl);
}

void InitDefaultsSetLastServerNtyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetLastServerNty_default_instance_;
    new (ptr) ::SetLastServerNty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetLastServerNty::InitAsDefaultInstance();
}

void InitDefaultsSetLastServerNty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetLastServerNtyImpl);
}

void InitDefaultsCommonReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_CommonReq_default_instance_;
    new (ptr) ::CommonReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CommonReq::InitAsDefaultInstance();
}

void InitDefaultsCommonReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommonReqImpl);
}

void InitDefaultsCommonAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_CommonAck_default_instance_;
    new (ptr) ::CommonAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CommonAck::InitAsDefaultInstance();
}

void InitDefaultsCommonAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommonAckImpl);
}

void InitDefaultsBroadMessageNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_BroadMessageNotify_default_instance_;
    new (ptr) ::BroadMessageNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BroadMessageNotify::InitAsDefaultInstance();
}

void InitDefaultsBroadMessageNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBroadMessageNotifyImpl);
}

void InitDefaultsLogicRegToLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_LogicRegToLoginReq_default_instance_;
    new (ptr) ::LogicRegToLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogicRegToLoginReq::InitAsDefaultInstance();
}

void InitDefaultsLogicRegToLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogicRegToLoginReqImpl);
}

void InitDefaultsLogicRegToLoginAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_LogicRegToLoginAck_default_instance_;
    new (ptr) ::LogicRegToLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogicRegToLoginAck::InitAsDefaultInstance();
}

void InitDefaultsLogicRegToLoginAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogicRegToLoginAckImpl);
}

void InitDefaultsLogicUpdateInfoReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_LogicUpdateInfoReq_default_instance_;
    new (ptr) ::LogicUpdateInfoReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogicUpdateInfoReq::InitAsDefaultInstance();
}

void InitDefaultsLogicUpdateInfoReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogicUpdateInfoReqImpl);
}

void InitDefaultsLogicUpdateInfoAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_LogicUpdateInfoAck_default_instance_;
    new (ptr) ::LogicUpdateInfoAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogicUpdateInfoAck::InitAsDefaultInstance();
}

void InitDefaultsLogicUpdateInfoAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogicUpdateInfoAckImpl);
}

void InitDefaultsWatchHeartBeatReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_WatchHeartBeatReq_default_instance_;
    new (ptr) ::WatchHeartBeatReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WatchHeartBeatReq::InitAsDefaultInstance();
}

void InitDefaultsWatchHeartBeatReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWatchHeartBeatReqImpl);
}

void InitDefaultsWatchHeartBeatAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_WatchHeartBeatAck_default_instance_;
    new (ptr) ::WatchHeartBeatAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WatchHeartBeatAck::InitAsDefaultInstance();
}

void InitDefaultsWatchHeartBeatAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWatchHeartBeatAckImpl);
}

void InitDefaultsSetupEquipReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupEquipReq_default_instance_;
    new (ptr) ::SetupEquipReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupEquipReq::InitAsDefaultInstance();
}

void InitDefaultsSetupEquipReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupEquipReqImpl);
}

void InitDefaultsSetupEquipAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupEquipAck_default_instance_;
    new (ptr) ::SetupEquipAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupEquipAck::InitAsDefaultInstance();
}

void InitDefaultsSetupEquipAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupEquipAckImpl);
}

void InitDefaultsUnsetEquipReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetEquipReq_default_instance_;
    new (ptr) ::UnsetEquipReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetEquipReq::InitAsDefaultInstance();
}

void InitDefaultsUnsetEquipReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetEquipReqImpl);
}

void InitDefaultsUnsetEquipAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetEquipAck_default_instance_;
    new (ptr) ::UnsetEquipAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetEquipAck::InitAsDefaultInstance();
}

void InitDefaultsUnsetEquipAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetEquipAckImpl);
}

void InitDefaultsSetupGemReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupGemReq_default_instance_;
    new (ptr) ::SetupGemReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupGemReq::InitAsDefaultInstance();
}

void InitDefaultsSetupGemReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupGemReqImpl);
}

void InitDefaultsSetupGemAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupGemAck_default_instance_;
    new (ptr) ::SetupGemAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupGemAck::InitAsDefaultInstance();
}

void InitDefaultsSetupGemAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupGemAckImpl);
}

void InitDefaultsUnsetGemReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetGemReq_default_instance_;
    new (ptr) ::UnsetGemReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetGemReq::InitAsDefaultInstance();
}

void InitDefaultsUnsetGemReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetGemReqImpl);
}

void InitDefaultsUnsetGemAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetGemAck_default_instance_;
    new (ptr) ::UnsetGemAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetGemAck::InitAsDefaultInstance();
}

void InitDefaultsUnsetGemAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetGemAckImpl);
}

void InitDefaultsSetupPartnerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupPartnerReq_default_instance_;
    new (ptr) ::SetupPartnerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupPartnerReq::InitAsDefaultInstance();
}

void InitDefaultsSetupPartnerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupPartnerReqImpl);
}

void InitDefaultsSetupPartnerAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupPartnerAck_default_instance_;
    new (ptr) ::SetupPartnerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupPartnerAck::InitAsDefaultInstance();
}

void InitDefaultsSetupPartnerAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupPartnerAckImpl);
}

void InitDefaultsUnsetPartnerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetPartnerReq_default_instance_;
    new (ptr) ::UnsetPartnerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetPartnerReq::InitAsDefaultInstance();
}

void InitDefaultsUnsetPartnerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetPartnerReqImpl);
}

void InitDefaultsUnsetPartnerAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetPartnerAck_default_instance_;
    new (ptr) ::UnsetPartnerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetPartnerAck::InitAsDefaultInstance();
}

void InitDefaultsUnsetPartnerAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetPartnerAckImpl);
}

void InitDefaultsSetupMountReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupMountReq_default_instance_;
    new (ptr) ::SetupMountReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupMountReq::InitAsDefaultInstance();
}

void InitDefaultsSetupMountReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupMountReqImpl);
}

void InitDefaultsSetupMountAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupMountAck_default_instance_;
    new (ptr) ::SetupMountAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupMountAck::InitAsDefaultInstance();
}

void InitDefaultsSetupMountAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupMountAckImpl);
}

void InitDefaultsUnsetMountReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetMountReq_default_instance_;
    new (ptr) ::UnsetMountReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetMountReq::InitAsDefaultInstance();
}

void InitDefaultsUnsetMountReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetMountReqImpl);
}

void InitDefaultsUnsetMountAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetMountAck_default_instance_;
    new (ptr) ::UnsetMountAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetMountAck::InitAsDefaultInstance();
}

void InitDefaultsUnsetMountAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetMountAckImpl);
}

void InitDefaultsSetupPetReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupPetReq_default_instance_;
    new (ptr) ::SetupPetReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupPetReq::InitAsDefaultInstance();
}

void InitDefaultsSetupPetReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupPetReqImpl);
}

void InitDefaultsSetupPetAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_SetupPetAck_default_instance_;
    new (ptr) ::SetupPetAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetupPetAck::InitAsDefaultInstance();
}

void InitDefaultsSetupPetAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupPetAckImpl);
}

void InitDefaultsUnsetPetReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetPetReq_default_instance_;
    new (ptr) ::UnsetPetReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetPetReq::InitAsDefaultInstance();
}

void InitDefaultsUnsetPetReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetPetReqImpl);
}

void InitDefaultsUnsetPetAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UnsetPetAck_default_instance_;
    new (ptr) ::UnsetPetAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnsetPetAck::InitAsDefaultInstance();
}

void InitDefaultsUnsetPetAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsetPetAckImpl);
}

void InitDefaultsStoreBuyReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_StoreBuyReq_default_instance_;
    new (ptr) ::StoreBuyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreBuyReq::InitAsDefaultInstance();
}

void InitDefaultsStoreBuyReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreBuyReqImpl);
}

void InitDefaultsStoreBuyAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_StoreBuyAck_default_instance_;
    new (ptr) ::StoreBuyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreBuyAck::InitAsDefaultInstance();
}

void InitDefaultsStoreBuyAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreBuyAckImpl);
}

void InitDefaultsObjectChangeNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ObjectChangeNotify_default_instance_;
    new (ptr) ::ObjectChangeNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectChangeNotify::InitAsDefaultInstance();
}

void InitDefaultsObjectChangeNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectChangeNotifyImpl);
}

void InitDefaultsHitEffectItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_HitEffectItem_default_instance_;
    new (ptr) ::HitEffectItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HitEffectItem::InitAsDefaultInstance();
}

void InitDefaultsHitEffectItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHitEffectItemImpl);
}

void InitDefaultsHitEffectNtfImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fGame_2eproto::InitDefaultsHitEffectItem();
  {
    void* ptr = &::_HitEffectNtf_default_instance_;
    new (ptr) ::HitEffectNtf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HitEffectNtf::InitAsDefaultInstance();
}

void InitDefaultsHitEffectNtf() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHitEffectNtfImpl);
}

void InitDefaultsUseItemReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UseItemReq_default_instance_;
    new (ptr) ::UseItemReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UseItemReq::InitAsDefaultInstance();
}

void InitDefaultsUseItemReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUseItemReqImpl);
}

void InitDefaultsUseItemAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_UseItemAck_default_instance_;
    new (ptr) ::UseItemAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UseItemAck::InitAsDefaultInstance();
}

void InitDefaultsUseItemAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUseItemAckImpl);
}

void InitDefaultsMsgGetRandomNameReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_MsgGetRandomNameReq_default_instance_;
    new (ptr) ::MsgGetRandomNameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgGetRandomNameReq::InitAsDefaultInstance();
}

void InitDefaultsMsgGetRandomNameReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgGetRandomNameReqImpl);
}

void InitDefaultsMsgGetRandomNameAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_MsgGetRandomNameAck_default_instance_;
    new (ptr) ::MsgGetRandomNameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgGetRandomNameAck::InitAsDefaultInstance();
}

void InitDefaultsMsgGetRandomNameAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgGetRandomNameAckImpl);
}

::google::protobuf::Metadata file_level_metadata[100];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SkillItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SkillItem, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SkillItem, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SkillItem, keypos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GmStopServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GmStopServerReq, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GmStopServerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GmStopServerAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckVersionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckVersionReq, clientverion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckVersionReq, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckVersionAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckVersionAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckVersionAck, clientverion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, idfa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, nettype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, imodel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, phonecpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLog, ipaddr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountRegReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountRegReq, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountRegReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountRegReq, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountRegReq, reglog_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountRegAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountRegAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountRegAck, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginReq, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginReq, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginReq, fromchannel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginReq, loginlog_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginAck, lastsvrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountLoginAck, lastsvrname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerListReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerListReq, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerListReq, clientversion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerNode, svrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerNode, svrname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerNode, svrstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerNode, svrflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerNode, svropentime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerListAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientServerListAck, svrnode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SvrRegToSvrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SvrRegToSvrReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SvrRegToSvrReq, servername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SvrRegToSvrReq, serverip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SvrRegToSvrReq, serverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SvrRegToSvrReq, httpport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SvrRegToSvrAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SvrRegToSvrAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SvrRegToSvrAck, newsvrname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerAck, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerAck, serveraddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerAck, serverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SelectServerAck, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleItem, carrer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleItem, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleListReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleListReq, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleListAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleListAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleListAck, rolelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateReq, carrer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateReq, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateAck, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateAck, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleCreateAck, carrer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDeleteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDeleteReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDeleteReq, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDeleteAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDeleteAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleLoginReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleLoginReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleLoginReq, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleLogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleLogoutReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleLogoutAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleLogoutAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDisconnectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDisconnectReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDisconnectReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDisconnectReq, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDisconnectAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleDisconnectAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleReconnectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleReconnectReq, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleReconnectAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoleReconnectAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneReq, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneReq, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneReq, playernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneReq, createparam_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneAck, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneAck, copyguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneAck, createparam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneAck, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneAck, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateNewSceneAck, playernum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneReq, copyguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneReq, copyid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, copyguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, carrer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, actorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, rolename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, camp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, ft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, mp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, hpmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, mpmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, mountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, equips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterSceneAck, skills_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BackToCityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BackToCityReq, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BackToCityAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BackToCityAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LeaveSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LeaveSceneReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LeaveSceneReq, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LeaveSceneAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LeaveSceneAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneReq, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneNty, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneNty, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneNty, copyguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneNty, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneNty, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AbortSceneNty, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, carrerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, actorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, mountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, robot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, equips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, propertys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransRoleData, skills_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPetData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPetData, petguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPetData, petid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPetData, actorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPetData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPetData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPetData, propertys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPetData, skills_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPartnerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPartnerData, partnerguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPartnerData, partnerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPartnerData, actorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPartnerData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPartnerData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPartnerData, propertys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransPartnerData, skills_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataItem, camp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataItem, roledata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataItem, petdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataItem, partnerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataReq, transdatas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataAck, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataAck, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataAck, copyguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TransferDataAck, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NotifyIntoScene, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NotifyIntoScene, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NotifyIntoScene, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NotifyIntoScene, copyguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NotifyIntoScene, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NearByRoleItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NearByRoleItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NearByRoleItem, actorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NearByRoleItem, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NearByRoleItem, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CopyInsItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CopyInsItem, copyguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CopyInsItem, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CopyInsItem, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CopyInsItem, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CopyReportReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CopyReportReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CopyReportReq, copylist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseHpBottleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseHpBottleAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseHpBottleAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseHpBottleAck, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseMpBottleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseMpBottleAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseMpBottleAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseMpBottleAck, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageReq, srcname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageReq, srcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageReq, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageReq, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageNty, srcname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageNty, srcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageNty, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageNty, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatMessageNty, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountReq, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountReq, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountReq, sealtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountReq, seal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountAck, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SealAccountAck, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetLastServerNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetLastServerNty, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetLastServerNty, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommonReq, param1_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommonAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommonAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BroadMessageNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BroadMessageNotify, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BroadMessageNotify, connid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BroadMessageNotify, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginReq, servername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginReq, serverip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginReq, serverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginReq, httpport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginReq, watchport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicRegToLoginAck, newsvrname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoReq, servername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoReq, maxonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoReq, curonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoReq, totalnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoReq, cachenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoReq, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicUpdateInfoAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WatchHeartBeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WatchHeartBeatReq, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WatchHeartBeatReq, processid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WatchHeartBeatAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WatchHeartBeatAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WatchHeartBeatAck, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WatchHeartBeatAck, processid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupEquipReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupEquipReq, equipguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupEquipReq, bagguid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupEquipAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupEquipAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetEquipReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetEquipReq, equipguid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetEquipAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetEquipAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupGemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupGemReq, gemguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupGemReq, bagguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupGemReq, targetpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupGemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupGemAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetGemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetGemReq, gemguid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetGemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetGemAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupPartnerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupPartnerReq, partnerguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupPartnerReq, targetpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupPartnerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupPartnerAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetPartnerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetPartnerReq, targetpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetPartnerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetPartnerAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupMountReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupMountReq, mountguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupMountReq, targetpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupMountAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupMountAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetMountReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetMountReq, mountguid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetMountAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetMountAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupPetReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupPetReq, petguid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupPetAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetupPetAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetPetReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetPetReq, petguid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetPetAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnsetPetAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreBuyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreBuyReq, storetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreBuyReq, storeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreBuyReq, buynum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreBuyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreBuyAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectChangeNotify, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectChangeNotify, changetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectChangeNotify, intvalue1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectChangeNotify, intvalue2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectChangeNotify, strvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectItem, castguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectItem, targetguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectItem, hurtvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectItem, crit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectItem, hitactionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectItem, hiteffectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectItem, hitdistance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectNtf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HitEffectNtf, itemlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgGetRandomNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgGetRandomNameReq, sex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgGetRandomNameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgGetRandomNameAck, name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SkillItem)},
  { 8, -1, sizeof(::GmStopServerReq)},
  { 14, -1, sizeof(::GmStopServerAck)},
  { 20, -1, sizeof(::CheckVersionReq)},
  { 27, -1, sizeof(::CheckVersionAck)},
  { 34, -1, sizeof(::AccountLog)},
  { 51, -1, sizeof(::AccountRegReq)},
  { 60, -1, sizeof(::AccountRegAck)},
  { 67, -1, sizeof(::AccountLoginReq)},
  { 77, -1, sizeof(::AccountLoginAck)},
  { 86, -1, sizeof(::ClientServerListReq)},
  { 94, -1, sizeof(::ClientServerNode)},
  { 104, -1, sizeof(::ClientServerListAck)},
  { 111, -1, sizeof(::SvrRegToSvrReq)},
  { 121, -1, sizeof(::SvrRegToSvrAck)},
  { 128, -1, sizeof(::SelectServerReq)},
  { 135, -1, sizeof(::SelectServerAck)},
  { 146, -1, sizeof(::RoleItem)},
  { 155, -1, sizeof(::RoleListReq)},
  { 162, -1, sizeof(::RoleListAck)},
  { 170, -1, sizeof(::RoleCreateReq)},
  { 179, -1, sizeof(::RoleCreateAck)},
  { 189, -1, sizeof(::RoleDeleteReq)},
  { 196, -1, sizeof(::RoleDeleteAck)},
  { 202, -1, sizeof(::RoleLoginReq)},
  { 210, -1, sizeof(::RoleLogoutReq)},
  { 216, -1, sizeof(::RoleLogoutAck)},
  { 222, -1, sizeof(::RoleDisconnectReq)},
  { 230, -1, sizeof(::RoleDisconnectAck)},
  { 236, -1, sizeof(::RoleReconnectReq)},
  { 242, -1, sizeof(::RoleReconnectAck)},
  { 248, -1, sizeof(::CreateNewSceneReq)},
  { 257, -1, sizeof(::CreateNewSceneAck)},
  { 269, -1, sizeof(::EnterSceneReq)},
  { 278, -1, sizeof(::EnterSceneAck)},
  { 303, -1, sizeof(::BackToCityReq)},
  { 309, -1, sizeof(::BackToCityAck)},
  { 315, -1, sizeof(::LeaveSceneReq)},
  { 322, -1, sizeof(::LeaveSceneAck)},
  { 328, -1, sizeof(::AbortSceneReq)},
  { 335, -1, sizeof(::AbortSceneAck)},
  { 341, -1, sizeof(::AbortSceneNty)},
  { 352, -1, sizeof(::TransRoleData)},
  { 367, -1, sizeof(::TransPetData)},
  { 379, -1, sizeof(::TransPartnerData)},
  { 391, -1, sizeof(::TransferDataItem)},
  { 400, -1, sizeof(::TransferDataReq)},
  { 406, -1, sizeof(::TransferDataAck)},
  { 416, -1, sizeof(::NotifyIntoScene)},
  { 425, -1, sizeof(::NearByRoleItem)},
  { 434, -1, sizeof(::CopyInsItem)},
  { 443, -1, sizeof(::CopyReportReq)},
  { 450, -1, sizeof(::UseHpBottleReq)},
  { 455, -1, sizeof(::UseHpBottleAck)},
  { 462, -1, sizeof(::UseMpBottleReq)},
  { 467, -1, sizeof(::UseMpBottleAck)},
  { 474, -1, sizeof(::ChatMessageReq)},
  { 484, -1, sizeof(::ChatMessageAck)},
  { 490, -1, sizeof(::ChatMessageNty)},
  { 500, -1, sizeof(::SealAccountReq)},
  { 510, -1, sizeof(::SealAccountAck)},
  { 518, -1, sizeof(::SetLastServerNty)},
  { 525, -1, sizeof(::CommonReq)},
  { 531, -1, sizeof(::CommonAck)},
  { 537, -1, sizeof(::BroadMessageNotify)},
  { 545, -1, sizeof(::LogicRegToLoginReq)},
  { 556, -1, sizeof(::LogicRegToLoginAck)},
  { 563, -1, sizeof(::LogicUpdateInfoReq)},
  { 575, -1, sizeof(::LogicUpdateInfoAck)},
  { 581, -1, sizeof(::WatchHeartBeatReq)},
  { 588, -1, sizeof(::WatchHeartBeatAck)},
  { 596, -1, sizeof(::SetupEquipReq)},
  { 603, -1, sizeof(::SetupEquipAck)},
  { 609, -1, sizeof(::UnsetEquipReq)},
  { 615, -1, sizeof(::UnsetEquipAck)},
  { 621, -1, sizeof(::SetupGemReq)},
  { 629, -1, sizeof(::SetupGemAck)},
  { 635, -1, sizeof(::UnsetGemReq)},
  { 641, -1, sizeof(::UnsetGemAck)},
  { 647, -1, sizeof(::SetupPartnerReq)},
  { 654, -1, sizeof(::SetupPartnerAck)},
  { 660, -1, sizeof(::UnsetPartnerReq)},
  { 666, -1, sizeof(::UnsetPartnerAck)},
  { 672, -1, sizeof(::SetupMountReq)},
  { 679, -1, sizeof(::SetupMountAck)},
  { 685, -1, sizeof(::UnsetMountReq)},
  { 691, -1, sizeof(::UnsetMountAck)},
  { 697, -1, sizeof(::SetupPetReq)},
  { 703, -1, sizeof(::SetupPetAck)},
  { 709, -1, sizeof(::UnsetPetReq)},
  { 715, -1, sizeof(::UnsetPetAck)},
  { 721, -1, sizeof(::StoreBuyReq)},
  { 729, -1, sizeof(::StoreBuyAck)},
  { 735, -1, sizeof(::ObjectChangeNotify)},
  { 745, -1, sizeof(::HitEffectItem)},
  { 757, -1, sizeof(::HitEffectNtf)},
  { 763, -1, sizeof(::UseItemReq)},
  { 768, -1, sizeof(::UseItemAck)},
  { 773, -1, sizeof(::MsgGetRandomNameReq)},
  { 779, -1, sizeof(::MsgGetRandomNameAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SkillItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GmStopServerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GmStopServerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CheckVersionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CheckVersionAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccountLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccountRegReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccountRegAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccountLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccountLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientServerListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientServerNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientServerListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SvrRegToSvrReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SvrRegToSvrAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SelectServerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SelectServerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleCreateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleCreateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleDeleteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleDeleteAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleLogoutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleLogoutAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleDisconnectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleDisconnectAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleReconnectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoleReconnectAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateNewSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateNewSceneAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnterSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnterSceneAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BackToCityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BackToCityAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LeaveSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LeaveSceneAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AbortSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AbortSceneAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AbortSceneNty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TransRoleData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TransPetData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TransPartnerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TransferDataItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TransferDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TransferDataAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NotifyIntoScene_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NearByRoleItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CopyInsItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CopyReportReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UseHpBottleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UseHpBottleAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UseMpBottleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UseMpBottleAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChatMessageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChatMessageAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChatMessageNty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SealAccountReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SealAccountAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetLastServerNty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CommonReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CommonAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BroadMessageNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogicRegToLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogicRegToLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogicUpdateInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogicUpdateInfoAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WatchHeartBeatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WatchHeartBeatAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupEquipReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupEquipAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetEquipReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetEquipAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupGemReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupGemAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetGemReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetGemAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupPartnerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupPartnerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetPartnerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetPartnerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupMountReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupMountAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetMountReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetMountAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupPetReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetupPetAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetPetReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnsetPetAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreBuyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreBuyAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ObjectChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HitEffectItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HitEffectNtf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UseItemReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UseItemAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgGetRandomNameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgGetRandomNameAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Msg_Game.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 100);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016Msg_Game.proto\";\n\tSkillItem\022\017\n\007SkillID"
      "\030\001 \001(\r\022\r\n\005Level\030\002 \001(\005\022\016\n\006KeyPos\030\003 \001(\005\"\037\n"
      "\017GmStopServerReq\022\014\n\004Data\030\001 \001(\r\"\"\n\017GmStop"
      "ServerAck\022\017\n\007RetCode\030\001 \001(\r\"8\n\017CheckVersi"
      "onReq\022\024\n\014ClientVerion\030\001 \001(\t\022\017\n\007Channel\030\002"
      " \001(\005\"8\n\017CheckVersionAck\022\017\n\007RetCode\030\001 \001(\r"
      "\022\024\n\014ClientVerion\030\002 \001(\t\"\323\001\n\nAccountLog\022\017\n"
      "\007Channel\030\001 \001(\005\022\017\n\007Version\030\002 \001(\t\022\021\n\tAccou"
      "ntID\030\003 \001(\005\022\014\n\004Uuid\030\004 \001(\t\022\014\n\004Idfa\030\005 \001(\t\022\017"
      "\n\007NetType\030\006 \001(\t\022\016\n\006Imodel\030\007 \001(\t\022\014\n\004Imei\030"
      "\010 \001(\t\022\022\n\nResolution\030\t \001(\t\022\020\n\010PhoneCpu\030\n "
      "\001(\t\022\017\n\007MacAddr\030\013 \001(\t\022\016\n\006IpAddr\030\014 \001(\005\"d\n\r"
      "AccountRegReq\022\023\n\013AccountName\030\001 \001(\t\022\020\n\010Pa"
      "ssword\030\002 \001(\t\022\017\n\007Channel\030\003 \001(\005\022\033\n\006RegLog\030"
      "\004 \001(\0132\013.AccountLog\"3\n\rAccountRegAck\022\017\n\007R"
      "etCode\030\001 \001(\r\022\021\n\tAccountID\030\002 \001(\004\"}\n\017Accou"
      "ntLoginReq\022\023\n\013AccountName\030\001 \001(\t\022\020\n\010Passw"
      "ord\030\002 \001(\t\022\017\n\007Channel\030\003 \001(\005\022\023\n\013FromChanne"
      "l\030\004 \001(\r\022\035\n\010LoginLog\030\005 \001(\0132\013.AccountLog\"]"
      "\n\017AccountLoginAck\022\017\n\007RetCode\030\001 \001(\r\022\021\n\tAc"
      "countID\030\002 \001(\004\022\021\n\tLastSvrID\030\003 \001(\005\022\023\n\013Last"
      "SvrName\030\004 \001(\t\"P\n\023ClientServerListReq\022\021\n\t"
      "AccountID\030\001 \001(\004\022\017\n\007Channel\030\002 \001(\005\022\025\n\rClie"
      "ntVersion\030\003 \001(\t\"j\n\020ClientServerNode\022\r\n\005S"
      "vrID\030\001 \001(\005\022\017\n\007SvrName\030\002 \001(\t\022\020\n\010SvrState\030"
      "\003 \001(\005\022\017\n\007SvrFlag\030\004 \001(\005\022\023\n\013SvrOpenTime\030\005 "
      "\001(\005\"J\n\023ClientServerListAck\022\017\n\007RetCode\030\001 "
      "\001(\r\022\"\n\007SvrNode\030\002 \003(\0132\021.ClientServerNode\""
      "n\n\016SvrRegToSvrReq\022\020\n\010ServerID\030\001 \001(\005\022\022\n\nS"
      "erverName\030\002 \001(\t\022\020\n\010ServerIp\030\003 \001(\t\022\022\n\nSer"
      "verPort\030\004 \001(\005\022\020\n\010HttpPort\030\005 \001(\005\"5\n\016SvrRe"
      "gToSvrAck\022\017\n\007RetCode\030\001 \001(\r\022\022\n\nNewSvrName"
      "\030\002 \001(\t\"6\n\017SelectServerReq\022\021\n\tAccountID\030\001"
      " \001(\004\022\020\n\010ServerID\030\002 \001(\005\"\202\001\n\017SelectServerA"
      "ck\022\017\n\007RetCode\030\001 \001(\r\022\021\n\tAccountID\030\002 \001(\004\022\020"
      "\n\010ServerID\030\003 \001(\005\022\022\n\nServerAddr\030\004 \001(\t\022\022\n\n"
      "ServerPort\030\005 \001(\005\022\021\n\tLoginCode\030\006 \001(\005\"G\n\010R"
      "oleItem\022\016\n\006RoleID\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\016\n"
      "\006Carrer\030\003 \001(\005\022\r\n\005Level\030\004 \001(\005\"3\n\013RoleList"
      "Req\022\021\n\tAccountID\030\001 \001(\004\022\021\n\tLoginCode\030\002 \001("
      "\005\"N\n\013RoleListAck\022\017\n\007RetCode\030\001 \001(\r\022\021\n\tAcc"
      "ountID\030\002 \001(\004\022\033\n\010RoleList\030\003 \003(\0132\t.RoleIte"
      "m\"Q\n\rRoleCreateReq\022\021\n\tAccountID\030\001 \001(\004\022\014\n"
      "\004Name\030\002 \001(\t\022\016\n\006Carrer\030\003 \001(\005\022\017\n\007Channel\030\004"
      " \001(\005\"a\n\rRoleCreateAck\022\017\n\007RetCode\030\001 \001(\r\022\021"
      "\n\tAccountID\030\002 \001(\004\022\016\n\006RoleID\030\003 \001(\004\022\014\n\004Nam"
      "e\030\004 \001(\t\022\016\n\006Carrer\030\005 \001(\005\"2\n\rRoleDeleteReq"
      "\022\021\n\tAccountID\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004\" \n\rR"
      "oleDeleteAck\022\017\n\007RetCode\030\001 \001(\r\"D\n\014RoleLog"
      "inReq\022\021\n\tAccountID\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004"
      "\022\021\n\tLoginCode\030\003 \001(\005\"\"\n\rRoleLogoutReq\022\021\n\t"
      "AccountID\030\001 \001(\004\" \n\rRoleLogoutAck\022\017\n\007RetC"
      "ode\030\001 \001(\r\"I\n\021RoleDisconnectReq\022\021\n\tAccoun"
      "tID\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004\022\021\n\tLoginCode\030\003"
      " \001(\005\"$\n\021RoleDisconnectAck\022\017\n\007RetCode\030\001 \001"
      "(\r\"\"\n\020RoleReconnectReq\022\016\n\006RoleID\030\001 \001(\004\"#"
      "\n\020RoleReconnectAck\022\017\n\007RetCode\030\001 \001(\r\"]\n\021C"
      "reateNewSceneReq\022\016\n\006CopyID\030\001 \001(\005\022\020\n\010Copy"
      "Type\030\002 \001(\005\022\021\n\tPlayerNum\030\003 \001(\005\022\023\n\013CreateP"
      "aram\030\004 \001(\004\"\222\001\n\021CreateNewSceneAck\022\017\n\007RetC"
      "ode\030\001 \001(\r\022\016\n\006CopyID\030\002 \001(\005\022\020\n\010CopyGuid\030\003 "
      "\001(\005\022\023\n\013CreateParam\030\004 \001(\004\022\020\n\010ServerID\030\005 \001"
      "(\005\022\020\n\010CopyType\030\006 \001(\005\022\021\n\tPlayerNum\030\007 \001(\005\""
      "S\n\rEnterSceneReq\022\016\n\006RoleID\030\001 \001(\004\022\020\n\010Serv"
      "erID\030\002 \001(\005\022\020\n\010CopyGuid\030\003 \001(\005\022\016\n\006CopyID\030\004"
      " \001(\005\"\302\002\n\rEnterSceneAck\022\017\n\007RetCode\030\001 \001(\r\022"
      "\016\n\006CopyID\030\002 \001(\005\022\020\n\010CopyGuid\030\003 \001(\005\022\016\n\006Rol"
      "eID\030\004 \001(\004\022\016\n\006Carrer\030\005 \001(\005\022\017\n\007ActorID\030\006 \001"
      "(\005\022\020\n\010RoleName\030\007 \001(\t\022\014\n\004Camp\030\010 \001(\005\022\t\n\001X\030"
      "\t \001(\002\022\t\n\001Y\030\n \001(\002\022\t\n\001Z\030\013 \001(\002\022\n\n\002Ft\030\014 \001(\002\022"
      "\n\n\002Hp\030\r \001(\005\022\n\n\002Mp\030\016 \001(\005\022\r\n\005HpMax\030\017 \001(\005\022\r"
      "\n\005MpMax\030\020 \001(\005\022\r\n\005Speed\030\021 \001(\005\022\017\n\007MountID\030"
      "\022 \001(\005\022\016\n\006Equips\030\023 \003(\005\022\032\n\006Skills\030\024 \003(\0132\n."
      "SkillItem\"\036\n\rBackToCityReq\022\r\n\005Param\030\001 \001("
      "\r\" \n\rBackToCityAck\022\017\n\007RetCode\030\001 \001(\r\"/\n\rL"
      "eaveSceneReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006Reason\030\002"
      " \001(\005\" \n\rLeaveSceneAck\022\017\n\007RetCode\030\001 \001(\r\"/"
      "\n\rAbortSceneReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006Reaso"
      "n\030\002 \001(\005\" \n\rAbortSceneAck\022\017\n\007RetCode\030\001 \001("
      "\r\"t\n\rAbortSceneNty\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006Co"
      "pyID\030\002 \001(\005\022\020\n\010CopyGuid\030\003 \001(\005\022\020\n\010CopyType"
      "\030\004 \001(\005\022\020\n\010ServerID\030\005 \001(\005\022\r\n\005Param\030\006 \001(\005\""
      "\276\001\n\rTransRoleData\022\016\n\006RoleID\030\001 \001(\004\022\014\n\004Nam"
      "e\030\002 \001(\t\022\020\n\010CarrerID\030\003 \001(\005\022\017\n\007ActorID\030\004 \001"
      "(\005\022\r\n\005Level\030\005 \001(\005\022\017\n\007MountID\030\006 \001(\005\022\r\n\005Ro"
      "bot\030\007 \001(\005\022\016\n\006Equips\030\010 \003(\005\022\021\n\tPropertys\030\t"
      " \003(\005\022\032\n\006Skills\030\n \003(\0132\n.SkillItem\"\213\001\n\014Tra"
      "nsPetData\022\017\n\007PetGuid\030\001 \001(\004\022\r\n\005PetID\030\002 \001("
      "\005\022\017\n\007ActorID\030\003 \001(\005\022\014\n\004Name\030\004 \001(\t\022\r\n\005Leve"
      "l\030\005 \001(\005\022\021\n\tPropertys\030\006 \003(\005\022\032\n\006Skills\030\007 \003"
      "(\0132\n.SkillItem\"\227\001\n\020TransPartnerData\022\023\n\013P"
      "artnerGuid\030\001 \001(\004\022\021\n\tPartnerID\030\002 \001(\005\022\017\n\007A"
      "ctorID\030\003 \001(\005\022\014\n\004Name\030\004 \001(\t\022\r\n\005Level\030\005 \001("
      "\005\022\021\n\tPropertys\030\006 \003(\005\022\032\n\006Skills\030\007 \003(\0132\n.S"
      "killItem\"\212\001\n\020TransferDataItem\022\014\n\004Camp\030\001 "
      "\001(\005\022 \n\010RoleData\030\002 \001(\0132\016.TransRoleData\022\036\n"
      "\007PetData\030\003 \001(\0132\r.TransPetData\022&\n\013Partner"
      "Data\030\004 \001(\0132\021.TransPartnerData\"8\n\017Transfe"
      "rDataReq\022%\n\nTransDatas\030\001 \003(\0132\021.TransferD"
      "ataItem\"f\n\017TransferDataAck\022\017\n\007RetCode\030\001 "
      "\001(\r\022\016\n\006RoleID\030\002 \001(\004\022\016\n\006CopyID\030\003 \001(\005\022\020\n\010C"
      "opyGuid\030\004 \001(\005\022\020\n\010ServerID\030\005 \001(\005\"U\n\017Notif"
      "yIntoScene\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006CopyID\030\002 \001"
      "(\005\022\020\n\010CopyGuid\030\003 \001(\005\022\020\n\010ServerID\030\004 \001(\005\"N"
      "\n\016NearByRoleItem\022\016\n\006RoleID\030\001 \001(\004\022\017\n\007Acto"
      "rID\030\002 \001(\005\022\r\n\005Level\030\003 \001(\005\022\014\n\004Name\030\004 \001(\t\"S"
      "\n\013CopyInsItem\022\020\n\010CopyGuid\030\001 \001(\r\022\016\n\006CopyI"
      "D\030\002 \001(\005\022\020\n\010CopyType\030\003 \001(\005\022\020\n\010ServerID\030\004 "
      "\001(\005\"A\n\rCopyReportReq\022\020\n\010ServerID\030\001 \001(\005\022\036"
      "\n\010CopyList\030\002 \003(\0132\014.CopyInsItem\"\020\n\016UseHpB"
      "ottleReq\"0\n\016UseHpBottleAck\022\017\n\007RetCode\030\001 "
      "\001(\r\022\r\n\005Count\030\002 \001(\005\"\020\n\016UseMpBottleReq\"0\n\016"
      "UseMpBottleAck\022\017\n\007RetCode\030\001 \001(\r\022\r\n\005Count"
      "\030\002 \001(\005\"c\n\016ChatMessageReq\022\017\n\007SrcName\030\001 \001("
      "\t\022\r\n\005SrcID\030\002 \001(\004\022\017\n\007Channel\030\003 \001(\005\022\017\n\007Gui"
      "ldID\030\004 \001(\004\022\017\n\007Content\030\005 \001(\t\"!\n\016ChatMessa"
      "geAck\022\017\n\007RetCode\030\001 \001(\r\"c\n\016ChatMessageNty"
      "\022\017\n\007SrcName\030\001 \001(\t\022\r\n\005SrcID\030\002 \001(\004\022\017\n\007Chan"
      "nel\030\003 \001(\005\022\017\n\007GuildID\030\004 \001(\004\022\017\n\007Content\030\005 "
      "\001(\t\"i\n\016SealAccountReq\022\023\n\013AccountName\030\001 \001"
      "(\t\022\021\n\tAccountID\030\002 \001(\004\022\017\n\007Channel\030\003 \001(\005\022\020"
      "\n\010SealTime\030\004 \001(\005\022\014\n\004Seal\030\005 \001(\010\"I\n\016SealAc"
      "countAck\022\017\n\007RetCode\030\001 \001(\r\022\023\n\013AccountName"
      "\030\002 \001(\t\022\021\n\tAccountID\030\003 \001(\004\"7\n\020SetLastServ"
      "erNty\022\021\n\tAccountID\030\001 \001(\004\022\020\n\010ServerID\030\002 \001"
      "(\005\"\033\n\tCommonReq\022\016\n\006Param1\030\001 \001(\r\"\034\n\tCommo"
      "nAck\022\017\n\007RetCode\030\001 \001(\r\"D\n\022BroadMessageNot"
      "ify\022\r\n\005MsgID\030\001 \001(\r\022\016\n\006ConnID\030\002 \003(\r\022\017\n\007Ms"
      "gData\030\003 \001(\014\"\205\001\n\022LogicRegToLoginReq\022\020\n\010Se"
      "rverID\030\001 \001(\005\022\022\n\nServerName\030\002 \001(\t\022\020\n\010Serv"
      "erIp\030\003 \001(\t\022\022\n\nServerPort\030\004 \001(\005\022\020\n\010HttpPo"
      "rt\030\005 \001(\005\022\021\n\tWatchPort\030\006 \001(\005\"9\n\022LogicRegT"
      "oLoginAck\022\017\n\007RetCode\030\001 \001(\r\022\022\n\nNewSvrName"
      "\030\002 \001(\t\"\224\001\n\022LogicUpdateInfoReq\022\020\n\010ServerI"
      "D\030\001 \001(\005\022\022\n\nServerName\030\002 \001(\t\022\021\n\tMaxOnline"
      "\030\003 \001(\005\022\021\n\tCurOnline\030\004 \001(\005\022\020\n\010TotalNum\030\005 "
      "\001(\005\022\020\n\010CacheNum\030\006 \001(\005\022\016\n\006Status\030\007 \001(\005\"%\n"
      "\022LogicUpdateInfoAck\022\017\n\007RetCode\030\001 \001(\r\"4\n\021"
      "WatchHeartBeatReq\022\014\n\004Data\030\001 \001(\r\022\021\n\tProce"
      "ssID\030\002 \001(\004\"E\n\021WatchHeartBeatAck\022\017\n\007RetCo"
      "de\030\001 \001(\r\022\014\n\004Data\030\002 \001(\r\022\021\n\tProcessID\030\003 \001("
      "\004\"3\n\rSetupEquipReq\022\021\n\tEquipGuid\030\001 \001(\004\022\017\n"
      "\007BagGuid\030\002 \001(\004\" \n\rSetupEquipAck\022\017\n\007RetCo"
      "de\030\001 \001(\r\"\"\n\rUnsetEquipReq\022\021\n\tEquipGuid\030\001"
      " \001(\004\" \n\rUnsetEquipAck\022\017\n\007RetCode\030\001 \001(\r\"B"
      "\n\013SetupGemReq\022\017\n\007GemGuid\030\001 \001(\004\022\017\n\007BagGui"
      "d\030\002 \001(\004\022\021\n\tTargetPos\030\003 \001(\005\"\036\n\013SetupGemAc"
      "k\022\017\n\007RetCode\030\001 \001(\r\"\036\n\013UnsetGemReq\022\017\n\007Gem"
      "Guid\030\001 \001(\004\"\036\n\013UnsetGemAck\022\017\n\007RetCode\030\001 \001"
      "(\r\"9\n\017SetupPartnerReq\022\023\n\013PartnerGuid\030\001 \001"
      "(\004\022\021\n\tTargetPos\030\002 \001(\005\"\"\n\017SetupPartnerAck"
      "\022\017\n\007RetCode\030\001 \001(\r\"$\n\017UnsetPartnerReq\022\021\n\t"
      "TargetPos\030\001 \001(\005\"\"\n\017UnsetPartnerAck\022\017\n\007Re"
      "tCode\030\001 \001(\r\"5\n\rSetupMountReq\022\021\n\tMountGui"
      "d\030\001 \001(\004\022\021\n\tTargetPos\030\002 \001(\005\" \n\rSetupMount"
      "Ack\022\017\n\007RetCode\030\001 \001(\r\"\"\n\rUnsetMountReq\022\021\n"
      "\tMountGuid\030\001 \001(\004\" \n\rUnsetMountAck\022\017\n\007Ret"
      "Code\030\001 \001(\r\"\036\n\013SetupPetReq\022\017\n\007PetGuid\030\001 \001"
      "(\004\"\036\n\013SetupPetAck\022\017\n\007RetCode\030\001 \001(\r\"\036\n\013Un"
      "setPetReq\022\017\n\007PetGuid\030\001 \001(\004\"\036\n\013UnsetPetAc"
      "k\022\017\n\007RetCode\030\001 \001(\r\"A\n\013StoreBuyReq\022\021\n\tSto"
      "reType\030\001 \001(\005\022\017\n\007StoreID\030\002 \001(\005\022\016\n\006BuyNum\030"
      "\003 \001(\005\"\036\n\013StoreBuyAck\022\017\n\007RetCode\030\001 \001(\r\"p\n"
      "\022ObjectChangeNotify\022\016\n\006RoleID\030\001 \001(\003\022\022\n\nC"
      "hangeType\030\002 \001(\005\022\021\n\tIntValue1\030\003 \001(\003\022\021\n\tIn"
      "tValue2\030\004 \001(\003\022\020\n\010StrValue\030\005 \001(\t\"\225\001\n\rHitE"
      "ffectItem\022\020\n\010CastGuid\030\001 \001(\004\022\022\n\nTargetGui"
      "d\030\002 \001(\004\022\021\n\tHurtValue\030\003 \001(\005\022\014\n\004Crit\030\004 \001(\010"
      "\022\023\n\013HitActionID\030\005 \001(\r\022\023\n\013HitEffectID\030\006 \001"
      "(\r\022\023\n\013HitDistance\030\007 \001(\002\"0\n\014HitEffectNtf\022"
      " \n\010ItemList\030\001 \003(\0132\016.HitEffectItem\"\014\n\nUse"
      "ItemReq\"\014\n\nUseItemAck\"\"\n\023MsgGetRandomNam"
      "eReq\022\013\n\003Sex\030\001 \001(\005\"#\n\023MsgGetRandomNameAck"
      "\022\014\n\004Name\030\001 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6942);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_Game.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Msg_5fGame_2eproto

// ===================================================================

void SkillItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillItem::kSkillIDFieldNumber;
const int SkillItem::kLevelFieldNumber;
const int SkillItem::kKeyPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillItem::SkillItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSkillItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillItem)
}
SkillItem::SkillItem(const SkillItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&skillid_, &from.skillid_,
    static_cast<size_t>(reinterpret_cast<char*>(&keypos_) -
    reinterpret_cast<char*>(&skillid_)) + sizeof(keypos_));
  // @@protoc_insertion_point(copy_constructor:SkillItem)
}

void SkillItem::SharedCtor() {
  ::memset(&skillid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keypos_) -
      reinterpret_cast<char*>(&skillid_)) + sizeof(keypos_));
  _cached_size_ = 0;
}

SkillItem::~SkillItem() {
  // @@protoc_insertion_point(destructor:SkillItem)
  SharedDtor();
}

void SkillItem::SharedDtor() {
}

void SkillItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillItem::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillItem& SkillItem::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSkillItem();
  return *internal_default_instance();
}

SkillItem* SkillItem::New(::google::protobuf::Arena* arena) const {
  SkillItem* n = new SkillItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillItem::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&skillid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keypos_) -
      reinterpret_cast<char*>(&skillid_)) + sizeof(keypos_));
  _internal_metadata_.Clear();
}

bool SkillItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 SkillID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 KeyPos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keypos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillItem)
  return false;
#undef DO_
}

void SkillItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SkillID = 1;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->skillid(), output);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // int32 KeyPos = 3;
  if (this->keypos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->keypos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillItem)
}

::google::protobuf::uint8* SkillItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SkillID = 1;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->skillid(), target);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // int32 KeyPos = 3;
  if (this->keypos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->keypos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillItem)
  return target;
}

size_t SkillItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 SkillID = 1;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skillid());
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 KeyPos = 3;
  if (this->keypos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->keypos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillItem)
    MergeFrom(*source);
  }
}

void SkillItem::MergeFrom(const SkillItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.keypos() != 0) {
    set_keypos(from.keypos());
  }
}

void SkillItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillItem::CopyFrom(const SkillItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillItem::IsInitialized() const {
  return true;
}

void SkillItem::Swap(SkillItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillItem::InternalSwap(SkillItem* other) {
  using std::swap;
  swap(skillid_, other->skillid_);
  swap(level_, other->level_);
  swap(keypos_, other->keypos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillItem::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GmStopServerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmStopServerReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmStopServerReq::GmStopServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsGmStopServerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GmStopServerReq)
}
GmStopServerReq::GmStopServerReq(const GmStopServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:GmStopServerReq)
}

void GmStopServerReq::SharedCtor() {
  data_ = 0u;
  _cached_size_ = 0;
}

GmStopServerReq::~GmStopServerReq() {
  // @@protoc_insertion_point(destructor:GmStopServerReq)
  SharedDtor();
}

void GmStopServerReq::SharedDtor() {
}

void GmStopServerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmStopServerReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GmStopServerReq& GmStopServerReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsGmStopServerReq();
  return *internal_default_instance();
}

GmStopServerReq* GmStopServerReq::New(::google::protobuf::Arena* arena) const {
  GmStopServerReq* n = new GmStopServerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmStopServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GmStopServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0u;
  _internal_metadata_.Clear();
}

bool GmStopServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GmStopServerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GmStopServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GmStopServerReq)
  return false;
#undef DO_
}

void GmStopServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GmStopServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GmStopServerReq)
}

::google::protobuf::uint8* GmStopServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GmStopServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GmStopServerReq)
  return target;
}

size_t GmStopServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GmStopServerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmStopServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GmStopServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GmStopServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GmStopServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GmStopServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GmStopServerReq)
    MergeFrom(*source);
  }
}

void GmStopServerReq::MergeFrom(const GmStopServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GmStopServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    set_data(from.data());
  }
}

void GmStopServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GmStopServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmStopServerReq::CopyFrom(const GmStopServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GmStopServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmStopServerReq::IsInitialized() const {
  return true;
}

void GmStopServerReq::Swap(GmStopServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmStopServerReq::InternalSwap(GmStopServerReq* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmStopServerReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GmStopServerAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmStopServerAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmStopServerAck::GmStopServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsGmStopServerAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GmStopServerAck)
}
GmStopServerAck::GmStopServerAck(const GmStopServerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:GmStopServerAck)
}

void GmStopServerAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

GmStopServerAck::~GmStopServerAck() {
  // @@protoc_insertion_point(destructor:GmStopServerAck)
  SharedDtor();
}

void GmStopServerAck::SharedDtor() {
}

void GmStopServerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmStopServerAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GmStopServerAck& GmStopServerAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsGmStopServerAck();
  return *internal_default_instance();
}

GmStopServerAck* GmStopServerAck::New(::google::protobuf::Arena* arena) const {
  GmStopServerAck* n = new GmStopServerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmStopServerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:GmStopServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool GmStopServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GmStopServerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GmStopServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GmStopServerAck)
  return false;
#undef DO_
}

void GmStopServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GmStopServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GmStopServerAck)
}

::google::protobuf::uint8* GmStopServerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GmStopServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GmStopServerAck)
  return target;
}

size_t GmStopServerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GmStopServerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmStopServerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GmStopServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const GmStopServerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GmStopServerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GmStopServerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GmStopServerAck)
    MergeFrom(*source);
  }
}

void GmStopServerAck::MergeFrom(const GmStopServerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GmStopServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GmStopServerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GmStopServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmStopServerAck::CopyFrom(const GmStopServerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GmStopServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmStopServerAck::IsInitialized() const {
  return true;
}

void GmStopServerAck::Swap(GmStopServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmStopServerAck::InternalSwap(GmStopServerAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmStopServerAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckVersionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckVersionReq::kClientVerionFieldNumber;
const int CheckVersionReq::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckVersionReq::CheckVersionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsCheckVersionReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckVersionReq)
}
CheckVersionReq::CheckVersionReq(const CheckVersionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientverion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientverion().size() > 0) {
    clientverion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientverion_);
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:CheckVersionReq)
}

void CheckVersionReq::SharedCtor() {
  clientverion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  _cached_size_ = 0;
}

CheckVersionReq::~CheckVersionReq() {
  // @@protoc_insertion_point(destructor:CheckVersionReq)
  SharedDtor();
}

void CheckVersionReq::SharedDtor() {
  clientverion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckVersionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckVersionReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckVersionReq& CheckVersionReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsCheckVersionReq();
  return *internal_default_instance();
}

CheckVersionReq* CheckVersionReq::New(::google::protobuf::Arena* arena) const {
  CheckVersionReq* n = new CheckVersionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckVersionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientverion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  _internal_metadata_.Clear();
}

bool CheckVersionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckVersionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ClientVerion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientverion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientverion().data(), static_cast<int>(this->clientverion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CheckVersionReq.ClientVerion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckVersionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckVersionReq)
  return false;
#undef DO_
}

void CheckVersionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ClientVerion = 1;
  if (this->clientverion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientverion().data(), static_cast<int>(this->clientverion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionReq.ClientVerion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->clientverion(), output);
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CheckVersionReq)
}

::google::protobuf::uint8* CheckVersionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CheckVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ClientVerion = 1;
  if (this->clientverion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientverion().data(), static_cast<int>(this->clientverion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionReq.ClientVerion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->clientverion(), target);
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CheckVersionReq)
  return target;
}

size_t CheckVersionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CheckVersionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ClientVerion = 1;
  if (this->clientverion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientverion());
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckVersionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckVersionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckVersionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckVersionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckVersionReq)
    MergeFrom(*source);
  }
}

void CheckVersionReq::MergeFrom(const CheckVersionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientverion().size() > 0) {

    clientverion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientverion_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void CheckVersionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVersionReq::CopyFrom(const CheckVersionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVersionReq::IsInitialized() const {
  return true;
}

void CheckVersionReq::Swap(CheckVersionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckVersionReq::InternalSwap(CheckVersionReq* other) {
  using std::swap;
  clientverion_.Swap(&other->clientverion_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckVersionReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckVersionAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckVersionAck::kRetCodeFieldNumber;
const int CheckVersionAck::kClientVerionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckVersionAck::CheckVersionAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsCheckVersionAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckVersionAck)
}
CheckVersionAck::CheckVersionAck(const CheckVersionAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientverion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientverion().size() > 0) {
    clientverion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientverion_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:CheckVersionAck)
}

void CheckVersionAck::SharedCtor() {
  clientverion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0u;
  _cached_size_ = 0;
}

CheckVersionAck::~CheckVersionAck() {
  // @@protoc_insertion_point(destructor:CheckVersionAck)
  SharedDtor();
}

void CheckVersionAck::SharedDtor() {
  clientverion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckVersionAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckVersionAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckVersionAck& CheckVersionAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsCheckVersionAck();
  return *internal_default_instance();
}

CheckVersionAck* CheckVersionAck::New(::google::protobuf::Arena* arena) const {
  CheckVersionAck* n = new CheckVersionAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckVersionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckVersionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientverion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool CheckVersionAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckVersionAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ClientVerion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientverion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientverion().data(), static_cast<int>(this->clientverion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CheckVersionAck.ClientVerion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckVersionAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckVersionAck)
  return false;
#undef DO_
}

void CheckVersionAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckVersionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // string ClientVerion = 2;
  if (this->clientverion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientverion().data(), static_cast<int>(this->clientverion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionAck.ClientVerion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientverion(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CheckVersionAck)
}

::google::protobuf::uint8* CheckVersionAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CheckVersionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // string ClientVerion = 2;
  if (this->clientverion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientverion().data(), static_cast<int>(this->clientverion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionAck.ClientVerion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clientverion(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CheckVersionAck)
  return target;
}

size_t CheckVersionAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CheckVersionAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ClientVerion = 2;
  if (this->clientverion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientverion());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckVersionAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckVersionAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckVersionAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckVersionAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckVersionAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckVersionAck)
    MergeFrom(*source);
  }
}

void CheckVersionAck::MergeFrom(const CheckVersionAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckVersionAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientverion().size() > 0) {

    clientverion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientverion_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void CheckVersionAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckVersionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVersionAck::CopyFrom(const CheckVersionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckVersionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVersionAck::IsInitialized() const {
  return true;
}

void CheckVersionAck::Swap(CheckVersionAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckVersionAck::InternalSwap(CheckVersionAck* other) {
  using std::swap;
  clientverion_.Swap(&other->clientverion_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckVersionAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLog::kChannelFieldNumber;
const int AccountLog::kVersionFieldNumber;
const int AccountLog::kAccountIDFieldNumber;
const int AccountLog::kUuidFieldNumber;
const int AccountLog::kIdfaFieldNumber;
const int AccountLog::kNetTypeFieldNumber;
const int AccountLog::kImodelFieldNumber;
const int AccountLog::kImeiFieldNumber;
const int AccountLog::kResolutionFieldNumber;
const int AccountLog::kPhoneCpuFieldNumber;
const int AccountLog::kMacAddrFieldNumber;
const int AccountLog::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLog::AccountLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountLog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLog)
}
AccountLog::AccountLog(const AccountLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.idfa().size() > 0) {
    idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
  }
  nettype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nettype().size() > 0) {
    nettype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nettype_);
  }
  imodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imodel().size() > 0) {
    imodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imodel_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imei().size() > 0) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  resolution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resolution().size() > 0) {
    resolution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resolution_);
  }
  phonecpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phonecpu().size() > 0) {
    phonecpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonecpu_);
  }
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.macaddr().size() > 0) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&ipaddr_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(ipaddr_));
  // @@protoc_insertion_point(copy_constructor:AccountLog)
}

void AccountLog::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nettype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonecpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ipaddr_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(ipaddr_));
  _cached_size_ = 0;
}

AccountLog::~AccountLog() {
  // @@protoc_insertion_point(destructor:AccountLog)
  SharedDtor();
}

void AccountLog::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nettype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolution_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonecpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLog::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLog& AccountLog::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountLog();
  return *internal_default_instance();
}

AccountLog* AccountLog::New(::google::protobuf::Arena* arena) const {
  AccountLog* n = new AccountLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLog::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nettype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonecpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ipaddr_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(ipaddr_));
  _internal_metadata_.Clear();
}

bool AccountLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AccountID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Uuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Idfa = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idfa()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->idfa().data(), static_cast<int>(this->idfa().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Idfa"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NetType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nettype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nettype().data(), static_cast<int>(this->nettype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.NetType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Imodel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imodel().data(), static_cast<int>(this->imodel().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Imodel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Imei = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Imei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Resolution = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resolution()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resolution().data(), static_cast<int>(this->resolution().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Resolution"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PhoneCpu = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonecpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phonecpu().data(), static_cast<int>(this->phonecpu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.PhoneCpu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MacAddr = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->macaddr().data(), static_cast<int>(this->macaddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.MacAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 IpAddr = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ipaddr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLog)
  return false;
#undef DO_
}

void AccountLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->channel(), output);
  }

  // string Version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // int32 AccountID = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->accountid(), output);
  }

  // string Uuid = 4;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uuid(), output);
  }

  // string Idfa = 5;
  if (this->idfa().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->idfa().data(), static_cast<int>(this->idfa().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Idfa");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->idfa(), output);
  }

  // string NetType = 6;
  if (this->nettype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nettype().data(), static_cast<int>(this->nettype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.NetType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->nettype(), output);
  }

  // string Imodel = 7;
  if (this->imodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imodel().data(), static_cast<int>(this->imodel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Imodel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->imodel(), output);
  }

  // string Imei = 8;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->imei(), output);
  }

  // string Resolution = 9;
  if (this->resolution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resolution().data(), static_cast<int>(this->resolution().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Resolution");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->resolution(), output);
  }

  // string PhoneCpu = 10;
  if (this->phonecpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonecpu().data(), static_cast<int>(this->phonecpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.PhoneCpu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->phonecpu(), output);
  }

  // string MacAddr = 11;
  if (this->macaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->macaddr().data(), static_cast<int>(this->macaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->macaddr(), output);
  }

  // int32 IpAddr = 12;
  if (this->ipaddr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->ipaddr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountLog)
}

::google::protobuf::uint8* AccountLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->channel(), target);
  }

  // string Version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // int32 AccountID = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->accountid(), target);
  }

  // string Uuid = 4;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uuid(), target);
  }

  // string Idfa = 5;
  if (this->idfa().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->idfa().data(), static_cast<int>(this->idfa().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Idfa");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->idfa(), target);
  }

  // string NetType = 6;
  if (this->nettype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nettype().data(), static_cast<int>(this->nettype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.NetType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->nettype(), target);
  }

  // string Imodel = 7;
  if (this->imodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imodel().data(), static_cast<int>(this->imodel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Imodel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->imodel(), target);
  }

  // string Imei = 8;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->imei(), target);
  }

  // string Resolution = 9;
  if (this->resolution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resolution().data(), static_cast<int>(this->resolution().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Resolution");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->resolution(), target);
  }

  // string PhoneCpu = 10;
  if (this->phonecpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonecpu().data(), static_cast<int>(this->phonecpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.PhoneCpu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->phonecpu(), target);
  }

  // string MacAddr = 11;
  if (this->macaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->macaddr().data(), static_cast<int>(this->macaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->macaddr(), target);
  }

  // int32 IpAddr = 12;
  if (this->ipaddr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->ipaddr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountLog)
  return target;
}

size_t AccountLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string Uuid = 4;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // string Idfa = 5;
  if (this->idfa().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->idfa());
  }

  // string NetType = 6;
  if (this->nettype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nettype());
  }

  // string Imodel = 7;
  if (this->imodel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imodel());
  }

  // string Imei = 8;
  if (this->imei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imei());
  }

  // string Resolution = 9;
  if (this->resolution().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resolution());
  }

  // string PhoneCpu = 10;
  if (this->phonecpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonecpu());
  }

  // string MacAddr = 11;
  if (this->macaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->macaddr());
  }

  // int32 Channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // int32 AccountID = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accountid());
  }

  // int32 IpAddr = 12;
  if (this->ipaddr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ipaddr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLog)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLog)
    MergeFrom(*source);
  }
}

void AccountLog::MergeFrom(const AccountLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.idfa().size() > 0) {

    idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
  }
  if (from.nettype().size() > 0) {

    nettype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nettype_);
  }
  if (from.imodel().size() > 0) {

    imodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imodel_);
  }
  if (from.imei().size() > 0) {

    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  if (from.resolution().size() > 0) {

    resolution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resolution_);
  }
  if (from.phonecpu().size() > 0) {

    phonecpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonecpu_);
  }
  if (from.macaddr().size() > 0) {

    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.ipaddr() != 0) {
    set_ipaddr(from.ipaddr());
  }
}

void AccountLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLog::CopyFrom(const AccountLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLog::IsInitialized() const {
  return true;
}

void AccountLog::Swap(AccountLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLog::InternalSwap(AccountLog* other) {
  using std::swap;
  version_.Swap(&other->version_);
  uuid_.Swap(&other->uuid_);
  idfa_.Swap(&other->idfa_);
  nettype_.Swap(&other->nettype_);
  imodel_.Swap(&other->imodel_);
  imei_.Swap(&other->imei_);
  resolution_.Swap(&other->resolution_);
  phonecpu_.Swap(&other->phonecpu_);
  macaddr_.Swap(&other->macaddr_);
  swap(channel_, other->channel_);
  swap(accountid_, other->accountid_);
  swap(ipaddr_, other->ipaddr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLog::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountRegReq::InitAsDefaultInstance() {
  ::_AccountRegReq_default_instance_._instance.get_mutable()->reglog_ = const_cast< ::AccountLog*>(
      ::AccountLog::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountRegReq::kAccountNameFieldNumber;
const int AccountRegReq::kPasswordFieldNumber;
const int AccountRegReq::kChannelFieldNumber;
const int AccountRegReq::kRegLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountRegReq::AccountRegReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountRegReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountRegReq)
}
AccountRegReq::AccountRegReq(const AccountRegReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.has_reglog()) {
    reglog_ = new ::AccountLog(*from.reglog_);
  } else {
    reglog_ = NULL;
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:AccountRegReq)
}

void AccountRegReq::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reglog_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&reglog_)) + sizeof(channel_));
  _cached_size_ = 0;
}

AccountRegReq::~AccountRegReq() {
  // @@protoc_insertion_point(destructor:AccountRegReq)
  SharedDtor();
}

void AccountRegReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete reglog_;
}

void AccountRegReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountRegReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountRegReq& AccountRegReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountRegReq();
  return *internal_default_instance();
}

AccountRegReq* AccountRegReq::New(::google::protobuf::Arena* arena) const {
  AccountRegReq* n = new AccountRegReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountRegReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountRegReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reglog_ != NULL) {
    delete reglog_;
  }
  reglog_ = NULL;
  channel_ = 0;
  _internal_metadata_.Clear();
}

bool AccountRegReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountRegReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string AccountName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), static_cast<int>(this->accountname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountRegReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountRegReq.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AccountLog RegLog = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reglog()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountRegReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountRegReq)
  return false;
#undef DO_
}

void AccountRegReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountRegReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // .AccountLog RegLog = 4;
  if (this->has_reglog()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->reglog_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountRegReq)
}

::google::protobuf::uint8* AccountRegReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountRegReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // .AccountLog RegLog = 4;
  if (this->has_reglog()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->reglog_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountRegReq)
  return target;
}

size_t AccountRegReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountRegReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // .AccountLog RegLog = 4;
  if (this->has_reglog()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reglog_);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountRegReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountRegReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountRegReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountRegReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountRegReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountRegReq)
    MergeFrom(*source);
  }
}

void AccountRegReq::MergeFrom(const AccountRegReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountRegReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.has_reglog()) {
    mutable_reglog()->::AccountLog::MergeFrom(from.reglog());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void AccountRegReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountRegReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountRegReq::CopyFrom(const AccountRegReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountRegReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountRegReq::IsInitialized() const {
  return true;
}

void AccountRegReq::Swap(AccountRegReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountRegReq::InternalSwap(AccountRegReq* other) {
  using std::swap;
  accountname_.Swap(&other->accountname_);
  password_.Swap(&other->password_);
  swap(reglog_, other->reglog_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountRegReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountRegAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountRegAck::kRetCodeFieldNumber;
const int AccountRegAck::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountRegAck::AccountRegAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountRegAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountRegAck)
}
AccountRegAck::AccountRegAck(const AccountRegAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:AccountRegAck)
}

void AccountRegAck::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

AccountRegAck::~AccountRegAck() {
  // @@protoc_insertion_point(destructor:AccountRegAck)
  SharedDtor();
}

void AccountRegAck::SharedDtor() {
}

void AccountRegAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountRegAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountRegAck& AccountRegAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountRegAck();
  return *internal_default_instance();
}

AccountRegAck* AccountRegAck::New(::google::protobuf::Arena* arena) const {
  AccountRegAck* n = new AccountRegAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountRegAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountRegAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool AccountRegAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountRegAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountRegAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountRegAck)
  return false;
#undef DO_
}

void AccountRegAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountRegAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountRegAck)
}

::google::protobuf::uint8* AccountRegAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountRegAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountRegAck)
  return target;
}

size_t AccountRegAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountRegAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountRegAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountRegAck)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountRegAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountRegAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountRegAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountRegAck)
    MergeFrom(*source);
  }
}

void AccountRegAck::MergeFrom(const AccountRegAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountRegAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AccountRegAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountRegAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountRegAck::CopyFrom(const AccountRegAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountRegAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountRegAck::IsInitialized() const {
  return true;
}

void AccountRegAck::Swap(AccountRegAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountRegAck::InternalSwap(AccountRegAck* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountRegAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountLoginReq::InitAsDefaultInstance() {
  ::_AccountLoginReq_default_instance_._instance.get_mutable()->loginlog_ = const_cast< ::AccountLog*>(
      ::AccountLog::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginReq::kAccountNameFieldNumber;
const int AccountLoginReq::kPasswordFieldNumber;
const int AccountLoginReq::kChannelFieldNumber;
const int AccountLoginReq::kFromChannelFieldNumber;
const int AccountLoginReq::kLoginLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginReq::AccountLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLoginReq)
}
AccountLoginReq::AccountLoginReq(const AccountLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.has_loginlog()) {
    loginlog_ = new ::AccountLog(*from.loginlog_);
  } else {
    loginlog_ = NULL;
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&fromchannel_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(fromchannel_));
  // @@protoc_insertion_point(copy_constructor:AccountLoginReq)
}

void AccountLoginReq::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&loginlog_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fromchannel_) -
      reinterpret_cast<char*>(&loginlog_)) + sizeof(fromchannel_));
  _cached_size_ = 0;
}

AccountLoginReq::~AccountLoginReq() {
  // @@protoc_insertion_point(destructor:AccountLoginReq)
  SharedDtor();
}

void AccountLoginReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete loginlog_;
}

void AccountLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLoginReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLoginReq& AccountLoginReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountLoginReq();
  return *internal_default_instance();
}

AccountLoginReq* AccountLoginReq::New(::google::protobuf::Arena* arena) const {
  AccountLoginReq* n = new AccountLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && loginlog_ != NULL) {
    delete loginlog_;
  }
  loginlog_ = NULL;
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fromchannel_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(fromchannel_));
  _internal_metadata_.Clear();
}

bool AccountLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string AccountName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), static_cast<int>(this->accountname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginReq.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 FromChannel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fromchannel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AccountLog LoginLog = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginlog()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLoginReq)
  return false;
#undef DO_
}

void AccountLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // uint32 FromChannel = 4;
  if (this->fromchannel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fromchannel(), output);
  }

  // .AccountLog LoginLog = 5;
  if (this->has_loginlog()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->loginlog_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountLoginReq)
}

::google::protobuf::uint8* AccountLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // uint32 FromChannel = 4;
  if (this->fromchannel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fromchannel(), target);
  }

  // .AccountLog LoginLog = 5;
  if (this->has_loginlog()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->loginlog_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountLoginReq)
  return target;
}

size_t AccountLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // .AccountLog LoginLog = 5;
  if (this->has_loginlog()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginlog_);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // uint32 FromChannel = 4;
  if (this->fromchannel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fromchannel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLoginReq)
    MergeFrom(*source);
  }
}

void AccountLoginReq::MergeFrom(const AccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.has_loginlog()) {
    mutable_loginlog()->::AccountLog::MergeFrom(from.loginlog());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.fromchannel() != 0) {
    set_fromchannel(from.fromchannel());
  }
}

void AccountLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginReq::CopyFrom(const AccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginReq::IsInitialized() const {
  return true;
}

void AccountLoginReq::Swap(AccountLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLoginReq::InternalSwap(AccountLoginReq* other) {
  using std::swap;
  accountname_.Swap(&other->accountname_);
  password_.Swap(&other->password_);
  swap(loginlog_, other->loginlog_);
  swap(channel_, other->channel_);
  swap(fromchannel_, other->fromchannel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLoginReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountLoginAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginAck::kRetCodeFieldNumber;
const int AccountLoginAck::kAccountIDFieldNumber;
const int AccountLoginAck::kLastSvrIDFieldNumber;
const int AccountLoginAck::kLastSvrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginAck::AccountLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountLoginAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLoginAck)
}
AccountLoginAck::AccountLoginAck(const AccountLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lastsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lastsvrname().size() > 0) {
    lastsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastsvrname_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lastsvrid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(lastsvrid_));
  // @@protoc_insertion_point(copy_constructor:AccountLoginAck)
}

void AccountLoginAck::SharedCtor() {
  lastsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastsvrid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(lastsvrid_));
  _cached_size_ = 0;
}

AccountLoginAck::~AccountLoginAck() {
  // @@protoc_insertion_point(destructor:AccountLoginAck)
  SharedDtor();
}

void AccountLoginAck::SharedDtor() {
  lastsvrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLoginAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLoginAck& AccountLoginAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsAccountLoginAck();
  return *internal_default_instance();
}

AccountLoginAck* AccountLoginAck::New(::google::protobuf::Arena* arena) const {
  AccountLoginAck* n = new AccountLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lastsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastsvrid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(lastsvrid_));
  _internal_metadata_.Clear();
}

bool AccountLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LastSvrID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastsvrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LastSvrName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastsvrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastsvrname().data(), static_cast<int>(this->lastsvrname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginAck.LastSvrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLoginAck)
  return false;
#undef DO_
}

void AccountLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lastsvrid(), output);
  }

  // string LastSvrName = 4;
  if (this->lastsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastsvrname().data(), static_cast<int>(this->lastsvrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginAck.LastSvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lastsvrname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountLoginAck)
}

::google::protobuf::uint8* AccountLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lastsvrid(), target);
  }

  // string LastSvrName = 4;
  if (this->lastsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastsvrname().data(), static_cast<int>(this->lastsvrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginAck.LastSvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lastsvrname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountLoginAck)
  return target;
}

size_t AccountLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string LastSvrName = 4;
  if (this->lastsvrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastsvrname());
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lastsvrid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLoginAck)
    MergeFrom(*source);
  }
}

void AccountLoginAck::MergeFrom(const AccountLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lastsvrname().size() > 0) {

    lastsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastsvrname_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.lastsvrid() != 0) {
    set_lastsvrid(from.lastsvrid());
  }
}

void AccountLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginAck::CopyFrom(const AccountLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginAck::IsInitialized() const {
  return true;
}

void AccountLoginAck::Swap(AccountLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLoginAck::InternalSwap(AccountLoginAck* other) {
  using std::swap;
  lastsvrname_.Swap(&other->lastsvrname_);
  swap(accountid_, other->accountid_);
  swap(retcode_, other->retcode_);
  swap(lastsvrid_, other->lastsvrid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLoginAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientServerListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerListReq::kAccountIDFieldNumber;
const int ClientServerListReq::kChannelFieldNumber;
const int ClientServerListReq::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerListReq::ClientServerListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsClientServerListReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerListReq)
}
ClientServerListReq::ClientServerListReq(const ClientServerListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientversion().size() > 0) {
    clientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientversion_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:ClientServerListReq)
}

void ClientServerListReq::SharedCtor() {
  clientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(channel_));
  _cached_size_ = 0;
}

ClientServerListReq::~ClientServerListReq() {
  // @@protoc_insertion_point(destructor:ClientServerListReq)
  SharedDtor();
}

void ClientServerListReq::SharedDtor() {
  clientversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientServerListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerListReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientServerListReq& ClientServerListReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsClientServerListReq();
  return *internal_default_instance();
}

ClientServerListReq* ClientServerListReq::New(::google::protobuf::Arena* arena) const {
  ClientServerListReq* n = new ClientServerListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool ClientServerListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ClientVersion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientversion().data(), static_cast<int>(this->clientversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClientServerListReq.ClientVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerListReq)
  return false;
#undef DO_
}

void ClientServerListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // string ClientVersion = 3;
  if (this->clientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientversion().data(), static_cast<int>(this->clientversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerListReq.ClientVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clientversion(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientServerListReq)
}

::google::protobuf::uint8* ClientServerListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // string ClientVersion = 3;
  if (this->clientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientversion().data(), static_cast<int>(this->clientversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerListReq.ClientVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clientversion(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientServerListReq)
  return target;
}

size_t ClientServerListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ClientVersion = 3;
  if (this->clientversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientversion());
  }

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientServerListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerListReq)
    MergeFrom(*source);
  }
}

void ClientServerListReq::MergeFrom(const ClientServerListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientversion().size() > 0) {

    clientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientversion_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void ClientServerListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerListReq::CopyFrom(const ClientServerListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerListReq::IsInitialized() const {
  return true;
}

void ClientServerListReq::Swap(ClientServerListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerListReq::InternalSwap(ClientServerListReq* other) {
  using std::swap;
  clientversion_.Swap(&other->clientversion_);
  swap(accountid_, other->accountid_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerListReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientServerNode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerNode::kSvrIDFieldNumber;
const int ClientServerNode::kSvrNameFieldNumber;
const int ClientServerNode::kSvrStateFieldNumber;
const int ClientServerNode::kSvrFlagFieldNumber;
const int ClientServerNode::kSvrOpenTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerNode::ClientServerNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsClientServerNode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerNode)
}
ClientServerNode::ClientServerNode(const ClientServerNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  svrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.svrname().size() > 0) {
    svrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrname_);
  }
  ::memcpy(&svrid_, &from.svrid_,
    static_cast<size_t>(reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_)) + sizeof(svropentime_));
  // @@protoc_insertion_point(copy_constructor:ClientServerNode)
}

void ClientServerNode::SharedCtor() {
  svrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&svrid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&svropentime_) -
      reinterpret_cast<char*>(&svrid_)) + sizeof(svropentime_));
  _cached_size_ = 0;
}

ClientServerNode::~ClientServerNode() {
  // @@protoc_insertion_point(destructor:ClientServerNode)
  SharedDtor();
}

void ClientServerNode::SharedDtor() {
  svrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientServerNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerNode::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientServerNode& ClientServerNode::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsClientServerNode();
  return *internal_default_instance();
}

ClientServerNode* ClientServerNode::New(::google::protobuf::Arena* arena) const {
  ClientServerNode* n = new ClientServerNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerNode::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&svrid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&svropentime_) -
      reinterpret_cast<char*>(&svrid_)) + sizeof(svropentime_));
  _internal_metadata_.Clear();
}

bool ClientServerNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 SvrID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SvrName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_svrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->svrname().data(), static_cast<int>(this->svrname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClientServerNode.SvrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SvrState = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svrstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SvrFlag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svrflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SvrOpenTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svropentime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerNode)
  return false;
#undef DO_
}

void ClientServerNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->svrid(), output);
  }

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), static_cast<int>(this->svrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerNode.SvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->svrname(), output);
  }

  // int32 SvrState = 3;
  if (this->svrstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->svrstate(), output);
  }

  // int32 SvrFlag = 4;
  if (this->svrflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->svrflag(), output);
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->svropentime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientServerNode)
}

::google::protobuf::uint8* ClientServerNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->svrid(), target);
  }

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), static_cast<int>(this->svrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerNode.SvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->svrname(), target);
  }

  // int32 SvrState = 3;
  if (this->svrstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->svrstate(), target);
  }

  // int32 SvrFlag = 4;
  if (this->svrflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->svrflag(), target);
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->svropentime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientServerNode)
  return target;
}

size_t ClientServerNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->svrname());
  }

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrid());
  }

  // int32 SvrState = 3;
  if (this->svrstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrstate());
  }

  // int32 SvrFlag = 4;
  if (this->svrflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrflag());
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svropentime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerNode)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientServerNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerNode)
    MergeFrom(*source);
  }
}

void ClientServerNode::MergeFrom(const ClientServerNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.svrname().size() > 0) {

    svrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrname_);
  }
  if (from.svrid() != 0) {
    set_svrid(from.svrid());
  }
  if (from.svrstate() != 0) {
    set_svrstate(from.svrstate());
  }
  if (from.svrflag() != 0) {
    set_svrflag(from.svrflag());
  }
  if (from.svropentime() != 0) {
    set_svropentime(from.svropentime());
  }
}

void ClientServerNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerNode::CopyFrom(const ClientServerNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerNode::IsInitialized() const {
  return true;
}

void ClientServerNode::Swap(ClientServerNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerNode::InternalSwap(ClientServerNode* other) {
  using std::swap;
  svrname_.Swap(&other->svrname_);
  swap(svrid_, other->svrid_);
  swap(svrstate_, other->svrstate_);
  swap(svrflag_, other->svrflag_);
  swap(svropentime_, other->svropentime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerNode::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientServerListAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerListAck::kRetCodeFieldNumber;
const int ClientServerListAck::kSvrNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerListAck::ClientServerListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsClientServerListAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerListAck)
}
ClientServerListAck::ClientServerListAck(const ClientServerListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      svrnode_(from.svrnode_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:ClientServerListAck)
}

void ClientServerListAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

ClientServerListAck::~ClientServerListAck() {
  // @@protoc_insertion_point(destructor:ClientServerListAck)
  SharedDtor();
}

void ClientServerListAck::SharedDtor() {
}

void ClientServerListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerListAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientServerListAck& ClientServerListAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsClientServerListAck();
  return *internal_default_instance();
}

ClientServerListAck* ClientServerListAck::New(::google::protobuf::Arena* arena) const {
  ClientServerListAck* n = new ClientServerListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  svrnode_.Clear();
  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool ClientServerListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ClientServerNode SvrNode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_svrnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerListAck)
  return false;
#undef DO_
}

void ClientServerListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // repeated .ClientServerNode SvrNode = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->svrnode_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->svrnode(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientServerListAck)
}

::google::protobuf::uint8* ClientServerListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // repeated .ClientServerNode SvrNode = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->svrnode_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->svrnode(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientServerListAck)
  return target;
}

size_t ClientServerListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerListAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ClientServerNode SvrNode = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->svrnode_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->svrnode(static_cast<int>(i)));
    }
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientServerListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerListAck)
    MergeFrom(*source);
  }
}

void ClientServerListAck::MergeFrom(const ClientServerListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  svrnode_.MergeFrom(from.svrnode_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ClientServerListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerListAck::CopyFrom(const ClientServerListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerListAck::IsInitialized() const {
  return true;
}

void ClientServerListAck::Swap(ClientServerListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerListAck::InternalSwap(ClientServerListAck* other) {
  using std::swap;
  svrnode_.InternalSwap(&other->svrnode_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerListAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SvrRegToSvrReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SvrRegToSvrReq::kServerIDFieldNumber;
const int SvrRegToSvrReq::kServerNameFieldNumber;
const int SvrRegToSvrReq::kServerIpFieldNumber;
const int SvrRegToSvrReq::kServerPortFieldNumber;
const int SvrRegToSvrReq::kHttpPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SvrRegToSvrReq::SvrRegToSvrReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSvrRegToSvrReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SvrRegToSvrReq)
}
SvrRegToSvrReq::SvrRegToSvrReq(const SvrRegToSvrReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverip().size() > 0) {
    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&httpport_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(httpport_));
  // @@protoc_insertion_point(copy_constructor:SvrRegToSvrReq)
}

void SvrRegToSvrReq::SharedCtor() {
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&httpport_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(httpport_));
  _cached_size_ = 0;
}

SvrRegToSvrReq::~SvrRegToSvrReq() {
  // @@protoc_insertion_point(destructor:SvrRegToSvrReq)
  SharedDtor();
}

void SvrRegToSvrReq::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SvrRegToSvrReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SvrRegToSvrReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SvrRegToSvrReq& SvrRegToSvrReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSvrRegToSvrReq();
  return *internal_default_instance();
}

SvrRegToSvrReq* SvrRegToSvrReq::New(::google::protobuf::Arena* arena) const {
  SvrRegToSvrReq* n = new SvrRegToSvrReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SvrRegToSvrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SvrRegToSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&httpport_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(httpport_));
  _internal_metadata_.Clear();
}

bool SvrRegToSvrReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SvrRegToSvrReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SvrRegToSvrReq.ServerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerIp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverip().data(), static_cast<int>(this->serverip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SvrRegToSvrReq.ServerIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerPort = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 HttpPort = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &httpport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SvrRegToSvrReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SvrRegToSvrReq)
  return false;
#undef DO_
}

void SvrRegToSvrReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SvrRegToSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrReq.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // string ServerIp = 3;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrReq.ServerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->serverip(), output);
  }

  // int32 ServerPort = 4;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverport(), output);
  }

  // int32 HttpPort = 5;
  if (this->httpport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->httpport(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SvrRegToSvrReq)
}

::google::protobuf::uint8* SvrRegToSvrReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SvrRegToSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrReq.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // string ServerIp = 3;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrReq.ServerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->serverip(), target);
  }

  // int32 ServerPort = 4;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverport(), target);
  }

  // int32 HttpPort = 5;
  if (this->httpport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->httpport(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SvrRegToSvrReq)
  return target;
}

size_t SvrRegToSvrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SvrRegToSvrReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ServerName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // string ServerIp = 3;
  if (this->serverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverip());
  }

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // int32 ServerPort = 4;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // int32 HttpPort = 5;
  if (this->httpport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->httpport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SvrRegToSvrReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SvrRegToSvrReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SvrRegToSvrReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SvrRegToSvrReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SvrRegToSvrReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SvrRegToSvrReq)
    MergeFrom(*source);
  }
}

void SvrRegToSvrReq::MergeFrom(const SvrRegToSvrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SvrRegToSvrReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.serverip().size() > 0) {

    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.httpport() != 0) {
    set_httpport(from.httpport());
  }
}

void SvrRegToSvrReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SvrRegToSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SvrRegToSvrReq::CopyFrom(const SvrRegToSvrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SvrRegToSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SvrRegToSvrReq::IsInitialized() const {
  return true;
}

void SvrRegToSvrReq::Swap(SvrRegToSvrReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SvrRegToSvrReq::InternalSwap(SvrRegToSvrReq* other) {
  using std::swap;
  servername_.Swap(&other->servername_);
  serverip_.Swap(&other->serverip_);
  swap(serverid_, other->serverid_);
  swap(serverport_, other->serverport_);
  swap(httpport_, other->httpport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SvrRegToSvrReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SvrRegToSvrAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SvrRegToSvrAck::kRetCodeFieldNumber;
const int SvrRegToSvrAck::kNewSvrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SvrRegToSvrAck::SvrRegToSvrAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSvrRegToSvrAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SvrRegToSvrAck)
}
SvrRegToSvrAck::SvrRegToSvrAck(const SvrRegToSvrAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  newsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newsvrname().size() > 0) {
    newsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newsvrname_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:SvrRegToSvrAck)
}

void SvrRegToSvrAck::SharedCtor() {
  newsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0u;
  _cached_size_ = 0;
}

SvrRegToSvrAck::~SvrRegToSvrAck() {
  // @@protoc_insertion_point(destructor:SvrRegToSvrAck)
  SharedDtor();
}

void SvrRegToSvrAck::SharedDtor() {
  newsvrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SvrRegToSvrAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SvrRegToSvrAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SvrRegToSvrAck& SvrRegToSvrAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSvrRegToSvrAck();
  return *internal_default_instance();
}

SvrRegToSvrAck* SvrRegToSvrAck::New(::google::protobuf::Arena* arena) const {
  SvrRegToSvrAck* n = new SvrRegToSvrAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SvrRegToSvrAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SvrRegToSvrAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool SvrRegToSvrAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SvrRegToSvrAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NewSvrName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newsvrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newsvrname().data(), static_cast<int>(this->newsvrname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SvrRegToSvrAck.NewSvrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SvrRegToSvrAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SvrRegToSvrAck)
  return false;
#undef DO_
}

void SvrRegToSvrAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SvrRegToSvrAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsvrname().data(), static_cast<int>(this->newsvrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrAck.NewSvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->newsvrname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SvrRegToSvrAck)
}

::google::protobuf::uint8* SvrRegToSvrAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SvrRegToSvrAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsvrname().data(), static_cast<int>(this->newsvrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrAck.NewSvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->newsvrname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SvrRegToSvrAck)
  return target;
}

size_t SvrRegToSvrAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SvrRegToSvrAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newsvrname());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SvrRegToSvrAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SvrRegToSvrAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SvrRegToSvrAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SvrRegToSvrAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SvrRegToSvrAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SvrRegToSvrAck)
    MergeFrom(*source);
  }
}

void SvrRegToSvrAck::MergeFrom(const SvrRegToSvrAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SvrRegToSvrAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.newsvrname().size() > 0) {

    newsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newsvrname_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SvrRegToSvrAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SvrRegToSvrAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SvrRegToSvrAck::CopyFrom(const SvrRegToSvrAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SvrRegToSvrAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SvrRegToSvrAck::IsInitialized() const {
  return true;
}

void SvrRegToSvrAck::Swap(SvrRegToSvrAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SvrRegToSvrAck::InternalSwap(SvrRegToSvrAck* other) {
  using std::swap;
  newsvrname_.Swap(&other->newsvrname_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SvrRegToSvrAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectServerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectServerReq::kAccountIDFieldNumber;
const int SelectServerReq::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectServerReq::SelectServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSelectServerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SelectServerReq)
}
SelectServerReq::SelectServerReq(const SelectServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:SelectServerReq)
}

void SelectServerReq::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(serverid_));
  _cached_size_ = 0;
}

SelectServerReq::~SelectServerReq() {
  // @@protoc_insertion_point(destructor:SelectServerReq)
  SharedDtor();
}

void SelectServerReq::SharedDtor() {
}

void SelectServerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectServerReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectServerReq& SelectServerReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSelectServerReq();
  return *internal_default_instance();
}

SelectServerReq* SelectServerReq::New(::google::protobuf::Arena* arena) const {
  SelectServerReq* n = new SelectServerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SelectServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool SelectServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SelectServerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SelectServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SelectServerReq)
  return false;
#undef DO_
}

void SelectServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SelectServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // int32 ServerID = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SelectServerReq)
}

::google::protobuf::uint8* SelectServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SelectServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // int32 ServerID = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SelectServerReq)
  return target;
}

size_t SelectServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SelectServerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // int32 ServerID = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SelectServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SelectServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SelectServerReq)
    MergeFrom(*source);
  }
}

void SelectServerReq::MergeFrom(const SelectServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SelectServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void SelectServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SelectServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectServerReq::CopyFrom(const SelectServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SelectServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectServerReq::IsInitialized() const {
  return true;
}

void SelectServerReq::Swap(SelectServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectServerReq::InternalSwap(SelectServerReq* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectServerReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectServerAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectServerAck::kRetCodeFieldNumber;
const int SelectServerAck::kAccountIDFieldNumber;
const int SelectServerAck::kServerIDFieldNumber;
const int SelectServerAck::kServerAddrFieldNumber;
const int SelectServerAck::kServerPortFieldNumber;
const int SelectServerAck::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectServerAck::SelectServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSelectServerAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SelectServerAck)
}
SelectServerAck::SelectServerAck(const SelectServerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serveraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serveraddr().size() > 0) {
    serveraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddr_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:SelectServerAck)
}

void SelectServerAck::SharedCtor() {
  serveraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logincode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  _cached_size_ = 0;
}

SelectServerAck::~SelectServerAck() {
  // @@protoc_insertion_point(destructor:SelectServerAck)
  SharedDtor();
}

void SelectServerAck::SharedDtor() {
  serveraddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelectServerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectServerAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectServerAck& SelectServerAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSelectServerAck();
  return *internal_default_instance();
}

SelectServerAck* SelectServerAck::New(::google::protobuf::Arena* arena) const {
  SelectServerAck* n = new SelectServerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectServerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SelectServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serveraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logincode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  _internal_metadata_.Clear();
}

bool SelectServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SelectServerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerAddr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serveraddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serveraddr().data(), static_cast<int>(this->serveraddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SelectServerAck.ServerAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerPort = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LoginCode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SelectServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SelectServerAck)
  return false;
#undef DO_
}

void SelectServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SelectServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // int32 ServerID = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->serverid(), output);
  }

  // string ServerAddr = 4;
  if (this->serveraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddr().data(), static_cast<int>(this->serveraddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SelectServerAck.ServerAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->serveraddr(), output);
  }

  // int32 ServerPort = 5;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverport(), output);
  }

  // int32 LoginCode = 6;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->logincode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SelectServerAck)
}

::google::protobuf::uint8* SelectServerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SelectServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // int32 ServerID = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->serverid(), target);
  }

  // string ServerAddr = 4;
  if (this->serveraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddr().data(), static_cast<int>(this->serveraddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SelectServerAck.ServerAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->serveraddr(), target);
  }

  // int32 ServerPort = 5;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverport(), target);
  }

  // int32 LoginCode = 6;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->logincode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SelectServerAck)
  return target;
}

size_t SelectServerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SelectServerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ServerAddr = 4;
  if (this->serveraddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serveraddr());
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 ServerID = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // int32 ServerPort = 5;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // int32 LoginCode = 6;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectServerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SelectServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectServerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectServerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SelectServerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SelectServerAck)
    MergeFrom(*source);
  }
}

void SelectServerAck::MergeFrom(const SelectServerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SelectServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serveraddr().size() > 0) {

    serveraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddr_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void SelectServerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SelectServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectServerAck::CopyFrom(const SelectServerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SelectServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectServerAck::IsInitialized() const {
  return true;
}

void SelectServerAck::Swap(SelectServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectServerAck::InternalSwap(SelectServerAck* other) {
  using std::swap;
  serveraddr_.Swap(&other->serveraddr_);
  swap(accountid_, other->accountid_);
  swap(retcode_, other->retcode_);
  swap(serverid_, other->serverid_);
  swap(serverport_, other->serverport_);
  swap(logincode_, other->logincode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectServerAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleItem::kRoleIDFieldNumber;
const int RoleItem::kNameFieldNumber;
const int RoleItem::kCarrerFieldNumber;
const int RoleItem::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleItem::RoleItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleItem)
}
RoleItem::RoleItem(const RoleItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:RoleItem)
}

void RoleItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(level_));
  _cached_size_ = 0;
}

RoleItem::~RoleItem() {
  // @@protoc_insertion_point(destructor:RoleItem)
  SharedDtor();
}

void RoleItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleItem::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleItem& RoleItem::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleItem();
  return *internal_default_instance();
}

RoleItem* RoleItem::New(::google::protobuf::Arena* arena) const {
  RoleItem* n = new RoleItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleItem::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool RoleItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleItem.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Carrer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleItem)
  return false;
#undef DO_
}

void RoleItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 Carrer = 3;
  if (this->carrer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->carrer(), output);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleItem)
}

::google::protobuf::uint8* RoleItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 Carrer = 3;
  if (this->carrer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->carrer(), target);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleItem)
  return target;
}

size_t RoleItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 Carrer = 3;
  if (this->carrer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrer());
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleItem)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleItem)
    MergeFrom(*source);
  }
}

void RoleItem::MergeFrom(const RoleItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.carrer() != 0) {
    set_carrer(from.carrer());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void RoleItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleItem::CopyFrom(const RoleItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleItem::IsInitialized() const {
  return true;
}

void RoleItem::Swap(RoleItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleItem::InternalSwap(RoleItem* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(roleid_, other->roleid_);
  swap(carrer_, other->carrer_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleItem::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListReq::kAccountIDFieldNumber;
const int RoleListReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListReq::RoleListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleListReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleListReq)
}
RoleListReq::RoleListReq(const RoleListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:RoleListReq)
}

void RoleListReq::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logincode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  _cached_size_ = 0;
}

RoleListReq::~RoleListReq() {
  // @@protoc_insertion_point(destructor:RoleListReq)
  SharedDtor();
}

void RoleListReq::SharedDtor() {
}

void RoleListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleListReq& RoleListReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleListReq();
  return *internal_default_instance();
}

RoleListReq* RoleListReq::New(::google::protobuf::Arena* arena) const {
  RoleListReq* n = new RoleListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logincode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  _internal_metadata_.Clear();
}

bool RoleListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LoginCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleListReq)
  return false;
#undef DO_
}

void RoleListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // int32 LoginCode = 2;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->logincode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleListReq)
}

::google::protobuf::uint8* RoleListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // int32 LoginCode = 2;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->logincode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleListReq)
  return target;
}

size_t RoleListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // int32 LoginCode = 2;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleListReq)
    MergeFrom(*source);
  }
}

void RoleListReq::MergeFrom(const RoleListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListReq::CopyFrom(const RoleListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleListReq::IsInitialized() const {
  return true;
}

void RoleListReq::Swap(RoleListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListReq::InternalSwap(RoleListReq* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(logincode_, other->logincode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleListAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListAck::kRetCodeFieldNumber;
const int RoleListAck::kAccountIDFieldNumber;
const int RoleListAck::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListAck::RoleListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleListAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleListAck)
}
RoleListAck::RoleListAck(const RoleListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rolelist_(from.rolelist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:RoleListAck)
}

void RoleListAck::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

RoleListAck::~RoleListAck() {
  // @@protoc_insertion_point(destructor:RoleListAck)
  SharedDtor();
}

void RoleListAck::SharedDtor() {
}

void RoleListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleListAck& RoleListAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleListAck();
  return *internal_default_instance();
}

RoleListAck* RoleListAck::New(::google::protobuf::Arena* arena) const {
  RoleListAck* n = new RoleListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rolelist_.Clear();
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool RoleListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RoleItem RoleList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rolelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleListAck)
  return false;
#undef DO_
}

void RoleListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // repeated .RoleItem RoleList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rolelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rolelist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleListAck)
}

::google::protobuf::uint8* RoleListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // repeated .RoleItem RoleList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rolelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rolelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleListAck)
  return target;
}

size_t RoleListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleListAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .RoleItem RoleList = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->rolelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rolelist(static_cast<int>(i)));
    }
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleListAck)
    MergeFrom(*source);
  }
}

void RoleListAck::MergeFrom(const RoleListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rolelist_.MergeFrom(from.rolelist_);
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListAck::CopyFrom(const RoleListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleListAck::IsInitialized() const {
  return true;
}

void RoleListAck::Swap(RoleListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListAck::InternalSwap(RoleListAck* other) {
  using std::swap;
  rolelist_.InternalSwap(&other->rolelist_);
  swap(accountid_, other->accountid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleCreateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleCreateReq::kAccountIDFieldNumber;
const int RoleCreateReq::kNameFieldNumber;
const int RoleCreateReq::kCarrerFieldNumber;
const int RoleCreateReq::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleCreateReq::RoleCreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleCreateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleCreateReq)
}
RoleCreateReq::RoleCreateReq(const RoleCreateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:RoleCreateReq)
}

void RoleCreateReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(channel_));
  _cached_size_ = 0;
}

RoleCreateReq::~RoleCreateReq() {
  // @@protoc_insertion_point(destructor:RoleCreateReq)
  SharedDtor();
}

void RoleCreateReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleCreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleCreateReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleCreateReq& RoleCreateReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleCreateReq();
  return *internal_default_instance();
}

RoleCreateReq* RoleCreateReq::New(::google::protobuf::Arena* arena) const {
  RoleCreateReq* n = new RoleCreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool RoleCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleCreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleCreateReq.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Carrer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleCreateReq)
  return false;
#undef DO_
}

void RoleCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateReq.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 Carrer = 3;
  if (this->carrer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->carrer(), output);
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleCreateReq)
}

::google::protobuf::uint8* RoleCreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateReq.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 Carrer = 3;
  if (this->carrer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->carrer(), target);
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleCreateReq)
  return target;
}

size_t RoleCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleCreateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // int32 Carrer = 3;
  if (this->carrer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrer());
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleCreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleCreateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleCreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleCreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleCreateReq)
    MergeFrom(*source);
  }
}

void RoleCreateReq::MergeFrom(const RoleCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.carrer() != 0) {
    set_carrer(from.carrer());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void RoleCreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleCreateReq::CopyFrom(const RoleCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCreateReq::IsInitialized() const {
  return true;
}

void RoleCreateReq::Swap(RoleCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleCreateReq::InternalSwap(RoleCreateReq* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(accountid_, other->accountid_);
  swap(carrer_, other->carrer_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleCreateReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleCreateAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleCreateAck::kRetCodeFieldNumber;
const int RoleCreateAck::kAccountIDFieldNumber;
const int RoleCreateAck::kRoleIDFieldNumber;
const int RoleCreateAck::kNameFieldNumber;
const int RoleCreateAck::kCarrerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleCreateAck::RoleCreateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleCreateAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleCreateAck)
}
RoleCreateAck::RoleCreateAck(const RoleCreateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&carrer_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(carrer_));
  // @@protoc_insertion_point(copy_constructor:RoleCreateAck)
}

void RoleCreateAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&carrer_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(carrer_));
  _cached_size_ = 0;
}

RoleCreateAck::~RoleCreateAck() {
  // @@protoc_insertion_point(destructor:RoleCreateAck)
  SharedDtor();
}

void RoleCreateAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleCreateAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleCreateAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleCreateAck& RoleCreateAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleCreateAck();
  return *internal_default_instance();
}

RoleCreateAck* RoleCreateAck::New(::google::protobuf::Arena* arena) const {
  RoleCreateAck* n = new RoleCreateAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleCreateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleCreateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&carrer_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(carrer_));
  _internal_metadata_.Clear();
}

bool RoleCreateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleCreateAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleCreateAck.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Carrer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleCreateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleCreateAck)
  return false;
#undef DO_
}

void RoleCreateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleCreateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roleid(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateAck.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // int32 Carrer = 5;
  if (this->carrer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->carrer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleCreateAck)
}

::google::protobuf::uint8* RoleCreateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleCreateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roleid(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateAck.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // int32 Carrer = 5;
  if (this->carrer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->carrer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleCreateAck)
  return target;
}

size_t RoleCreateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleCreateAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 Carrer = 5;
  if (this->carrer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrer());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleCreateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleCreateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleCreateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleCreateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleCreateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleCreateAck)
    MergeFrom(*source);
  }
}

void RoleCreateAck::MergeFrom(const RoleCreateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleCreateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.carrer() != 0) {
    set_carrer(from.carrer());
  }
}

void RoleCreateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleCreateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleCreateAck::CopyFrom(const RoleCreateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleCreateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCreateAck::IsInitialized() const {
  return true;
}

void RoleCreateAck::Swap(RoleCreateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleCreateAck::InternalSwap(RoleCreateAck* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(accountid_, other->accountid_);
  swap(roleid_, other->roleid_);
  swap(retcode_, other->retcode_);
  swap(carrer_, other->carrer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleCreateAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleDeleteReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDeleteReq::kAccountIDFieldNumber;
const int RoleDeleteReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDeleteReq::RoleDeleteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleDeleteReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDeleteReq)
}
RoleDeleteReq::RoleDeleteReq(const RoleDeleteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(roleid_));
  // @@protoc_insertion_point(copy_constructor:RoleDeleteReq)
}

void RoleDeleteReq::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roleid_));
  _cached_size_ = 0;
}

RoleDeleteReq::~RoleDeleteReq() {
  // @@protoc_insertion_point(destructor:RoleDeleteReq)
  SharedDtor();
}

void RoleDeleteReq::SharedDtor() {
}

void RoleDeleteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDeleteReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDeleteReq& RoleDeleteReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleDeleteReq();
  return *internal_default_instance();
}

RoleDeleteReq* RoleDeleteReq::New(::google::protobuf::Arena* arena) const {
  RoleDeleteReq* n = new RoleDeleteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDeleteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roleid_));
  _internal_metadata_.Clear();
}

bool RoleDeleteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDeleteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDeleteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDeleteReq)
  return false;
#undef DO_
}

void RoleDeleteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleDeleteReq)
}

::google::protobuf::uint8* RoleDeleteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleDeleteReq)
  return target;
}

size_t RoleDeleteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDeleteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDeleteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDeleteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDeleteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDeleteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDeleteReq)
    MergeFrom(*source);
  }
}

void RoleDeleteReq::MergeFrom(const RoleDeleteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleDeleteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDeleteReq::CopyFrom(const RoleDeleteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDeleteReq::IsInitialized() const {
  return true;
}

void RoleDeleteReq::Swap(RoleDeleteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDeleteReq::InternalSwap(RoleDeleteReq* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(roleid_, other->roleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDeleteReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleDeleteAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDeleteAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDeleteAck::RoleDeleteAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleDeleteAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDeleteAck)
}
RoleDeleteAck::RoleDeleteAck(const RoleDeleteAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleDeleteAck)
}

void RoleDeleteAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RoleDeleteAck::~RoleDeleteAck() {
  // @@protoc_insertion_point(destructor:RoleDeleteAck)
  SharedDtor();
}

void RoleDeleteAck::SharedDtor() {
}

void RoleDeleteAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDeleteAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDeleteAck& RoleDeleteAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleDeleteAck();
  return *internal_default_instance();
}

RoleDeleteAck* RoleDeleteAck::New(::google::protobuf::Arena* arena) const {
  RoleDeleteAck* n = new RoleDeleteAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDeleteAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDeleteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool RoleDeleteAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDeleteAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDeleteAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDeleteAck)
  return false;
#undef DO_
}

void RoleDeleteAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDeleteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleDeleteAck)
}

::google::protobuf::uint8* RoleDeleteAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleDeleteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleDeleteAck)
  return target;
}

size_t RoleDeleteAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDeleteAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDeleteAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDeleteAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDeleteAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDeleteAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDeleteAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDeleteAck)
    MergeFrom(*source);
  }
}

void RoleDeleteAck::MergeFrom(const RoleDeleteAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDeleteAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleDeleteAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDeleteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDeleteAck::CopyFrom(const RoleDeleteAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDeleteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDeleteAck::IsInitialized() const {
  return true;
}

void RoleDeleteAck::Swap(RoleDeleteAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDeleteAck::InternalSwap(RoleDeleteAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDeleteAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLoginReq::kAccountIDFieldNumber;
const int RoleLoginReq::kRoleIDFieldNumber;
const int RoleLoginReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLoginReq::RoleLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLoginReq)
}
RoleLoginReq::RoleLoginReq(const RoleLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:RoleLoginReq)
}

void RoleLoginReq::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logincode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  _cached_size_ = 0;
}

RoleLoginReq::~RoleLoginReq() {
  // @@protoc_insertion_point(destructor:RoleLoginReq)
  SharedDtor();
}

void RoleLoginReq::SharedDtor() {
}

void RoleLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLoginReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLoginReq& RoleLoginReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleLoginReq();
  return *internal_default_instance();
}

RoleLoginReq* RoleLoginReq::New(::google::protobuf::Arena* arena) const {
  RoleLoginReq* n = new RoleLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logincode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  _internal_metadata_.Clear();
}

bool RoleLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LoginCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLoginReq)
  return false;
#undef DO_
}

void RoleLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // int32 LoginCode = 3;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->logincode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleLoginReq)
}

::google::protobuf::uint8* RoleLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // int32 LoginCode = 3;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->logincode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleLoginReq)
  return target;
}

size_t RoleLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 LoginCode = 3;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLoginReq)
    MergeFrom(*source);
  }
}

void RoleLoginReq::MergeFrom(const RoleLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLoginReq::CopyFrom(const RoleLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLoginReq::IsInitialized() const {
  return true;
}

void RoleLoginReq::Swap(RoleLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLoginReq::InternalSwap(RoleLoginReq* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(roleid_, other->roleid_);
  swap(logincode_, other->logincode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLoginReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleLogoutReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLogoutReq::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLogoutReq::RoleLogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleLogoutReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLogoutReq)
}
RoleLogoutReq::RoleLogoutReq(const RoleLogoutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:RoleLogoutReq)
}

void RoleLogoutReq::SharedCtor() {
  accountid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RoleLogoutReq::~RoleLogoutReq() {
  // @@protoc_insertion_point(destructor:RoleLogoutReq)
  SharedDtor();
}

void RoleLogoutReq::SharedDtor() {
}

void RoleLogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLogoutReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLogoutReq& RoleLogoutReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleLogoutReq();
  return *internal_default_instance();
}

RoleLogoutReq* RoleLogoutReq::New(::google::protobuf::Arena* arena) const {
  RoleLogoutReq* n = new RoleLogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RoleLogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLogoutReq)
  return false;
#undef DO_
}

void RoleLogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleLogoutReq)
}

::google::protobuf::uint8* RoleLogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleLogoutReq)
  return target;
}

size_t RoleLogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLogoutReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLogoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLogoutReq)
    MergeFrom(*source);
  }
}

void RoleLogoutReq::MergeFrom(const RoleLogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void RoleLogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLogoutReq::CopyFrom(const RoleLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLogoutReq::IsInitialized() const {
  return true;
}

void RoleLogoutReq::Swap(RoleLogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLogoutReq::InternalSwap(RoleLogoutReq* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLogoutReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleLogoutAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLogoutAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLogoutAck::RoleLogoutAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleLogoutAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLogoutAck)
}
RoleLogoutAck::RoleLogoutAck(const RoleLogoutAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleLogoutAck)
}

void RoleLogoutAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RoleLogoutAck::~RoleLogoutAck() {
  // @@protoc_insertion_point(destructor:RoleLogoutAck)
  SharedDtor();
}

void RoleLogoutAck::SharedDtor() {
}

void RoleLogoutAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLogoutAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLogoutAck& RoleLogoutAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleLogoutAck();
  return *internal_default_instance();
}

RoleLogoutAck* RoleLogoutAck::New(::google::protobuf::Arena* arena) const {
  RoleLogoutAck* n = new RoleLogoutAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLogoutAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool RoleLogoutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLogoutAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLogoutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLogoutAck)
  return false;
#undef DO_
}

void RoleLogoutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleLogoutAck)
}

::google::protobuf::uint8* RoleLogoutAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleLogoutAck)
  return target;
}

size_t RoleLogoutAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLogoutAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLogoutAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLogoutAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLogoutAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLogoutAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLogoutAck)
    MergeFrom(*source);
  }
}

void RoleLogoutAck::MergeFrom(const RoleLogoutAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleLogoutAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLogoutAck::CopyFrom(const RoleLogoutAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLogoutAck::IsInitialized() const {
  return true;
}

void RoleLogoutAck::Swap(RoleLogoutAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLogoutAck::InternalSwap(RoleLogoutAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLogoutAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleDisconnectReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDisconnectReq::kAccountIDFieldNumber;
const int RoleDisconnectReq::kRoleIDFieldNumber;
const int RoleDisconnectReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDisconnectReq::RoleDisconnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleDisconnectReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDisconnectReq)
}
RoleDisconnectReq::RoleDisconnectReq(const RoleDisconnectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:RoleDisconnectReq)
}

void RoleDisconnectReq::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logincode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  _cached_size_ = 0;
}

RoleDisconnectReq::~RoleDisconnectReq() {
  // @@protoc_insertion_point(destructor:RoleDisconnectReq)
  SharedDtor();
}

void RoleDisconnectReq::SharedDtor() {
}

void RoleDisconnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDisconnectReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDisconnectReq& RoleDisconnectReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleDisconnectReq();
  return *internal_default_instance();
}

RoleDisconnectReq* RoleDisconnectReq::New(::google::protobuf::Arena* arena) const {
  RoleDisconnectReq* n = new RoleDisconnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDisconnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDisconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logincode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logincode_));
  _internal_metadata_.Clear();
}

bool RoleDisconnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDisconnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LoginCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDisconnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDisconnectReq)
  return false;
#undef DO_
}

void RoleDisconnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDisconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // int32 LoginCode = 3;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->logincode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleDisconnectReq)
}

::google::protobuf::uint8* RoleDisconnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleDisconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // int32 LoginCode = 3;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->logincode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleDisconnectReq)
  return target;
}

size_t RoleDisconnectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDisconnectReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 LoginCode = 3;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDisconnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDisconnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDisconnectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDisconnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDisconnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDisconnectReq)
    MergeFrom(*source);
  }
}

void RoleDisconnectReq::MergeFrom(const RoleDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDisconnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleDisconnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDisconnectReq::CopyFrom(const RoleDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDisconnectReq::IsInitialized() const {
  return true;
}

void RoleDisconnectReq::Swap(RoleDisconnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDisconnectReq::InternalSwap(RoleDisconnectReq* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(roleid_, other->roleid_);
  swap(logincode_, other->logincode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDisconnectReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleDisconnectAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDisconnectAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDisconnectAck::RoleDisconnectAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleDisconnectAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDisconnectAck)
}
RoleDisconnectAck::RoleDisconnectAck(const RoleDisconnectAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleDisconnectAck)
}

void RoleDisconnectAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RoleDisconnectAck::~RoleDisconnectAck() {
  // @@protoc_insertion_point(destructor:RoleDisconnectAck)
  SharedDtor();
}

void RoleDisconnectAck::SharedDtor() {
}

void RoleDisconnectAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDisconnectAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDisconnectAck& RoleDisconnectAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleDisconnectAck();
  return *internal_default_instance();
}

RoleDisconnectAck* RoleDisconnectAck::New(::google::protobuf::Arena* arena) const {
  RoleDisconnectAck* n = new RoleDisconnectAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDisconnectAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDisconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool RoleDisconnectAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDisconnectAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDisconnectAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDisconnectAck)
  return false;
#undef DO_
}

void RoleDisconnectAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDisconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleDisconnectAck)
}

::google::protobuf::uint8* RoleDisconnectAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleDisconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleDisconnectAck)
  return target;
}

size_t RoleDisconnectAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDisconnectAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDisconnectAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDisconnectAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDisconnectAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDisconnectAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDisconnectAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDisconnectAck)
    MergeFrom(*source);
  }
}

void RoleDisconnectAck::MergeFrom(const RoleDisconnectAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDisconnectAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleDisconnectAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDisconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDisconnectAck::CopyFrom(const RoleDisconnectAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDisconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDisconnectAck::IsInitialized() const {
  return true;
}

void RoleDisconnectAck::Swap(RoleDisconnectAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDisconnectAck::InternalSwap(RoleDisconnectAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDisconnectAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleReconnectReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleReconnectReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleReconnectReq::RoleReconnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleReconnectReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleReconnectReq)
}
RoleReconnectReq::RoleReconnectReq(const RoleReconnectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:RoleReconnectReq)
}

void RoleReconnectReq::SharedCtor() {
  roleid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RoleReconnectReq::~RoleReconnectReq() {
  // @@protoc_insertion_point(destructor:RoleReconnectReq)
  SharedDtor();
}

void RoleReconnectReq::SharedDtor() {
}

void RoleReconnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleReconnectReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleReconnectReq& RoleReconnectReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleReconnectReq();
  return *internal_default_instance();
}

RoleReconnectReq* RoleReconnectReq::New(::google::protobuf::Arena* arena) const {
  RoleReconnectReq* n = new RoleReconnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleReconnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleReconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RoleReconnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleReconnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleReconnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleReconnectReq)
  return false;
#undef DO_
}

void RoleReconnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleReconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleReconnectReq)
}

::google::protobuf::uint8* RoleReconnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleReconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleReconnectReq)
  return target;
}

size_t RoleReconnectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleReconnectReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleReconnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleReconnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleReconnectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleReconnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleReconnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleReconnectReq)
    MergeFrom(*source);
  }
}

void RoleReconnectReq::MergeFrom(const RoleReconnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleReconnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleReconnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleReconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleReconnectReq::CopyFrom(const RoleReconnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleReconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleReconnectReq::IsInitialized() const {
  return true;
}

void RoleReconnectReq::Swap(RoleReconnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleReconnectReq::InternalSwap(RoleReconnectReq* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleReconnectReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleReconnectAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleReconnectAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleReconnectAck::RoleReconnectAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleReconnectAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleReconnectAck)
}
RoleReconnectAck::RoleReconnectAck(const RoleReconnectAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleReconnectAck)
}

void RoleReconnectAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RoleReconnectAck::~RoleReconnectAck() {
  // @@protoc_insertion_point(destructor:RoleReconnectAck)
  SharedDtor();
}

void RoleReconnectAck::SharedDtor() {
}

void RoleReconnectAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleReconnectAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleReconnectAck& RoleReconnectAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsRoleReconnectAck();
  return *internal_default_instance();
}

RoleReconnectAck* RoleReconnectAck::New(::google::protobuf::Arena* arena) const {
  RoleReconnectAck* n = new RoleReconnectAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleReconnectAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleReconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool RoleReconnectAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleReconnectAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleReconnectAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleReconnectAck)
  return false;
#undef DO_
}

void RoleReconnectAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleReconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleReconnectAck)
}

::google::protobuf::uint8* RoleReconnectAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleReconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleReconnectAck)
  return target;
}

size_t RoleReconnectAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleReconnectAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleReconnectAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleReconnectAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleReconnectAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleReconnectAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleReconnectAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleReconnectAck)
    MergeFrom(*source);
  }
}

void RoleReconnectAck::MergeFrom(const RoleReconnectAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleReconnectAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleReconnectAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleReconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleReconnectAck::CopyFrom(const RoleReconnectAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleReconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleReconnectAck::IsInitialized() const {
  return true;
}

void RoleReconnectAck::Swap(RoleReconnectAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleReconnectAck::InternalSwap(RoleReconnectAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleReconnectAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateNewSceneReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneReq::kCopyIDFieldNumber;
const int CreateNewSceneReq::kCopyTypeFieldNumber;
const int CreateNewSceneReq::kPlayerNumFieldNumber;
const int CreateNewSceneReq::kCreateParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneReq::CreateNewSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsCreateNewSceneReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateNewSceneReq)
}
CreateNewSceneReq::CreateNewSceneReq(const CreateNewSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&copyid_, &from.copyid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playernum_) -
    reinterpret_cast<char*>(&copyid_)) + sizeof(playernum_));
  // @@protoc_insertion_point(copy_constructor:CreateNewSceneReq)
}

void CreateNewSceneReq::SharedCtor() {
  ::memset(&copyid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playernum_) -
      reinterpret_cast<char*>(&copyid_)) + sizeof(playernum_));
  _cached_size_ = 0;
}

CreateNewSceneReq::~CreateNewSceneReq() {
  // @@protoc_insertion_point(destructor:CreateNewSceneReq)
  SharedDtor();
}

void CreateNewSceneReq::SharedDtor() {
}

void CreateNewSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewSceneReq& CreateNewSceneReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsCreateNewSceneReq();
  return *internal_default_instance();
}

CreateNewSceneReq* CreateNewSceneReq::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneReq* n = new CreateNewSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateNewSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&copyid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playernum_) -
      reinterpret_cast<char*>(&copyid_)) + sizeof(playernum_));
  _internal_metadata_.Clear();
}

bool CreateNewSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateNewSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 CopyID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PlayerNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CreateParam = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createparam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateNewSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateNewSceneReq)
  return false;
#undef DO_
}

void CreateNewSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateNewSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 CopyID = 1;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->copyid(), output);
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copytype(), output);
  }

  // int32 PlayerNum = 3;
  if (this->playernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->playernum(), output);
  }

  // uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->createparam(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateNewSceneReq)
}

::google::protobuf::uint8* CreateNewSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateNewSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 CopyID = 1;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->copyid(), target);
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copytype(), target);
  }

  // int32 PlayerNum = 3;
  if (this->playernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->playernum(), target);
  }

  // uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->createparam(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateNewSceneReq)
  return target;
}

size_t CreateNewSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateNewSceneReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 CopyID = 1;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createparam());
  }

  // int32 PlayerNum = 3;
  if (this->playernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playernum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateNewSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateNewSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateNewSceneReq)
    MergeFrom(*source);
  }
}

void CreateNewSceneReq::MergeFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateNewSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.createparam() != 0) {
    set_createparam(from.createparam());
  }
  if (from.playernum() != 0) {
    set_playernum(from.playernum());
  }
}

void CreateNewSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneReq::CopyFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneReq::IsInitialized() const {
  return true;
}

void CreateNewSceneReq::Swap(CreateNewSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneReq::InternalSwap(CreateNewSceneReq* other) {
  using std::swap;
  swap(copyid_, other->copyid_);
  swap(copytype_, other->copytype_);
  swap(createparam_, other->createparam_);
  swap(playernum_, other->playernum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateNewSceneAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneAck::kRetCodeFieldNumber;
const int CreateNewSceneAck::kCopyIDFieldNumber;
const int CreateNewSceneAck::kCopyGuidFieldNumber;
const int CreateNewSceneAck::kCreateParamFieldNumber;
const int CreateNewSceneAck::kServerIDFieldNumber;
const int CreateNewSceneAck::kCopyTypeFieldNumber;
const int CreateNewSceneAck::kPlayerNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneAck::CreateNewSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsCreateNewSceneAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateNewSceneAck)
}
CreateNewSceneAck::CreateNewSceneAck(const CreateNewSceneAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&playernum_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(playernum_));
  // @@protoc_insertion_point(copy_constructor:CreateNewSceneAck)
}

void CreateNewSceneAck::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playernum_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(playernum_));
  _cached_size_ = 0;
}

CreateNewSceneAck::~CreateNewSceneAck() {
  // @@protoc_insertion_point(destructor:CreateNewSceneAck)
  SharedDtor();
}

void CreateNewSceneAck::SharedDtor() {
}

void CreateNewSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewSceneAck& CreateNewSceneAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsCreateNewSceneAck();
  return *internal_default_instance();
}

CreateNewSceneAck* CreateNewSceneAck::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneAck* n = new CreateNewSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateNewSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playernum_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(playernum_));
  _internal_metadata_.Clear();
}

bool CreateNewSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateNewSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyGuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CreateParam = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createparam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PlayerNum = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateNewSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateNewSceneAck)
  return false;
#undef DO_
}

void CreateNewSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateNewSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->createparam(), output);
  }

  // int32 ServerID = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverid(), output);
  }

  // int32 CopyType = 6;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->copytype(), output);
  }

  // int32 PlayerNum = 7;
  if (this->playernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->playernum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateNewSceneAck)
}

::google::protobuf::uint8* CreateNewSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateNewSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->createparam(), target);
  }

  // int32 ServerID = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverid(), target);
  }

  // int32 CopyType = 6;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->copytype(), target);
  }

  // int32 PlayerNum = 7;
  if (this->playernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->playernum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateNewSceneAck)
  return target;
}

size_t CreateNewSceneAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateNewSceneAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createparam());
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // int32 ServerID = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // int32 CopyType = 6;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // int32 PlayerNum = 7;
  if (this->playernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playernum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateNewSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewSceneAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateNewSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateNewSceneAck)
    MergeFrom(*source);
  }
}

void CreateNewSceneAck::MergeFrom(const CreateNewSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateNewSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.createparam() != 0) {
    set_createparam(from.createparam());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.playernum() != 0) {
    set_playernum(from.playernum());
  }
}

void CreateNewSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateNewSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneAck::CopyFrom(const CreateNewSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateNewSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneAck::IsInitialized() const {
  return true;
}

void CreateNewSceneAck::Swap(CreateNewSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneAck::InternalSwap(CreateNewSceneAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(copyid_, other->copyid_);
  swap(createparam_, other->createparam_);
  swap(copyguid_, other->copyguid_);
  swap(serverid_, other->serverid_);
  swap(copytype_, other->copytype_);
  swap(playernum_, other->playernum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterSceneReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneReq::kRoleIDFieldNumber;
const int EnterSceneReq::kServerIDFieldNumber;
const int EnterSceneReq::kCopyGuidFieldNumber;
const int EnterSceneReq::kCopyIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneReq::EnterSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsEnterSceneReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterSceneReq)
}
EnterSceneReq::EnterSceneReq(const EnterSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&copyid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(copyid_));
  // @@protoc_insertion_point(copy_constructor:EnterSceneReq)
}

void EnterSceneReq::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&copyid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(copyid_));
  _cached_size_ = 0;
}

EnterSceneReq::~EnterSceneReq() {
  // @@protoc_insertion_point(destructor:EnterSceneReq)
  SharedDtor();
}

void EnterSceneReq::SharedDtor() {
}

void EnterSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneReq& EnterSceneReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsEnterSceneReq();
  return *internal_default_instance();
}

EnterSceneReq* EnterSceneReq::New(::google::protobuf::Arena* arena) const {
  EnterSceneReq* n = new EnterSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&copyid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(copyid_));
  _internal_metadata_.Clear();
}

bool EnterSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyGuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterSceneReq)
  return false;
#undef DO_
}

void EnterSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // int32 ServerID = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverid(), output);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // int32 CopyID = 4;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->copyid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:EnterSceneReq)
}

::google::protobuf::uint8* EnterSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // int32 ServerID = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverid(), target);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // int32 CopyID = 4;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->copyid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnterSceneReq)
  return target;
}

size_t EnterSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterSceneReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 ServerID = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // int32 CopyID = 4;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterSceneReq)
    MergeFrom(*source);
  }
}

void EnterSceneReq::MergeFrom(const EnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
}

void EnterSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneReq::CopyFrom(const EnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneReq::IsInitialized() const {
  return true;
}

void EnterSceneReq::Swap(EnterSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneReq::InternalSwap(EnterSceneReq* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(serverid_, other->serverid_);
  swap(copyguid_, other->copyguid_);
  swap(copyid_, other->copyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterSceneAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneAck::kRetCodeFieldNumber;
const int EnterSceneAck::kCopyIDFieldNumber;
const int EnterSceneAck::kCopyGuidFieldNumber;
const int EnterSceneAck::kRoleIDFieldNumber;
const int EnterSceneAck::kCarrerFieldNumber;
const int EnterSceneAck::kActorIDFieldNumber;
const int EnterSceneAck::kRoleNameFieldNumber;
const int EnterSceneAck::kCampFieldNumber;
const int EnterSceneAck::kXFieldNumber;
const int EnterSceneAck::kYFieldNumber;
const int EnterSceneAck::kZFieldNumber;
const int EnterSceneAck::kFtFieldNumber;
const int EnterSceneAck::kHpFieldNumber;
const int EnterSceneAck::kMpFieldNumber;
const int EnterSceneAck::kHpMaxFieldNumber;
const int EnterSceneAck::kMpMaxFieldNumber;
const int EnterSceneAck::kSpeedFieldNumber;
const int EnterSceneAck::kMountIDFieldNumber;
const int EnterSceneAck::kEquipsFieldNumber;
const int EnterSceneAck::kSkillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneAck::EnterSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsEnterSceneAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterSceneAck)
}
EnterSceneAck::EnterSceneAck(const EnterSceneAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      equips_(from.equips_),
      skills_(from.skills_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rolename().size() > 0) {
    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&mountid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(mountid_));
  // @@protoc_insertion_point(copy_constructor:EnterSceneAck)
}

void EnterSceneAck::SharedCtor() {
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mountid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(mountid_));
  _cached_size_ = 0;
}

EnterSceneAck::~EnterSceneAck() {
  // @@protoc_insertion_point(destructor:EnterSceneAck)
  SharedDtor();
}

void EnterSceneAck::SharedDtor() {
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnterSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneAck& EnterSceneAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsEnterSceneAck();
  return *internal_default_instance();
}

EnterSceneAck* EnterSceneAck::New(::google::protobuf::Arena* arena) const {
  EnterSceneAck* n = new EnterSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equips_.Clear();
  skills_.Clear();
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mountid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(mountid_));
  _internal_metadata_.Clear();
}

bool EnterSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyGuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Carrer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActorID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RoleName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rolename().data(), static_cast<int>(this->rolename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "EnterSceneAck.RoleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Camp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float X = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Y = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Z = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ft = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ft_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Mp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 HpMax = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hpmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MpMax = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mpmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Speed = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MountID = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Equips = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_equips())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 154u, input, this->mutable_equips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SkillItem Skills = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterSceneAck)
  return false;
#undef DO_
}

void EnterSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // uint64 RoleID = 4;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roleid(), output);
  }

  // int32 Carrer = 5;
  if (this->carrer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->carrer(), output);
  }

  // int32 ActorID = 6;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->actorid(), output);
  }

  // string RoleName = 7;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), static_cast<int>(this->rolename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnterSceneAck.RoleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->rolename(), output);
  }

  // int32 Camp = 8;
  if (this->camp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->camp(), output);
  }

  // float X = 9;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->x(), output);
  }

  // float Y = 10;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->y(), output);
  }

  // float Z = 11;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->z(), output);
  }

  // float Ft = 12;
  if (this->ft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->ft(), output);
  }

  // int32 Hp = 13;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->hp(), output);
  }

  // int32 Mp = 14;
  if (this->mp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->mp(), output);
  }

  // int32 HpMax = 15;
  if (this->hpmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->hpmax(), output);
  }

  // int32 MpMax = 16;
  if (this->mpmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->mpmax(), output);
  }

  // int32 Speed = 17;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->speed(), output);
  }

  // int32 MountID = 18;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->mountid(), output);
  }

  // repeated int32 Equips = 19;
  if (this->equips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(19, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _equips_cached_byte_size_));
  }
  for (int i = 0, n = this->equips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->equips(i), output);
  }

  // repeated .SkillItem Skills = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skills_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->skills(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:EnterSceneAck)
}

::google::protobuf::uint8* EnterSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnterSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // uint64 RoleID = 4;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roleid(), target);
  }

  // int32 Carrer = 5;
  if (this->carrer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->carrer(), target);
  }

  // int32 ActorID = 6;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->actorid(), target);
  }

  // string RoleName = 7;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), static_cast<int>(this->rolename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnterSceneAck.RoleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rolename(), target);
  }

  // int32 Camp = 8;
  if (this->camp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->camp(), target);
  }

  // float X = 9;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->x(), target);
  }

  // float Y = 10;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->y(), target);
  }

  // float Z = 11;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->z(), target);
  }

  // float Ft = 12;
  if (this->ft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->ft(), target);
  }

  // int32 Hp = 13;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->hp(), target);
  }

  // int32 Mp = 14;
  if (this->mp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->mp(), target);
  }

  // int32 HpMax = 15;
  if (this->hpmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->hpmax(), target);
  }

  // int32 MpMax = 16;
  if (this->mpmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->mpmax(), target);
  }

  // int32 Speed = 17;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->speed(), target);
  }

  // int32 MountID = 18;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->mountid(), target);
  }

  // repeated int32 Equips = 19;
  if (this->equips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      19,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _equips_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->equips_, target);
  }

  // repeated .SkillItem Skills = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skills_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->skills(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnterSceneAck)
  return target;
}

size_t EnterSceneAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterSceneAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 Equips = 19;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->equips_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equips_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .SkillItem Skills = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->skills_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skills(static_cast<int>(i)));
    }
  }

  // string RoleName = 7;
  if (this->rolename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rolename());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // uint64 RoleID = 4;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // int32 Carrer = 5;
  if (this->carrer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrer());
  }

  // int32 ActorID = 6;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // int32 Camp = 8;
  if (this->camp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());
  }

  // float X = 9;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float Y = 10;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float Z = 11;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float Ft = 12;
  if (this->ft() != 0) {
    total_size += 1 + 4;
  }

  // int32 Hp = 13;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // int32 Mp = 14;
  if (this->mp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mp());
  }

  // int32 HpMax = 15;
  if (this->hpmax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hpmax());
  }

  // int32 MpMax = 16;
  if (this->mpmax() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mpmax());
  }

  // int32 Speed = 17;
  if (this->speed() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speed());
  }

  // int32 MountID = 18;
  if (this->mountid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterSceneAck)
    MergeFrom(*source);
  }
}

void EnterSceneAck::MergeFrom(const EnterSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equips_.MergeFrom(from.equips_);
  skills_.MergeFrom(from.skills_);
  if (from.rolename().size() > 0) {

    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.carrer() != 0) {
    set_carrer(from.carrer());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.camp() != 0) {
    set_camp(from.camp());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.ft() != 0) {
    set_ft(from.ft());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.mp() != 0) {
    set_mp(from.mp());
  }
  if (from.hpmax() != 0) {
    set_hpmax(from.hpmax());
  }
  if (from.mpmax() != 0) {
    set_mpmax(from.mpmax());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
}

void EnterSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneAck::CopyFrom(const EnterSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneAck::IsInitialized() const {
  return true;
}

void EnterSceneAck::Swap(EnterSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneAck::InternalSwap(EnterSceneAck* other) {
  using std::swap;
  equips_.InternalSwap(&other->equips_);
  skills_.InternalSwap(&other->skills_);
  rolename_.Swap(&other->rolename_);
  swap(retcode_, other->retcode_);
  swap(copyid_, other->copyid_);
  swap(roleid_, other->roleid_);
  swap(copyguid_, other->copyguid_);
  swap(carrer_, other->carrer_);
  swap(actorid_, other->actorid_);
  swap(camp_, other->camp_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(ft_, other->ft_);
  swap(hp_, other->hp_);
  swap(mp_, other->mp_);
  swap(hpmax_, other->hpmax_);
  swap(mpmax_, other->mpmax_);
  swap(speed_, other->speed_);
  swap(mountid_, other->mountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BackToCityReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackToCityReq::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackToCityReq::BackToCityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsBackToCityReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BackToCityReq)
}
BackToCityReq::BackToCityReq(const BackToCityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param_ = from.param_;
  // @@protoc_insertion_point(copy_constructor:BackToCityReq)
}

void BackToCityReq::SharedCtor() {
  param_ = 0u;
  _cached_size_ = 0;
}

BackToCityReq::~BackToCityReq() {
  // @@protoc_insertion_point(destructor:BackToCityReq)
  SharedDtor();
}

void BackToCityReq::SharedDtor() {
}

void BackToCityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackToCityReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackToCityReq& BackToCityReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsBackToCityReq();
  return *internal_default_instance();
}

BackToCityReq* BackToCityReq::New(::google::protobuf::Arena* arena) const {
  BackToCityReq* n = new BackToCityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackToCityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BackToCityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_ = 0u;
  _internal_metadata_.Clear();
}

bool BackToCityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BackToCityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BackToCityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BackToCityReq)
  return false;
#undef DO_
}

void BackToCityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BackToCityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Param = 1;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BackToCityReq)
}

::google::protobuf::uint8* BackToCityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BackToCityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Param = 1;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BackToCityReq)
  return target;
}

size_t BackToCityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BackToCityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Param = 1;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackToCityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BackToCityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BackToCityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackToCityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BackToCityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BackToCityReq)
    MergeFrom(*source);
  }
}

void BackToCityReq::MergeFrom(const BackToCityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BackToCityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param() != 0) {
    set_param(from.param());
  }
}

void BackToCityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BackToCityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackToCityReq::CopyFrom(const BackToCityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BackToCityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackToCityReq::IsInitialized() const {
  return true;
}

void BackToCityReq::Swap(BackToCityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackToCityReq::InternalSwap(BackToCityReq* other) {
  using std::swap;
  swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackToCityReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BackToCityAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackToCityAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackToCityAck::BackToCityAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsBackToCityAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BackToCityAck)
}
BackToCityAck::BackToCityAck(const BackToCityAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:BackToCityAck)
}

void BackToCityAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

BackToCityAck::~BackToCityAck() {
  // @@protoc_insertion_point(destructor:BackToCityAck)
  SharedDtor();
}

void BackToCityAck::SharedDtor() {
}

void BackToCityAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackToCityAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackToCityAck& BackToCityAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsBackToCityAck();
  return *internal_default_instance();
}

BackToCityAck* BackToCityAck::New(::google::protobuf::Arena* arena) const {
  BackToCityAck* n = new BackToCityAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackToCityAck::Clear() {
// @@protoc_insertion_point(message_clear_start:BackToCityAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool BackToCityAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BackToCityAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BackToCityAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BackToCityAck)
  return false;
#undef DO_
}

void BackToCityAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BackToCityAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BackToCityAck)
}

::google::protobuf::uint8* BackToCityAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BackToCityAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BackToCityAck)
  return target;
}

size_t BackToCityAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BackToCityAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackToCityAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BackToCityAck)
  GOOGLE_DCHECK_NE(&from, this);
  const BackToCityAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackToCityAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BackToCityAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BackToCityAck)
    MergeFrom(*source);
  }
}

void BackToCityAck::MergeFrom(const BackToCityAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BackToCityAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void BackToCityAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BackToCityAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackToCityAck::CopyFrom(const BackToCityAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BackToCityAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackToCityAck::IsInitialized() const {
  return true;
}

void BackToCityAck::Swap(BackToCityAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackToCityAck::InternalSwap(BackToCityAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackToCityAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaveSceneReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveSceneReq::kRoleIDFieldNumber;
const int LeaveSceneReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveSceneReq::LeaveSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsLeaveSceneReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LeaveSceneReq)
}
LeaveSceneReq::LeaveSceneReq(const LeaveSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:LeaveSceneReq)
}

void LeaveSceneReq::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(reason_));
  _cached_size_ = 0;
}

LeaveSceneReq::~LeaveSceneReq() {
  // @@protoc_insertion_point(destructor:LeaveSceneReq)
  SharedDtor();
}

void LeaveSceneReq::SharedDtor() {
}

void LeaveSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveSceneReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveSceneReq& LeaveSceneReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsLeaveSceneReq();
  return *internal_default_instance();
}

LeaveSceneReq* LeaveSceneReq::New(::google::protobuf::Arena* arena) const {
  LeaveSceneReq* n = new LeaveSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LeaveSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool LeaveSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LeaveSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LeaveSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LeaveSceneReq)
  return false;
#undef DO_
}

void LeaveSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LeaveSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // int32 Reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LeaveSceneReq)
}

::google::protobuf::uint8* LeaveSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LeaveSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // int32 Reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LeaveSceneReq)
  return target;
}

size_t LeaveSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LeaveSceneReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 Reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LeaveSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LeaveSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LeaveSceneReq)
    MergeFrom(*source);
  }
}

void LeaveSceneReq::MergeFrom(const LeaveSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LeaveSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void LeaveSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LeaveSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveSceneReq::CopyFrom(const LeaveSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LeaveSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveSceneReq::IsInitialized() const {
  return true;
}

void LeaveSceneReq::Swap(LeaveSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveSceneReq::InternalSwap(LeaveSceneReq* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveSceneReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaveSceneAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveSceneAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveSceneAck::LeaveSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsLeaveSceneAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LeaveSceneAck)
}
LeaveSceneAck::LeaveSceneAck(const LeaveSceneAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:LeaveSceneAck)
}

void LeaveSceneAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

LeaveSceneAck::~LeaveSceneAck() {
  // @@protoc_insertion_point(destructor:LeaveSceneAck)
  SharedDtor();
}

void LeaveSceneAck::SharedDtor() {
}

void LeaveSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveSceneAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveSceneAck& LeaveSceneAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsLeaveSceneAck();
  return *internal_default_instance();
}

LeaveSceneAck* LeaveSceneAck::New(::google::protobuf::Arena* arena) const {
  LeaveSceneAck* n = new LeaveSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:LeaveSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool LeaveSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LeaveSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LeaveSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LeaveSceneAck)
  return false;
#undef DO_
}

void LeaveSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LeaveSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LeaveSceneAck)
}

::google::protobuf::uint8* LeaveSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LeaveSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LeaveSceneAck)
  return target;
}

size_t LeaveSceneAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LeaveSceneAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LeaveSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveSceneAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LeaveSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LeaveSceneAck)
    MergeFrom(*source);
  }
}

void LeaveSceneAck::MergeFrom(const LeaveSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LeaveSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void LeaveSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LeaveSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveSceneAck::CopyFrom(const LeaveSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LeaveSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveSceneAck::IsInitialized() const {
  return true;
}

void LeaveSceneAck::Swap(LeaveSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveSceneAck::InternalSwap(LeaveSceneAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveSceneAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AbortSceneReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbortSceneReq::kRoleIDFieldNumber;
const int AbortSceneReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbortSceneReq::AbortSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsAbortSceneReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AbortSceneReq)
}
AbortSceneReq::AbortSceneReq(const AbortSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:AbortSceneReq)
}

void AbortSceneReq::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(reason_));
  _cached_size_ = 0;
}

AbortSceneReq::~AbortSceneReq() {
  // @@protoc_insertion_point(destructor:AbortSceneReq)
  SharedDtor();
}

void AbortSceneReq::SharedDtor() {
}

void AbortSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortSceneReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbortSceneReq& AbortSceneReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsAbortSceneReq();
  return *internal_default_instance();
}

AbortSceneReq* AbortSceneReq::New(::google::protobuf::Arena* arena) const {
  AbortSceneReq* n = new AbortSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbortSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AbortSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool AbortSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AbortSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AbortSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AbortSceneReq)
  return false;
#undef DO_
}

void AbortSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AbortSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // int32 Reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AbortSceneReq)
}

::google::protobuf::uint8* AbortSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AbortSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // int32 Reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AbortSceneReq)
  return target;
}

size_t AbortSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AbortSceneReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 Reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbortSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AbortSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AbortSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbortSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AbortSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AbortSceneReq)
    MergeFrom(*source);
  }
}

void AbortSceneReq::MergeFrom(const AbortSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AbortSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void AbortSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AbortSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortSceneReq::CopyFrom(const AbortSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AbortSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortSceneReq::IsInitialized() const {
  return true;
}

void AbortSceneReq::Swap(AbortSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbortSceneReq::InternalSwap(AbortSceneReq* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbortSceneReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AbortSceneAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbortSceneAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbortSceneAck::AbortSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsAbortSceneAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AbortSceneAck)
}
AbortSceneAck::AbortSceneAck(const AbortSceneAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:AbortSceneAck)
}

void AbortSceneAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

AbortSceneAck::~AbortSceneAck() {
  // @@protoc_insertion_point(destructor:AbortSceneAck)
  SharedDtor();
}

void AbortSceneAck::SharedDtor() {
}

void AbortSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortSceneAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbortSceneAck& AbortSceneAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsAbortSceneAck();
  return *internal_default_instance();
}

AbortSceneAck* AbortSceneAck::New(::google::protobuf::Arena* arena) const {
  AbortSceneAck* n = new AbortSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbortSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AbortSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool AbortSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AbortSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AbortSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AbortSceneAck)
  return false;
#undef DO_
}

void AbortSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AbortSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AbortSceneAck)
}

::google::protobuf::uint8* AbortSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AbortSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AbortSceneAck)
  return target;
}

size_t AbortSceneAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AbortSceneAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbortSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AbortSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  const AbortSceneAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbortSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AbortSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AbortSceneAck)
    MergeFrom(*source);
  }
}

void AbortSceneAck::MergeFrom(const AbortSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AbortSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AbortSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AbortSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortSceneAck::CopyFrom(const AbortSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AbortSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortSceneAck::IsInitialized() const {
  return true;
}

void AbortSceneAck::Swap(AbortSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbortSceneAck::InternalSwap(AbortSceneAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbortSceneAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AbortSceneNty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbortSceneNty::kRoleIDFieldNumber;
const int AbortSceneNty::kCopyIDFieldNumber;
const int AbortSceneNty::kCopyGuidFieldNumber;
const int AbortSceneNty::kCopyTypeFieldNumber;
const int AbortSceneNty::kServerIDFieldNumber;
const int AbortSceneNty::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbortSceneNty::AbortSceneNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsAbortSceneNty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AbortSceneNty)
}
AbortSceneNty::AbortSceneNty(const AbortSceneNty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(param_));
  // @@protoc_insertion_point(copy_constructor:AbortSceneNty)
}

void AbortSceneNty::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(param_));
  _cached_size_ = 0;
}

AbortSceneNty::~AbortSceneNty() {
  // @@protoc_insertion_point(destructor:AbortSceneNty)
  SharedDtor();
}

void AbortSceneNty::SharedDtor() {
}

void AbortSceneNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortSceneNty::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbortSceneNty& AbortSceneNty::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsAbortSceneNty();
  return *internal_default_instance();
}

AbortSceneNty* AbortSceneNty::New(::google::protobuf::Arena* arena) const {
  AbortSceneNty* n = new AbortSceneNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbortSceneNty::Clear() {
// @@protoc_insertion_point(message_clear_start:AbortSceneNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(param_));
  _internal_metadata_.Clear();
}

bool AbortSceneNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AbortSceneNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyGuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Param = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AbortSceneNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AbortSceneNty)
  return false;
#undef DO_
}

void AbortSceneNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AbortSceneNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // int32 CopyType = 4;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->copytype(), output);
  }

  // int32 ServerID = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverid(), output);
  }

  // int32 Param = 6;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AbortSceneNty)
}

::google::protobuf::uint8* AbortSceneNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AbortSceneNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // int32 CopyType = 4;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->copytype(), target);
  }

  // int32 ServerID = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverid(), target);
  }

  // int32 Param = 6;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AbortSceneNty)
  return target;
}

size_t AbortSceneNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AbortSceneNty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // int32 CopyType = 4;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // int32 ServerID = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // int32 Param = 6;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbortSceneNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AbortSceneNty)
  GOOGLE_DCHECK_NE(&from, this);
  const AbortSceneNty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbortSceneNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AbortSceneNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AbortSceneNty)
    MergeFrom(*source);
  }
}

void AbortSceneNty::MergeFrom(const AbortSceneNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AbortSceneNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
}

void AbortSceneNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AbortSceneNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortSceneNty::CopyFrom(const AbortSceneNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AbortSceneNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortSceneNty::IsInitialized() const {
  return true;
}

void AbortSceneNty::Swap(AbortSceneNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbortSceneNty::InternalSwap(AbortSceneNty* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(copyid_, other->copyid_);
  swap(copyguid_, other->copyguid_);
  swap(copytype_, other->copytype_);
  swap(serverid_, other->serverid_);
  swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbortSceneNty::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransRoleData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransRoleData::kRoleIDFieldNumber;
const int TransRoleData::kNameFieldNumber;
const int TransRoleData::kCarrerIDFieldNumber;
const int TransRoleData::kActorIDFieldNumber;
const int TransRoleData::kLevelFieldNumber;
const int TransRoleData::kMountIDFieldNumber;
const int TransRoleData::kRobotFieldNumber;
const int TransRoleData::kEquipsFieldNumber;
const int TransRoleData::kPropertysFieldNumber;
const int TransRoleData::kSkillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransRoleData::TransRoleData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransRoleData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransRoleData)
}
TransRoleData::TransRoleData(const TransRoleData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      equips_(from.equips_),
      propertys_(from.propertys_),
      skills_(from.skills_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&robot_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(robot_));
  // @@protoc_insertion_point(copy_constructor:TransRoleData)
}

void TransRoleData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robot_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(robot_));
  _cached_size_ = 0;
}

TransRoleData::~TransRoleData() {
  // @@protoc_insertion_point(destructor:TransRoleData)
  SharedDtor();
}

void TransRoleData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransRoleData::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransRoleData& TransRoleData::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransRoleData();
  return *internal_default_instance();
}

TransRoleData* TransRoleData::New(::google::protobuf::Arena* arena) const {
  TransRoleData* n = new TransRoleData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransRoleData::Clear() {
// @@protoc_insertion_point(message_clear_start:TransRoleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equips_.Clear();
  propertys_.Clear();
  skills_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robot_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(robot_));
  _internal_metadata_.Clear();
}

bool TransRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransRoleData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TransRoleData.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CarrerID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActorID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MountID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Robot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Equips = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_equips())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_equips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Propertys = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_propertys())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_propertys())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SkillItem Skills = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransRoleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransRoleData)
  return false;
#undef DO_
}

void TransRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransRoleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransRoleData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->carrerid(), output);
  }

  // int32 ActorID = 4;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->actorid(), output);
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // int32 MountID = 6;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mountid(), output);
  }

  // int32 Robot = 7;
  if (this->robot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->robot(), output);
  }

  // repeated int32 Equips = 8;
  if (this->equips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _equips_cached_byte_size_));
  }
  for (int i = 0, n = this->equips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->equips(i), output);
  }

  // repeated int32 Propertys = 9;
  if (this->propertys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _propertys_cached_byte_size_));
  }
  for (int i = 0, n = this->propertys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->propertys(i), output);
  }

  // repeated .SkillItem Skills = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skills_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->skills(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TransRoleData)
}

::google::protobuf::uint8* TransRoleData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransRoleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransRoleData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->carrerid(), target);
  }

  // int32 ActorID = 4;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->actorid(), target);
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // int32 MountID = 6;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mountid(), target);
  }

  // int32 Robot = 7;
  if (this->robot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->robot(), target);
  }

  // repeated int32 Equips = 8;
  if (this->equips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _equips_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->equips_, target);
  }

  // repeated int32 Propertys = 9;
  if (this->propertys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _propertys_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->propertys_, target);
  }

  // repeated .SkillItem Skills = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skills_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->skills(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransRoleData)
  return target;
}

size_t TransRoleData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransRoleData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 Equips = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->equips_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equips_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 Propertys = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->propertys_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _propertys_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .SkillItem Skills = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->skills_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skills(static_cast<int>(i)));
    }
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrerid());
  }

  // int32 ActorID = 4;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 MountID = 6;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mountid());
  }

  // int32 Robot = 7;
  if (this->robot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robot());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransRoleData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransRoleData)
  GOOGLE_DCHECK_NE(&from, this);
  const TransRoleData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransRoleData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransRoleData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransRoleData)
    MergeFrom(*source);
  }
}

void TransRoleData::MergeFrom(const TransRoleData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransRoleData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equips_.MergeFrom(from.equips_);
  propertys_.MergeFrom(from.propertys_);
  skills_.MergeFrom(from.skills_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.carrerid() != 0) {
    set_carrerid(from.carrerid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.robot() != 0) {
    set_robot(from.robot());
  }
}

void TransRoleData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransRoleData::CopyFrom(const TransRoleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransRoleData::IsInitialized() const {
  return true;
}

void TransRoleData::Swap(TransRoleData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransRoleData::InternalSwap(TransRoleData* other) {
  using std::swap;
  equips_.InternalSwap(&other->equips_);
  propertys_.InternalSwap(&other->propertys_);
  skills_.InternalSwap(&other->skills_);
  name_.Swap(&other->name_);
  swap(roleid_, other->roleid_);
  swap(carrerid_, other->carrerid_);
  swap(actorid_, other->actorid_);
  swap(level_, other->level_);
  swap(mountid_, other->mountid_);
  swap(robot_, other->robot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransRoleData::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransPetData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransPetData::kPetGuidFieldNumber;
const int TransPetData::kPetIDFieldNumber;
const int TransPetData::kActorIDFieldNumber;
const int TransPetData::kNameFieldNumber;
const int TransPetData::kLevelFieldNumber;
const int TransPetData::kPropertysFieldNumber;
const int TransPetData::kSkillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransPetData::TransPetData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransPetData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransPetData)
}
TransPetData::TransPetData(const TransPetData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      propertys_(from.propertys_),
      skills_(from.skills_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&petguid_, &from.petguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&petguid_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:TransPetData)
}

void TransPetData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&petguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&petguid_)) + sizeof(level_));
  _cached_size_ = 0;
}

TransPetData::~TransPetData() {
  // @@protoc_insertion_point(destructor:TransPetData)
  SharedDtor();
}

void TransPetData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransPetData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransPetData::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransPetData& TransPetData::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransPetData();
  return *internal_default_instance();
}

TransPetData* TransPetData::New(::google::protobuf::Arena* arena) const {
  TransPetData* n = new TransPetData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransPetData::Clear() {
// @@protoc_insertion_point(message_clear_start:TransPetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  propertys_.Clear();
  skills_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&petguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&petguid_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool TransPetData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransPetData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 PetGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &petguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PetID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &petid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActorID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TransPetData.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Propertys = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_propertys())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_propertys())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SkillItem Skills = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransPetData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransPetData)
  return false;
#undef DO_
}

void TransPetData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransPetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->petguid(), output);
  }

  // int32 PetID = 2;
  if (this->petid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->petid(), output);
  }

  // int32 ActorID = 3;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->actorid(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransPetData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // repeated int32 Propertys = 6;
  if (this->propertys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _propertys_cached_byte_size_));
  }
  for (int i = 0, n = this->propertys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->propertys(i), output);
  }

  // repeated .SkillItem Skills = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skills_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->skills(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TransPetData)
}

::google::protobuf::uint8* TransPetData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransPetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->petguid(), target);
  }

  // int32 PetID = 2;
  if (this->petid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->petid(), target);
  }

  // int32 ActorID = 3;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->actorid(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransPetData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // repeated int32 Propertys = 6;
  if (this->propertys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _propertys_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->propertys_, target);
  }

  // repeated .SkillItem Skills = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skills_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->skills(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransPetData)
  return target;
}

size_t TransPetData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransPetData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 Propertys = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->propertys_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _propertys_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .SkillItem Skills = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->skills_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skills(static_cast<int>(i)));
    }
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->petguid());
  }

  // int32 PetID = 2;
  if (this->petid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->petid());
  }

  // int32 ActorID = 3;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransPetData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransPetData)
  GOOGLE_DCHECK_NE(&from, this);
  const TransPetData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransPetData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransPetData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransPetData)
    MergeFrom(*source);
  }
}

void TransPetData::MergeFrom(const TransPetData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransPetData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  propertys_.MergeFrom(from.propertys_);
  skills_.MergeFrom(from.skills_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.petguid() != 0) {
    set_petguid(from.petguid());
  }
  if (from.petid() != 0) {
    set_petid(from.petid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void TransPetData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransPetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransPetData::CopyFrom(const TransPetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransPetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransPetData::IsInitialized() const {
  return true;
}

void TransPetData::Swap(TransPetData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransPetData::InternalSwap(TransPetData* other) {
  using std::swap;
  propertys_.InternalSwap(&other->propertys_);
  skills_.InternalSwap(&other->skills_);
  name_.Swap(&other->name_);
  swap(petguid_, other->petguid_);
  swap(petid_, other->petid_);
  swap(actorid_, other->actorid_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransPetData::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransPartnerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransPartnerData::kPartnerGuidFieldNumber;
const int TransPartnerData::kPartnerIDFieldNumber;
const int TransPartnerData::kActorIDFieldNumber;
const int TransPartnerData::kNameFieldNumber;
const int TransPartnerData::kLevelFieldNumber;
const int TransPartnerData::kPropertysFieldNumber;
const int TransPartnerData::kSkillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransPartnerData::TransPartnerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransPartnerData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransPartnerData)
}
TransPartnerData::TransPartnerData(const TransPartnerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      propertys_(from.propertys_),
      skills_(from.skills_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&partnerguid_, &from.partnerguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&partnerguid_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:TransPartnerData)
}

void TransPartnerData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&partnerguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&partnerguid_)) + sizeof(level_));
  _cached_size_ = 0;
}

TransPartnerData::~TransPartnerData() {
  // @@protoc_insertion_point(destructor:TransPartnerData)
  SharedDtor();
}

void TransPartnerData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransPartnerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransPartnerData::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransPartnerData& TransPartnerData::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransPartnerData();
  return *internal_default_instance();
}

TransPartnerData* TransPartnerData::New(::google::protobuf::Arena* arena) const {
  TransPartnerData* n = new TransPartnerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransPartnerData::Clear() {
// @@protoc_insertion_point(message_clear_start:TransPartnerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  propertys_.Clear();
  skills_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&partnerguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&partnerguid_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool TransPartnerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransPartnerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 PartnerGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partnerguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PartnerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partnerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActorID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TransPartnerData.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Propertys = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_propertys())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_propertys())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SkillItem Skills = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransPartnerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransPartnerData)
  return false;
#undef DO_
}

void TransPartnerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransPartnerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->partnerguid(), output);
  }

  // int32 PartnerID = 2;
  if (this->partnerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->partnerid(), output);
  }

  // int32 ActorID = 3;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->actorid(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransPartnerData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // repeated int32 Propertys = 6;
  if (this->propertys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _propertys_cached_byte_size_));
  }
  for (int i = 0, n = this->propertys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->propertys(i), output);
  }

  // repeated .SkillItem Skills = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skills_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->skills(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TransPartnerData)
}

::google::protobuf::uint8* TransPartnerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransPartnerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->partnerguid(), target);
  }

  // int32 PartnerID = 2;
  if (this->partnerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->partnerid(), target);
  }

  // int32 ActorID = 3;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->actorid(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransPartnerData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // repeated int32 Propertys = 6;
  if (this->propertys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _propertys_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->propertys_, target);
  }

  // repeated .SkillItem Skills = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skills_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->skills(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransPartnerData)
  return target;
}

size_t TransPartnerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransPartnerData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 Propertys = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->propertys_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _propertys_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .SkillItem Skills = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->skills_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skills(static_cast<int>(i)));
    }
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->partnerguid());
  }

  // int32 PartnerID = 2;
  if (this->partnerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->partnerid());
  }

  // int32 ActorID = 3;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransPartnerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransPartnerData)
  GOOGLE_DCHECK_NE(&from, this);
  const TransPartnerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransPartnerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransPartnerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransPartnerData)
    MergeFrom(*source);
  }
}

void TransPartnerData::MergeFrom(const TransPartnerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransPartnerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  propertys_.MergeFrom(from.propertys_);
  skills_.MergeFrom(from.skills_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.partnerguid() != 0) {
    set_partnerguid(from.partnerguid());
  }
  if (from.partnerid() != 0) {
    set_partnerid(from.partnerid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void TransPartnerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransPartnerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransPartnerData::CopyFrom(const TransPartnerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransPartnerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransPartnerData::IsInitialized() const {
  return true;
}

void TransPartnerData::Swap(TransPartnerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransPartnerData::InternalSwap(TransPartnerData* other) {
  using std::swap;
  propertys_.InternalSwap(&other->propertys_);
  skills_.InternalSwap(&other->skills_);
  name_.Swap(&other->name_);
  swap(partnerguid_, other->partnerguid_);
  swap(partnerid_, other->partnerid_);
  swap(actorid_, other->actorid_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransPartnerData::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferDataItem::InitAsDefaultInstance() {
  ::_TransferDataItem_default_instance_._instance.get_mutable()->roledata_ = const_cast< ::TransRoleData*>(
      ::TransRoleData::internal_default_instance());
  ::_TransferDataItem_default_instance_._instance.get_mutable()->petdata_ = const_cast< ::TransPetData*>(
      ::TransPetData::internal_default_instance());
  ::_TransferDataItem_default_instance_._instance.get_mutable()->partnerdata_ = const_cast< ::TransPartnerData*>(
      ::TransPartnerData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferDataItem::kCampFieldNumber;
const int TransferDataItem::kRoleDataFieldNumber;
const int TransferDataItem::kPetDataFieldNumber;
const int TransferDataItem::kPartnerDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferDataItem::TransferDataItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransferDataItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransferDataItem)
}
TransferDataItem::TransferDataItem(const TransferDataItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_roledata()) {
    roledata_ = new ::TransRoleData(*from.roledata_);
  } else {
    roledata_ = NULL;
  }
  if (from.has_petdata()) {
    petdata_ = new ::TransPetData(*from.petdata_);
  } else {
    petdata_ = NULL;
  }
  if (from.has_partnerdata()) {
    partnerdata_ = new ::TransPartnerData(*from.partnerdata_);
  } else {
    partnerdata_ = NULL;
  }
  camp_ = from.camp_;
  // @@protoc_insertion_point(copy_constructor:TransferDataItem)
}

void TransferDataItem::SharedCtor() {
  ::memset(&roledata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&camp_) -
      reinterpret_cast<char*>(&roledata_)) + sizeof(camp_));
  _cached_size_ = 0;
}

TransferDataItem::~TransferDataItem() {
  // @@protoc_insertion_point(destructor:TransferDataItem)
  SharedDtor();
}

void TransferDataItem::SharedDtor() {
  if (this != internal_default_instance()) delete roledata_;
  if (this != internal_default_instance()) delete petdata_;
  if (this != internal_default_instance()) delete partnerdata_;
}

void TransferDataItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferDataItem::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferDataItem& TransferDataItem::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransferDataItem();
  return *internal_default_instance();
}

TransferDataItem* TransferDataItem::New(::google::protobuf::Arena* arena) const {
  TransferDataItem* n = new TransferDataItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferDataItem::Clear() {
// @@protoc_insertion_point(message_clear_start:TransferDataItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && roledata_ != NULL) {
    delete roledata_;
  }
  roledata_ = NULL;
  if (GetArenaNoVirtual() == NULL && petdata_ != NULL) {
    delete petdata_;
  }
  petdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && partnerdata_ != NULL) {
    delete partnerdata_;
  }
  partnerdata_ = NULL;
  camp_ = 0;
  _internal_metadata_.Clear();
}

bool TransferDataItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransferDataItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Camp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TransRoleData RoleData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roledata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TransPetData PetData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_petdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TransPartnerData PartnerData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_partnerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransferDataItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransferDataItem)
  return false;
#undef DO_
}

void TransferDataItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransferDataItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Camp = 1;
  if (this->camp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->camp(), output);
  }

  // .TransRoleData RoleData = 2;
  if (this->has_roledata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->roledata_, output);
  }

  // .TransPetData PetData = 3;
  if (this->has_petdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->petdata_, output);
  }

  // .TransPartnerData PartnerData = 4;
  if (this->has_partnerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->partnerdata_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TransferDataItem)
}

::google::protobuf::uint8* TransferDataItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransferDataItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Camp = 1;
  if (this->camp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->camp(), target);
  }

  // .TransRoleData RoleData = 2;
  if (this->has_roledata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->roledata_, deterministic, target);
  }

  // .TransPetData PetData = 3;
  if (this->has_petdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->petdata_, deterministic, target);
  }

  // .TransPartnerData PartnerData = 4;
  if (this->has_partnerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->partnerdata_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransferDataItem)
  return target;
}

size_t TransferDataItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransferDataItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TransRoleData RoleData = 2;
  if (this->has_roledata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roledata_);
  }

  // .TransPetData PetData = 3;
  if (this->has_petdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->petdata_);
  }

  // .TransPartnerData PartnerData = 4;
  if (this->has_partnerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->partnerdata_);
  }

  // int32 Camp = 1;
  if (this->camp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferDataItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransferDataItem)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferDataItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferDataItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransferDataItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransferDataItem)
    MergeFrom(*source);
  }
}

void TransferDataItem::MergeFrom(const TransferDataItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransferDataItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roledata()) {
    mutable_roledata()->::TransRoleData::MergeFrom(from.roledata());
  }
  if (from.has_petdata()) {
    mutable_petdata()->::TransPetData::MergeFrom(from.petdata());
  }
  if (from.has_partnerdata()) {
    mutable_partnerdata()->::TransPartnerData::MergeFrom(from.partnerdata());
  }
  if (from.camp() != 0) {
    set_camp(from.camp());
  }
}

void TransferDataItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransferDataItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferDataItem::CopyFrom(const TransferDataItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransferDataItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferDataItem::IsInitialized() const {
  return true;
}

void TransferDataItem::Swap(TransferDataItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferDataItem::InternalSwap(TransferDataItem* other) {
  using std::swap;
  swap(roledata_, other->roledata_);
  swap(petdata_, other->petdata_);
  swap(partnerdata_, other->partnerdata_);
  swap(camp_, other->camp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferDataItem::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferDataReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferDataReq::kTransDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferDataReq::TransferDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransferDataReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransferDataReq)
}
TransferDataReq::TransferDataReq(const TransferDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transdatas_(from.transdatas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TransferDataReq)
}

void TransferDataReq::SharedCtor() {
  _cached_size_ = 0;
}

TransferDataReq::~TransferDataReq() {
  // @@protoc_insertion_point(destructor:TransferDataReq)
  SharedDtor();
}

void TransferDataReq::SharedDtor() {
}

void TransferDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferDataReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferDataReq& TransferDataReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransferDataReq();
  return *internal_default_instance();
}

TransferDataReq* TransferDataReq::New(::google::protobuf::Arena* arena) const {
  TransferDataReq* n = new TransferDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TransferDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transdatas_.Clear();
  _internal_metadata_.Clear();
}

bool TransferDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransferDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TransferDataItem TransDatas = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transdatas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransferDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransferDataReq)
  return false;
#undef DO_
}

void TransferDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransferDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TransferDataItem TransDatas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transdatas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transdatas(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TransferDataReq)
}

::google::protobuf::uint8* TransferDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransferDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TransferDataItem TransDatas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transdatas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->transdatas(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransferDataReq)
  return target;
}

size_t TransferDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransferDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TransferDataItem TransDatas = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transdatas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transdatas(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransferDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransferDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransferDataReq)
    MergeFrom(*source);
  }
}

void TransferDataReq::MergeFrom(const TransferDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransferDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transdatas_.MergeFrom(from.transdatas_);
}

void TransferDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransferDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferDataReq::CopyFrom(const TransferDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransferDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferDataReq::IsInitialized() const {
  return true;
}

void TransferDataReq::Swap(TransferDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferDataReq::InternalSwap(TransferDataReq* other) {
  using std::swap;
  transdatas_.InternalSwap(&other->transdatas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferDataReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferDataAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferDataAck::kRetCodeFieldNumber;
const int TransferDataAck::kRoleIDFieldNumber;
const int TransferDataAck::kCopyIDFieldNumber;
const int TransferDataAck::kCopyGuidFieldNumber;
const int TransferDataAck::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferDataAck::TransferDataAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransferDataAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransferDataAck)
}
TransferDataAck::TransferDataAck(const TransferDataAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:TransferDataAck)
}

void TransferDataAck::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(serverid_));
  _cached_size_ = 0;
}

TransferDataAck::~TransferDataAck() {
  // @@protoc_insertion_point(destructor:TransferDataAck)
  SharedDtor();
}

void TransferDataAck::SharedDtor() {
}

void TransferDataAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferDataAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferDataAck& TransferDataAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsTransferDataAck();
  return *internal_default_instance();
}

TransferDataAck* TransferDataAck::New(::google::protobuf::Arena* arena) const {
  TransferDataAck* n = new TransferDataAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:TransferDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool TransferDataAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransferDataAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyGuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransferDataAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransferDataAck)
  return false;
#undef DO_
}

void TransferDataAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransferDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // int32 CopyID = 3;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyid(), output);
  }

  // int32 CopyGuid = 4;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->copyguid(), output);
  }

  // int32 ServerID = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TransferDataAck)
}

::google::protobuf::uint8* TransferDataAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransferDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // int32 CopyID = 3;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyid(), target);
  }

  // int32 CopyGuid = 4;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->copyguid(), target);
  }

  // int32 ServerID = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransferDataAck)
  return target;
}

size_t TransferDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransferDataAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 CopyID = 3;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // int32 CopyGuid = 4;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // int32 ServerID = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferDataAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransferDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferDataAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferDataAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransferDataAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransferDataAck)
    MergeFrom(*source);
  }
}

void TransferDataAck::MergeFrom(const TransferDataAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransferDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void TransferDataAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransferDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferDataAck::CopyFrom(const TransferDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransferDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferDataAck::IsInitialized() const {
  return true;
}

void TransferDataAck::Swap(TransferDataAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferDataAck::InternalSwap(TransferDataAck* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(retcode_, other->retcode_);
  swap(copyid_, other->copyid_);
  swap(copyguid_, other->copyguid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferDataAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyIntoScene::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyIntoScene::kRoleIDFieldNumber;
const int NotifyIntoScene::kCopyIDFieldNumber;
const int NotifyIntoScene::kCopyGuidFieldNumber;
const int NotifyIntoScene::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyIntoScene::NotifyIntoScene()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsNotifyIntoScene();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NotifyIntoScene)
}
NotifyIntoScene::NotifyIntoScene(const NotifyIntoScene& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:NotifyIntoScene)
}

void NotifyIntoScene::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(serverid_));
  _cached_size_ = 0;
}

NotifyIntoScene::~NotifyIntoScene() {
  // @@protoc_insertion_point(destructor:NotifyIntoScene)
  SharedDtor();
}

void NotifyIntoScene::SharedDtor() {
}

void NotifyIntoScene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyIntoScene::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyIntoScene& NotifyIntoScene::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsNotifyIntoScene();
  return *internal_default_instance();
}

NotifyIntoScene* NotifyIntoScene::New(::google::protobuf::Arena* arena) const {
  NotifyIntoScene* n = new NotifyIntoScene;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyIntoScene::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyIntoScene)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool NotifyIntoScene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NotifyIntoScene)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyGuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NotifyIntoScene)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NotifyIntoScene)
  return false;
#undef DO_
}

void NotifyIntoScene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NotifyIntoScene)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // int32 ServerID = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NotifyIntoScene)
}

::google::protobuf::uint8* NotifyIntoScene::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NotifyIntoScene)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // int32 ServerID = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NotifyIntoScene)
  return target;
}

size_t NotifyIntoScene::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyIntoScene)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // int32 ServerID = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyIntoScene::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NotifyIntoScene)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyIntoScene* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyIntoScene>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NotifyIntoScene)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NotifyIntoScene)
    MergeFrom(*source);
  }
}

void NotifyIntoScene::MergeFrom(const NotifyIntoScene& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyIntoScene)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void NotifyIntoScene::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NotifyIntoScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyIntoScene::CopyFrom(const NotifyIntoScene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyIntoScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyIntoScene::IsInitialized() const {
  return true;
}

void NotifyIntoScene::Swap(NotifyIntoScene* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyIntoScene::InternalSwap(NotifyIntoScene* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(copyid_, other->copyid_);
  swap(copyguid_, other->copyguid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyIntoScene::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NearByRoleItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NearByRoleItem::kRoleIDFieldNumber;
const int NearByRoleItem::kActorIDFieldNumber;
const int NearByRoleItem::kLevelFieldNumber;
const int NearByRoleItem::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NearByRoleItem::NearByRoleItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsNearByRoleItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NearByRoleItem)
}
NearByRoleItem::NearByRoleItem(const NearByRoleItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:NearByRoleItem)
}

void NearByRoleItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(level_));
  _cached_size_ = 0;
}

NearByRoleItem::~NearByRoleItem() {
  // @@protoc_insertion_point(destructor:NearByRoleItem)
  SharedDtor();
}

void NearByRoleItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NearByRoleItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NearByRoleItem::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NearByRoleItem& NearByRoleItem::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsNearByRoleItem();
  return *internal_default_instance();
}

NearByRoleItem* NearByRoleItem::New(::google::protobuf::Arena* arena) const {
  NearByRoleItem* n = new NearByRoleItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NearByRoleItem::Clear() {
// @@protoc_insertion_point(message_clear_start:NearByRoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool NearByRoleItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NearByRoleItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActorID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NearByRoleItem.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NearByRoleItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NearByRoleItem)
  return false;
#undef DO_
}

void NearByRoleItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NearByRoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // int32 ActorID = 2;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actorid(), output);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NearByRoleItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NearByRoleItem)
}

::google::protobuf::uint8* NearByRoleItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NearByRoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // int32 ActorID = 2;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actorid(), target);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NearByRoleItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NearByRoleItem)
  return target;
}

size_t NearByRoleItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NearByRoleItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NearByRoleItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NearByRoleItem)
  GOOGLE_DCHECK_NE(&from, this);
  const NearByRoleItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NearByRoleItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NearByRoleItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NearByRoleItem)
    MergeFrom(*source);
  }
}

void NearByRoleItem::MergeFrom(const NearByRoleItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NearByRoleItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void NearByRoleItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NearByRoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NearByRoleItem::CopyFrom(const NearByRoleItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NearByRoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NearByRoleItem::IsInitialized() const {
  return true;
}

void NearByRoleItem::Swap(NearByRoleItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NearByRoleItem::InternalSwap(NearByRoleItem* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(roleid_, other->roleid_);
  swap(actorid_, other->actorid_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NearByRoleItem::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CopyInsItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CopyInsItem::kCopyGuidFieldNumber;
const int CopyInsItem::kCopyIDFieldNumber;
const int CopyInsItem::kCopyTypeFieldNumber;
const int CopyInsItem::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CopyInsItem::CopyInsItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsCopyInsItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CopyInsItem)
}
CopyInsItem::CopyInsItem(const CopyInsItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&copyguid_, &from.copyguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&copyguid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:CopyInsItem)
}

void CopyInsItem::SharedCtor() {
  ::memset(&copyguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&copyguid_)) + sizeof(serverid_));
  _cached_size_ = 0;
}

CopyInsItem::~CopyInsItem() {
  // @@protoc_insertion_point(destructor:CopyInsItem)
  SharedDtor();
}

void CopyInsItem::SharedDtor() {
}

void CopyInsItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CopyInsItem::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CopyInsItem& CopyInsItem::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsCopyInsItem();
  return *internal_default_instance();
}

CopyInsItem* CopyInsItem::New(::google::protobuf::Arena* arena) const {
  CopyInsItem* n = new CopyInsItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CopyInsItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CopyInsItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&copyguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&copyguid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool CopyInsItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CopyInsItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 CopyGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CopyInsItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CopyInsItem)
  return false;
#undef DO_
}

void CopyInsItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CopyInsItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 CopyGuid = 1;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->copyguid(), output);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // int32 CopyType = 3;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copytype(), output);
  }

  // int32 ServerID = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CopyInsItem)
}

::google::protobuf::uint8* CopyInsItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CopyInsItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 CopyGuid = 1;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->copyguid(), target);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // int32 CopyType = 3;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copytype(), target);
  }

  // int32 ServerID = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CopyInsItem)
  return target;
}

size_t CopyInsItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CopyInsItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 CopyGuid = 1;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyguid());
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // int32 CopyType = 3;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // int32 ServerID = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CopyInsItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CopyInsItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CopyInsItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CopyInsItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CopyInsItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CopyInsItem)
    MergeFrom(*source);
  }
}

void CopyInsItem::MergeFrom(const CopyInsItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CopyInsItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void CopyInsItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CopyInsItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CopyInsItem::CopyFrom(const CopyInsItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CopyInsItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CopyInsItem::IsInitialized() const {
  return true;
}

void CopyInsItem::Swap(CopyInsItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CopyInsItem::InternalSwap(CopyInsItem* other) {
  using std::swap;
  swap(copyguid_, other->copyguid_);
  swap(copyid_, other->copyid_);
  swap(copytype_, other->copytype_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CopyInsItem::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CopyReportReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CopyReportReq::kServerIDFieldNumber;
const int CopyReportReq::kCopyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CopyReportReq::CopyReportReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsCopyReportReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CopyReportReq)
}
CopyReportReq::CopyReportReq(const CopyReportReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      copylist_(from.copylist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:CopyReportReq)
}

void CopyReportReq::SharedCtor() {
  serverid_ = 0;
  _cached_size_ = 0;
}

CopyReportReq::~CopyReportReq() {
  // @@protoc_insertion_point(destructor:CopyReportReq)
  SharedDtor();
}

void CopyReportReq::SharedDtor() {
}

void CopyReportReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CopyReportReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CopyReportReq& CopyReportReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsCopyReportReq();
  return *internal_default_instance();
}

CopyReportReq* CopyReportReq::New(::google::protobuf::Arena* arena) const {
  CopyReportReq* n = new CopyReportReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CopyReportReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CopyReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  copylist_.Clear();
  serverid_ = 0;
  _internal_metadata_.Clear();
}

bool CopyReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CopyReportReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CopyInsItem CopyList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_copylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CopyReportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CopyReportReq)
  return false;
#undef DO_
}

void CopyReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CopyReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // repeated .CopyInsItem CopyList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->copylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->copylist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CopyReportReq)
}

::google::protobuf::uint8* CopyReportReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CopyReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // repeated .CopyInsItem CopyList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->copylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->copylist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CopyReportReq)
  return target;
}

size_t CopyReportReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CopyReportReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CopyInsItem CopyList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->copylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->copylist(static_cast<int>(i)));
    }
  }

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CopyReportReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CopyReportReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CopyReportReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CopyReportReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CopyReportReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CopyReportReq)
    MergeFrom(*source);
  }
}

void CopyReportReq::MergeFrom(const CopyReportReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CopyReportReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  copylist_.MergeFrom(from.copylist_);
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void CopyReportReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CopyReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CopyReportReq::CopyFrom(const CopyReportReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CopyReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CopyReportReq::IsInitialized() const {
  return true;
}

void CopyReportReq::Swap(CopyReportReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CopyReportReq::InternalSwap(CopyReportReq* other) {
  using std::swap;
  copylist_.InternalSwap(&other->copylist_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CopyReportReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseHpBottleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseHpBottleReq::UseHpBottleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseHpBottleReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseHpBottleReq)
}
UseHpBottleReq::UseHpBottleReq(const UseHpBottleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UseHpBottleReq)
}

void UseHpBottleReq::SharedCtor() {
  _cached_size_ = 0;
}

UseHpBottleReq::~UseHpBottleReq() {
  // @@protoc_insertion_point(destructor:UseHpBottleReq)
  SharedDtor();
}

void UseHpBottleReq::SharedDtor() {
}

void UseHpBottleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseHpBottleReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseHpBottleReq& UseHpBottleReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseHpBottleReq();
  return *internal_default_instance();
}

UseHpBottleReq* UseHpBottleReq::New(::google::protobuf::Arena* arena) const {
  UseHpBottleReq* n = new UseHpBottleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseHpBottleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UseHpBottleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UseHpBottleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseHpBottleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:UseHpBottleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseHpBottleReq)
  return false;
#undef DO_
}

void UseHpBottleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseHpBottleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UseHpBottleReq)
}

::google::protobuf::uint8* UseHpBottleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseHpBottleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UseHpBottleReq)
  return target;
}

size_t UseHpBottleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UseHpBottleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseHpBottleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseHpBottleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UseHpBottleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseHpBottleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseHpBottleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseHpBottleReq)
    MergeFrom(*source);
  }
}

void UseHpBottleReq::MergeFrom(const UseHpBottleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseHpBottleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UseHpBottleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseHpBottleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseHpBottleReq::CopyFrom(const UseHpBottleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseHpBottleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseHpBottleReq::IsInitialized() const {
  return true;
}

void UseHpBottleReq::Swap(UseHpBottleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseHpBottleReq::InternalSwap(UseHpBottleReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseHpBottleReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseHpBottleAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseHpBottleAck::kRetCodeFieldNumber;
const int UseHpBottleAck::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseHpBottleAck::UseHpBottleAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseHpBottleAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseHpBottleAck)
}
UseHpBottleAck::UseHpBottleAck(const UseHpBottleAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:UseHpBottleAck)
}

void UseHpBottleAck::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(count_));
  _cached_size_ = 0;
}

UseHpBottleAck::~UseHpBottleAck() {
  // @@protoc_insertion_point(destructor:UseHpBottleAck)
  SharedDtor();
}

void UseHpBottleAck::SharedDtor() {
}

void UseHpBottleAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseHpBottleAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseHpBottleAck& UseHpBottleAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseHpBottleAck();
  return *internal_default_instance();
}

UseHpBottleAck* UseHpBottleAck::New(::google::protobuf::Arena* arena) const {
  UseHpBottleAck* n = new UseHpBottleAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseHpBottleAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UseHpBottleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool UseHpBottleAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseHpBottleAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UseHpBottleAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseHpBottleAck)
  return false;
#undef DO_
}

void UseHpBottleAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseHpBottleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // int32 Count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UseHpBottleAck)
}

::google::protobuf::uint8* UseHpBottleAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseHpBottleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // int32 Count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UseHpBottleAck)
  return target;
}

size_t UseHpBottleAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UseHpBottleAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 Count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseHpBottleAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseHpBottleAck)
  GOOGLE_DCHECK_NE(&from, this);
  const UseHpBottleAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseHpBottleAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseHpBottleAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseHpBottleAck)
    MergeFrom(*source);
  }
}

void UseHpBottleAck::MergeFrom(const UseHpBottleAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseHpBottleAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void UseHpBottleAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseHpBottleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseHpBottleAck::CopyFrom(const UseHpBottleAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseHpBottleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseHpBottleAck::IsInitialized() const {
  return true;
}

void UseHpBottleAck::Swap(UseHpBottleAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseHpBottleAck::InternalSwap(UseHpBottleAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseHpBottleAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseMpBottleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseMpBottleReq::UseMpBottleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseMpBottleReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseMpBottleReq)
}
UseMpBottleReq::UseMpBottleReq(const UseMpBottleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UseMpBottleReq)
}

void UseMpBottleReq::SharedCtor() {
  _cached_size_ = 0;
}

UseMpBottleReq::~UseMpBottleReq() {
  // @@protoc_insertion_point(destructor:UseMpBottleReq)
  SharedDtor();
}

void UseMpBottleReq::SharedDtor() {
}

void UseMpBottleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseMpBottleReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseMpBottleReq& UseMpBottleReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseMpBottleReq();
  return *internal_default_instance();
}

UseMpBottleReq* UseMpBottleReq::New(::google::protobuf::Arena* arena) const {
  UseMpBottleReq* n = new UseMpBottleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseMpBottleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UseMpBottleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UseMpBottleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseMpBottleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:UseMpBottleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseMpBottleReq)
  return false;
#undef DO_
}

void UseMpBottleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseMpBottleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UseMpBottleReq)
}

::google::protobuf::uint8* UseMpBottleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseMpBottleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UseMpBottleReq)
  return target;
}

size_t UseMpBottleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UseMpBottleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseMpBottleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseMpBottleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UseMpBottleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseMpBottleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseMpBottleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseMpBottleReq)
    MergeFrom(*source);
  }
}

void UseMpBottleReq::MergeFrom(const UseMpBottleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseMpBottleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UseMpBottleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseMpBottleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseMpBottleReq::CopyFrom(const UseMpBottleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseMpBottleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseMpBottleReq::IsInitialized() const {
  return true;
}

void UseMpBottleReq::Swap(UseMpBottleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseMpBottleReq::InternalSwap(UseMpBottleReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseMpBottleReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseMpBottleAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseMpBottleAck::kRetCodeFieldNumber;
const int UseMpBottleAck::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseMpBottleAck::UseMpBottleAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseMpBottleAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseMpBottleAck)
}
UseMpBottleAck::UseMpBottleAck(const UseMpBottleAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:UseMpBottleAck)
}

void UseMpBottleAck::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(count_));
  _cached_size_ = 0;
}

UseMpBottleAck::~UseMpBottleAck() {
  // @@protoc_insertion_point(destructor:UseMpBottleAck)
  SharedDtor();
}

void UseMpBottleAck::SharedDtor() {
}

void UseMpBottleAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseMpBottleAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseMpBottleAck& UseMpBottleAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseMpBottleAck();
  return *internal_default_instance();
}

UseMpBottleAck* UseMpBottleAck::New(::google::protobuf::Arena* arena) const {
  UseMpBottleAck* n = new UseMpBottleAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseMpBottleAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UseMpBottleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool UseMpBottleAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseMpBottleAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UseMpBottleAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseMpBottleAck)
  return false;
#undef DO_
}

void UseMpBottleAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseMpBottleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // int32 Count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UseMpBottleAck)
}

::google::protobuf::uint8* UseMpBottleAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseMpBottleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // int32 Count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UseMpBottleAck)
  return target;
}

size_t UseMpBottleAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UseMpBottleAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 Count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseMpBottleAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseMpBottleAck)
  GOOGLE_DCHECK_NE(&from, this);
  const UseMpBottleAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseMpBottleAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseMpBottleAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseMpBottleAck)
    MergeFrom(*source);
  }
}

void UseMpBottleAck::MergeFrom(const UseMpBottleAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseMpBottleAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void UseMpBottleAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseMpBottleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseMpBottleAck::CopyFrom(const UseMpBottleAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseMpBottleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseMpBottleAck::IsInitialized() const {
  return true;
}

void UseMpBottleAck::Swap(UseMpBottleAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseMpBottleAck::InternalSwap(UseMpBottleAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseMpBottleAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatMessageReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessageReq::kSrcNameFieldNumber;
const int ChatMessageReq::kSrcIDFieldNumber;
const int ChatMessageReq::kChannelFieldNumber;
const int ChatMessageReq::kGuildIDFieldNumber;
const int ChatMessageReq::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessageReq::ChatMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsChatMessageReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatMessageReq)
}
ChatMessageReq::ChatMessageReq(const ChatMessageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  srcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srcname().size() > 0) {
    srcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcname_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&srcid_, &from.srcid_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&srcid_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:ChatMessageReq)
}

void ChatMessageReq::SharedCtor() {
  srcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&srcid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&srcid_)) + sizeof(channel_));
  _cached_size_ = 0;
}

ChatMessageReq::~ChatMessageReq() {
  // @@protoc_insertion_point(destructor:ChatMessageReq)
  SharedDtor();
}

void ChatMessageReq::SharedDtor() {
  srcname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessageReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMessageReq& ChatMessageReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsChatMessageReq();
  return *internal_default_instance();
}

ChatMessageReq* ChatMessageReq::New(::google::protobuf::Arena* arena) const {
  ChatMessageReq* n = new ChatMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&srcid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&srcid_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool ChatMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string SrcName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcname().data(), static_cast<int>(this->srcname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMessageReq.SrcName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 SrcID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &srcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 GuildID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMessageReq.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatMessageReq)
  return false;
#undef DO_
}

void ChatMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string SrcName = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), static_cast<int>(this->srcname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageReq.SrcName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->srcname(), output);
  }

  // uint64 SrcID = 2;
  if (this->srcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->srcid(), output);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // uint64 GuildID = 4;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->guildid(), output);
  }

  // string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageReq.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatMessageReq)
}

::google::protobuf::uint8* ChatMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string SrcName = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), static_cast<int>(this->srcname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageReq.SrcName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->srcname(), target);
  }

  // uint64 SrcID = 2;
  if (this->srcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->srcid(), target);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // uint64 GuildID = 4;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->guildid(), target);
  }

  // string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageReq.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatMessageReq)
  return target;
}

size_t ChatMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatMessageReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SrcName = 1;
  if (this->srcname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcname());
  }

  // string Content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // uint64 SrcID = 2;
  if (this->srcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->srcid());
  }

  // uint64 GuildID = 4;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMessageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatMessageReq)
    MergeFrom(*source);
  }
}

void ChatMessageReq::MergeFrom(const ChatMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.srcname().size() > 0) {

    srcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcname_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.srcid() != 0) {
    set_srcid(from.srcid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void ChatMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessageReq::CopyFrom(const ChatMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessageReq::IsInitialized() const {
  return true;
}

void ChatMessageReq::Swap(ChatMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessageReq::InternalSwap(ChatMessageReq* other) {
  using std::swap;
  srcname_.Swap(&other->srcname_);
  content_.Swap(&other->content_);
  swap(srcid_, other->srcid_);
  swap(guildid_, other->guildid_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMessageReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatMessageAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessageAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessageAck::ChatMessageAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsChatMessageAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatMessageAck)
}
ChatMessageAck::ChatMessageAck(const ChatMessageAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:ChatMessageAck)
}

void ChatMessageAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

ChatMessageAck::~ChatMessageAck() {
  // @@protoc_insertion_point(destructor:ChatMessageAck)
  SharedDtor();
}

void ChatMessageAck::SharedDtor() {
}

void ChatMessageAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessageAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMessageAck& ChatMessageAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsChatMessageAck();
  return *internal_default_instance();
}

ChatMessageAck* ChatMessageAck::New(::google::protobuf::Arena* arena) const {
  ChatMessageAck* n = new ChatMessageAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMessageAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMessageAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool ChatMessageAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatMessageAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatMessageAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatMessageAck)
  return false;
#undef DO_
}

void ChatMessageAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatMessageAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatMessageAck)
}

::google::protobuf::uint8* ChatMessageAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatMessageAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatMessageAck)
  return target;
}

size_t ChatMessageAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatMessageAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessageAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatMessageAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMessageAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessageAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatMessageAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatMessageAck)
    MergeFrom(*source);
  }
}

void ChatMessageAck::MergeFrom(const ChatMessageAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatMessageAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ChatMessageAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatMessageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessageAck::CopyFrom(const ChatMessageAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMessageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessageAck::IsInitialized() const {
  return true;
}

void ChatMessageAck::Swap(ChatMessageAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessageAck::InternalSwap(ChatMessageAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMessageAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatMessageNty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessageNty::kSrcNameFieldNumber;
const int ChatMessageNty::kSrcIDFieldNumber;
const int ChatMessageNty::kChannelFieldNumber;
const int ChatMessageNty::kGuildIDFieldNumber;
const int ChatMessageNty::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessageNty::ChatMessageNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsChatMessageNty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatMessageNty)
}
ChatMessageNty::ChatMessageNty(const ChatMessageNty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  srcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srcname().size() > 0) {
    srcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcname_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&srcid_, &from.srcid_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&srcid_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:ChatMessageNty)
}

void ChatMessageNty::SharedCtor() {
  srcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&srcid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&srcid_)) + sizeof(channel_));
  _cached_size_ = 0;
}

ChatMessageNty::~ChatMessageNty() {
  // @@protoc_insertion_point(destructor:ChatMessageNty)
  SharedDtor();
}

void ChatMessageNty::SharedDtor() {
  srcname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatMessageNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessageNty::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMessageNty& ChatMessageNty::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsChatMessageNty();
  return *internal_default_instance();
}

ChatMessageNty* ChatMessageNty::New(::google::protobuf::Arena* arena) const {
  ChatMessageNty* n = new ChatMessageNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMessageNty::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMessageNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&srcid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&srcid_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool ChatMessageNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatMessageNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string SrcName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcname().data(), static_cast<int>(this->srcname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMessageNty.SrcName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 SrcID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &srcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 GuildID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMessageNty.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatMessageNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatMessageNty)
  return false;
#undef DO_
}

void ChatMessageNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatMessageNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string SrcName = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), static_cast<int>(this->srcname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageNty.SrcName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->srcname(), output);
  }

  // uint64 SrcID = 2;
  if (this->srcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->srcid(), output);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // uint64 GuildID = 4;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->guildid(), output);
  }

  // string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageNty.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatMessageNty)
}

::google::protobuf::uint8* ChatMessageNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatMessageNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string SrcName = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), static_cast<int>(this->srcname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageNty.SrcName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->srcname(), target);
  }

  // uint64 SrcID = 2;
  if (this->srcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->srcid(), target);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // uint64 GuildID = 4;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->guildid(), target);
  }

  // string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageNty.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatMessageNty)
  return target;
}

size_t ChatMessageNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatMessageNty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SrcName = 1;
  if (this->srcname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcname());
  }

  // string Content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // uint64 SrcID = 2;
  if (this->srcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->srcid());
  }

  // uint64 GuildID = 4;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessageNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatMessageNty)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMessageNty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessageNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatMessageNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatMessageNty)
    MergeFrom(*source);
  }
}

void ChatMessageNty::MergeFrom(const ChatMessageNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatMessageNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.srcname().size() > 0) {

    srcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcname_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.srcid() != 0) {
    set_srcid(from.srcid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void ChatMessageNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatMessageNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessageNty::CopyFrom(const ChatMessageNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMessageNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessageNty::IsInitialized() const {
  return true;
}

void ChatMessageNty::Swap(ChatMessageNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessageNty::InternalSwap(ChatMessageNty* other) {
  using std::swap;
  srcname_.Swap(&other->srcname_);
  content_.Swap(&other->content_);
  swap(srcid_, other->srcid_);
  swap(guildid_, other->guildid_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMessageNty::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SealAccountReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SealAccountReq::kAccountNameFieldNumber;
const int SealAccountReq::kAccountIDFieldNumber;
const int SealAccountReq::kChannelFieldNumber;
const int SealAccountReq::kSealTimeFieldNumber;
const int SealAccountReq::kSealFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SealAccountReq::SealAccountReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSealAccountReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SealAccountReq)
}
SealAccountReq::SealAccountReq(const SealAccountReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seal_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(seal_));
  // @@protoc_insertion_point(copy_constructor:SealAccountReq)
}

void SealAccountReq::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seal_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(seal_));
  _cached_size_ = 0;
}

SealAccountReq::~SealAccountReq() {
  // @@protoc_insertion_point(destructor:SealAccountReq)
  SharedDtor();
}

void SealAccountReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SealAccountReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SealAccountReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SealAccountReq& SealAccountReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSealAccountReq();
  return *internal_default_instance();
}

SealAccountReq* SealAccountReq::New(::google::protobuf::Arena* arena) const {
  SealAccountReq* n = new SealAccountReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SealAccountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SealAccountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seal_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(seal_));
  _internal_metadata_.Clear();
}

bool SealAccountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SealAccountReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string AccountName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), static_cast<int>(this->accountname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SealAccountReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SealTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sealtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Seal = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &seal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SealAccountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SealAccountReq)
  return false;
#undef DO_
}

void SealAccountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SealAccountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SealAccountReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // int32 SealTime = 4;
  if (this->sealtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sealtime(), output);
  }

  // bool Seal = 5;
  if (this->seal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->seal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SealAccountReq)
}

::google::protobuf::uint8* SealAccountReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SealAccountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SealAccountReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // int32 SealTime = 4;
  if (this->sealtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sealtime(), target);
  }

  // bool Seal = 5;
  if (this->seal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->seal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SealAccountReq)
  return target;
}

size_t SealAccountReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SealAccountReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // int32 SealTime = 4;
  if (this->sealtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sealtime());
  }

  // bool Seal = 5;
  if (this->seal() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SealAccountReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SealAccountReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SealAccountReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SealAccountReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SealAccountReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SealAccountReq)
    MergeFrom(*source);
  }
}

void SealAccountReq::MergeFrom(const SealAccountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SealAccountReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.sealtime() != 0) {
    set_sealtime(from.sealtime());
  }
  if (from.seal() != 0) {
    set_seal(from.seal());
  }
}

void SealAccountReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SealAccountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SealAccountReq::CopyFrom(const SealAccountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SealAccountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SealAccountReq::IsInitialized() const {
  return true;
}

void SealAccountReq::Swap(SealAccountReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SealAccountReq::InternalSwap(SealAccountReq* other) {
  using std::swap;
  accountname_.Swap(&other->accountname_);
  swap(accountid_, other->accountid_);
  swap(channel_, other->channel_);
  swap(sealtime_, other->sealtime_);
  swap(seal_, other->seal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SealAccountReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SealAccountAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SealAccountAck::kRetCodeFieldNumber;
const int SealAccountAck::kAccountNameFieldNumber;
const int SealAccountAck::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SealAccountAck::SealAccountAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSealAccountAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SealAccountAck)
}
SealAccountAck::SealAccountAck(const SealAccountAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:SealAccountAck)
}

void SealAccountAck::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

SealAccountAck::~SealAccountAck() {
  // @@protoc_insertion_point(destructor:SealAccountAck)
  SharedDtor();
}

void SealAccountAck::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SealAccountAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SealAccountAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SealAccountAck& SealAccountAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSealAccountAck();
  return *internal_default_instance();
}

SealAccountAck* SealAccountAck::New(::google::protobuf::Arena* arena) const {
  SealAccountAck* n = new SealAccountAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SealAccountAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SealAccountAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool SealAccountAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SealAccountAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AccountName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), static_cast<int>(this->accountname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SealAccountAck.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SealAccountAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SealAccountAck)
  return false;
#undef DO_
}

void SealAccountAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SealAccountAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // string AccountName = 2;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SealAccountAck.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname(), output);
  }

  // uint64 AccountID = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SealAccountAck)
}

::google::protobuf::uint8* SealAccountAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SealAccountAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // string AccountName = 2;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SealAccountAck.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname(), target);
  }

  // uint64 AccountID = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SealAccountAck)
  return target;
}

size_t SealAccountAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SealAccountAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string AccountName = 2;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // uint64 AccountID = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SealAccountAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SealAccountAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SealAccountAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SealAccountAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SealAccountAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SealAccountAck)
    MergeFrom(*source);
  }
}

void SealAccountAck::MergeFrom(const SealAccountAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SealAccountAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SealAccountAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SealAccountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SealAccountAck::CopyFrom(const SealAccountAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SealAccountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SealAccountAck::IsInitialized() const {
  return true;
}

void SealAccountAck::Swap(SealAccountAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SealAccountAck::InternalSwap(SealAccountAck* other) {
  using std::swap;
  accountname_.Swap(&other->accountname_);
  swap(accountid_, other->accountid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SealAccountAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetLastServerNty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLastServerNty::kAccountIDFieldNumber;
const int SetLastServerNty::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLastServerNty::SetLastServerNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetLastServerNty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetLastServerNty)
}
SetLastServerNty::SetLastServerNty(const SetLastServerNty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:SetLastServerNty)
}

void SetLastServerNty::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(serverid_));
  _cached_size_ = 0;
}

SetLastServerNty::~SetLastServerNty() {
  // @@protoc_insertion_point(destructor:SetLastServerNty)
  SharedDtor();
}

void SetLastServerNty::SharedDtor() {
}

void SetLastServerNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLastServerNty::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetLastServerNty& SetLastServerNty::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetLastServerNty();
  return *internal_default_instance();
}

SetLastServerNty* SetLastServerNty::New(::google::protobuf::Arena* arena) const {
  SetLastServerNty* n = new SetLastServerNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetLastServerNty::Clear() {
// @@protoc_insertion_point(message_clear_start:SetLastServerNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool SetLastServerNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetLastServerNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetLastServerNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetLastServerNty)
  return false;
#undef DO_
}

void SetLastServerNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetLastServerNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // int32 ServerID = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetLastServerNty)
}

::google::protobuf::uint8* SetLastServerNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetLastServerNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // int32 ServerID = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetLastServerNty)
  return target;
}

size_t SetLastServerNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetLastServerNty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // int32 ServerID = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLastServerNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetLastServerNty)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLastServerNty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetLastServerNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetLastServerNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetLastServerNty)
    MergeFrom(*source);
  }
}

void SetLastServerNty::MergeFrom(const SetLastServerNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetLastServerNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void SetLastServerNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetLastServerNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLastServerNty::CopyFrom(const SetLastServerNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetLastServerNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLastServerNty::IsInitialized() const {
  return true;
}

void SetLastServerNty::Swap(SetLastServerNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLastServerNty::InternalSwap(SetLastServerNty* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetLastServerNty::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommonReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonReq::kParam1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonReq::CommonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsCommonReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommonReq)
}
CommonReq::CommonReq(const CommonReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param1_ = from.param1_;
  // @@protoc_insertion_point(copy_constructor:CommonReq)
}

void CommonReq::SharedCtor() {
  param1_ = 0u;
  _cached_size_ = 0;
}

CommonReq::~CommonReq() {
  // @@protoc_insertion_point(destructor:CommonReq)
  SharedDtor();
}

void CommonReq::SharedDtor() {
}

void CommonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonReq& CommonReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsCommonReq();
  return *internal_default_instance();
}

CommonReq* CommonReq::New(::google::protobuf::Arena* arena) const {
  CommonReq* n = new CommonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CommonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param1_ = 0u;
  _internal_metadata_.Clear();
}

bool CommonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Param1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommonReq)
  return false;
#undef DO_
}

void CommonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Param1 = 1;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->param1(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CommonReq)
}

::google::protobuf::uint8* CommonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CommonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Param1 = 1;
  if (this->param1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->param1(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommonReq)
  return target;
}

size_t CommonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommonReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Param1 = 1;
  if (this->param1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param1());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CommonReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CommonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CommonReq)
    MergeFrom(*source);
  }
}

void CommonReq::MergeFrom(const CommonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommonReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param1() != 0) {
    set_param1(from.param1());
  }
}

void CommonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CommonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonReq::CopyFrom(const CommonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonReq::IsInitialized() const {
  return true;
}

void CommonReq::Swap(CommonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonReq::InternalSwap(CommonReq* other) {
  using std::swap;
  swap(param1_, other->param1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommonAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonAck::CommonAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsCommonAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommonAck)
}
CommonAck::CommonAck(const CommonAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:CommonAck)
}

void CommonAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

CommonAck::~CommonAck() {
  // @@protoc_insertion_point(destructor:CommonAck)
  SharedDtor();
}

void CommonAck::SharedDtor() {
}

void CommonAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonAck& CommonAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsCommonAck();
  return *internal_default_instance();
}

CommonAck* CommonAck::New(::google::protobuf::Arena* arena) const {
  CommonAck* n = new CommonAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CommonAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool CommonAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommonAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommonAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommonAck)
  return false;
#undef DO_
}

void CommonAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommonAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CommonAck)
}

::google::protobuf::uint8* CommonAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CommonAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommonAck)
  return target;
}

size_t CommonAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommonAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CommonAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CommonAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CommonAck)
    MergeFrom(*source);
  }
}

void CommonAck::MergeFrom(const CommonAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommonAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void CommonAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CommonAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonAck::CopyFrom(const CommonAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommonAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonAck::IsInitialized() const {
  return true;
}

void CommonAck::Swap(CommonAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonAck::InternalSwap(CommonAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadMessageNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadMessageNotify::kMsgIDFieldNumber;
const int BroadMessageNotify::kConnIDFieldNumber;
const int BroadMessageNotify::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadMessageNotify::BroadMessageNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsBroadMessageNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BroadMessageNotify)
}
BroadMessageNotify::BroadMessageNotify(const BroadMessageNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      connid_(from.connid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:BroadMessageNotify)
}

void BroadMessageNotify::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _cached_size_ = 0;
}

BroadMessageNotify::~BroadMessageNotify() {
  // @@protoc_insertion_point(destructor:BroadMessageNotify)
  SharedDtor();
}

void BroadMessageNotify::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BroadMessageNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BroadMessageNotify::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadMessageNotify& BroadMessageNotify::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsBroadMessageNotify();
  return *internal_default_instance();
}

BroadMessageNotify* BroadMessageNotify::New(::google::protobuf::Arena* arena) const {
  BroadMessageNotify* n = new BroadMessageNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BroadMessageNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:BroadMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connid_.Clear();
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool BroadMessageNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BroadMessageNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 MsgID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 ConnID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_connid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_connid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes MsgData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BroadMessageNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BroadMessageNotify)
  return false;
#undef DO_
}

void BroadMessageNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BroadMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 MsgID = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // repeated uint32 ConnID = 2;
  if (this->connid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _connid_cached_byte_size_));
  }
  for (int i = 0, n = this->connid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->connid(i), output);
  }

  // bytes MsgData = 3;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BroadMessageNotify)
}

::google::protobuf::uint8* BroadMessageNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BroadMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 MsgID = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // repeated uint32 ConnID = 2;
  if (this->connid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _connid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->connid_, target);
  }

  // bytes MsgData = 3;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BroadMessageNotify)
  return target;
}

size_t BroadMessageNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BroadMessageNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 ConnID = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->connid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _connid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes MsgData = 3;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 MsgID = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BroadMessageNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BroadMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadMessageNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadMessageNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BroadMessageNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BroadMessageNotify)
    MergeFrom(*source);
  }
}

void BroadMessageNotify::MergeFrom(const BroadMessageNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BroadMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  connid_.MergeFrom(from.connid_);
  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void BroadMessageNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BroadMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadMessageNotify::CopyFrom(const BroadMessageNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BroadMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadMessageNotify::IsInitialized() const {
  return true;
}

void BroadMessageNotify::Swap(BroadMessageNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadMessageNotify::InternalSwap(BroadMessageNotify* other) {
  using std::swap;
  connid_.InternalSwap(&other->connid_);
  msgdata_.Swap(&other->msgdata_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BroadMessageNotify::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogicRegToLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicRegToLoginReq::kServerIDFieldNumber;
const int LogicRegToLoginReq::kServerNameFieldNumber;
const int LogicRegToLoginReq::kServerIpFieldNumber;
const int LogicRegToLoginReq::kServerPortFieldNumber;
const int LogicRegToLoginReq::kHttpPortFieldNumber;
const int LogicRegToLoginReq::kWatchPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicRegToLoginReq::LogicRegToLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsLogicRegToLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicRegToLoginReq)
}
LogicRegToLoginReq::LogicRegToLoginReq(const LogicRegToLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverip().size() > 0) {
    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&watchport_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(watchport_));
  // @@protoc_insertion_point(copy_constructor:LogicRegToLoginReq)
}

void LogicRegToLoginReq::SharedCtor() {
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&watchport_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(watchport_));
  _cached_size_ = 0;
}

LogicRegToLoginReq::~LogicRegToLoginReq() {
  // @@protoc_insertion_point(destructor:LogicRegToLoginReq)
  SharedDtor();
}

void LogicRegToLoginReq::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogicRegToLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicRegToLoginReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogicRegToLoginReq& LogicRegToLoginReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsLogicRegToLoginReq();
  return *internal_default_instance();
}

LogicRegToLoginReq* LogicRegToLoginReq::New(::google::protobuf::Arena* arena) const {
  LogicRegToLoginReq* n = new LogicRegToLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicRegToLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LogicRegToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&watchport_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(watchport_));
  _internal_metadata_.Clear();
}

bool LogicRegToLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicRegToLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogicRegToLoginReq.ServerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerIp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverip().data(), static_cast<int>(this->serverip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogicRegToLoginReq.ServerIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerPort = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 HttpPort = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &httpport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 WatchPort = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &watchport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicRegToLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicRegToLoginReq)
  return false;
#undef DO_
}

void LogicRegToLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicRegToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginReq.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // string ServerIp = 3;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginReq.ServerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->serverip(), output);
  }

  // int32 ServerPort = 4;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverport(), output);
  }

  // int32 HttpPort = 5;
  if (this->httpport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->httpport(), output);
  }

  // int32 WatchPort = 6;
  if (this->watchport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->watchport(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LogicRegToLoginReq)
}

::google::protobuf::uint8* LogicRegToLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogicRegToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginReq.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // string ServerIp = 3;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginReq.ServerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->serverip(), target);
  }

  // int32 ServerPort = 4;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverport(), target);
  }

  // int32 HttpPort = 5;
  if (this->httpport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->httpport(), target);
  }

  // int32 WatchPort = 6;
  if (this->watchport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->watchport(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogicRegToLoginReq)
  return target;
}

size_t LogicRegToLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogicRegToLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ServerName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // string ServerIp = 3;
  if (this->serverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverip());
  }

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // int32 ServerPort = 4;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // int32 HttpPort = 5;
  if (this->httpport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->httpport());
  }

  // int32 WatchPort = 6;
  if (this->watchport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->watchport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicRegToLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogicRegToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicRegToLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicRegToLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogicRegToLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogicRegToLoginReq)
    MergeFrom(*source);
  }
}

void LogicRegToLoginReq::MergeFrom(const LogicRegToLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogicRegToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.serverip().size() > 0) {

    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.httpport() != 0) {
    set_httpport(from.httpport());
  }
  if (from.watchport() != 0) {
    set_watchport(from.watchport());
  }
}

void LogicRegToLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogicRegToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicRegToLoginReq::CopyFrom(const LogicRegToLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogicRegToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicRegToLoginReq::IsInitialized() const {
  return true;
}

void LogicRegToLoginReq::Swap(LogicRegToLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicRegToLoginReq::InternalSwap(LogicRegToLoginReq* other) {
  using std::swap;
  servername_.Swap(&other->servername_);
  serverip_.Swap(&other->serverip_);
  swap(serverid_, other->serverid_);
  swap(serverport_, other->serverport_);
  swap(httpport_, other->httpport_);
  swap(watchport_, other->watchport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicRegToLoginReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogicRegToLoginAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicRegToLoginAck::kRetCodeFieldNumber;
const int LogicRegToLoginAck::kNewSvrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicRegToLoginAck::LogicRegToLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsLogicRegToLoginAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicRegToLoginAck)
}
LogicRegToLoginAck::LogicRegToLoginAck(const LogicRegToLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  newsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newsvrname().size() > 0) {
    newsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newsvrname_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:LogicRegToLoginAck)
}

void LogicRegToLoginAck::SharedCtor() {
  newsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0u;
  _cached_size_ = 0;
}

LogicRegToLoginAck::~LogicRegToLoginAck() {
  // @@protoc_insertion_point(destructor:LogicRegToLoginAck)
  SharedDtor();
}

void LogicRegToLoginAck::SharedDtor() {
  newsvrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogicRegToLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicRegToLoginAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogicRegToLoginAck& LogicRegToLoginAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsLogicRegToLoginAck();
  return *internal_default_instance();
}

LogicRegToLoginAck* LogicRegToLoginAck::New(::google::protobuf::Arena* arena) const {
  LogicRegToLoginAck* n = new LogicRegToLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicRegToLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:LogicRegToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool LogicRegToLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicRegToLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NewSvrName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newsvrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newsvrname().data(), static_cast<int>(this->newsvrname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogicRegToLoginAck.NewSvrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicRegToLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicRegToLoginAck)
  return false;
#undef DO_
}

void LogicRegToLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicRegToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsvrname().data(), static_cast<int>(this->newsvrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginAck.NewSvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->newsvrname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LogicRegToLoginAck)
}

::google::protobuf::uint8* LogicRegToLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogicRegToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsvrname().data(), static_cast<int>(this->newsvrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginAck.NewSvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->newsvrname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogicRegToLoginAck)
  return target;
}

size_t LogicRegToLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogicRegToLoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newsvrname());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicRegToLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogicRegToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicRegToLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicRegToLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogicRegToLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogicRegToLoginAck)
    MergeFrom(*source);
  }
}

void LogicRegToLoginAck::MergeFrom(const LogicRegToLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogicRegToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.newsvrname().size() > 0) {

    newsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newsvrname_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void LogicRegToLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogicRegToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicRegToLoginAck::CopyFrom(const LogicRegToLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogicRegToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicRegToLoginAck::IsInitialized() const {
  return true;
}

void LogicRegToLoginAck::Swap(LogicRegToLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicRegToLoginAck::InternalSwap(LogicRegToLoginAck* other) {
  using std::swap;
  newsvrname_.Swap(&other->newsvrname_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicRegToLoginAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogicUpdateInfoReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicUpdateInfoReq::kServerIDFieldNumber;
const int LogicUpdateInfoReq::kServerNameFieldNumber;
const int LogicUpdateInfoReq::kMaxOnlineFieldNumber;
const int LogicUpdateInfoReq::kCurOnlineFieldNumber;
const int LogicUpdateInfoReq::kTotalNumFieldNumber;
const int LogicUpdateInfoReq::kCacheNumFieldNumber;
const int LogicUpdateInfoReq::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicUpdateInfoReq::LogicUpdateInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsLogicUpdateInfoReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicUpdateInfoReq)
}
LogicUpdateInfoReq::LogicUpdateInfoReq(const LogicUpdateInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:LogicUpdateInfoReq)
}

void LogicUpdateInfoReq::SharedCtor() {
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(status_));
  _cached_size_ = 0;
}

LogicUpdateInfoReq::~LogicUpdateInfoReq() {
  // @@protoc_insertion_point(destructor:LogicUpdateInfoReq)
  SharedDtor();
}

void LogicUpdateInfoReq::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogicUpdateInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicUpdateInfoReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogicUpdateInfoReq& LogicUpdateInfoReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsLogicUpdateInfoReq();
  return *internal_default_instance();
}

LogicUpdateInfoReq* LogicUpdateInfoReq::New(::google::protobuf::Arena* arena) const {
  LogicUpdateInfoReq* n = new LogicUpdateInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicUpdateInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LogicUpdateInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool LogicUpdateInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicUpdateInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogicUpdateInfoReq.ServerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MaxOnline = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxonline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CurOnline = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curonline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TotalNum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CacheNum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cachenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicUpdateInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicUpdateInfoReq)
  return false;
#undef DO_
}

void LogicUpdateInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicUpdateInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicUpdateInfoReq.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // int32 MaxOnline = 3;
  if (this->maxonline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxonline(), output);
  }

  // int32 CurOnline = 4;
  if (this->curonline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->curonline(), output);
  }

  // int32 TotalNum = 5;
  if (this->totalnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->totalnum(), output);
  }

  // int32 CacheNum = 6;
  if (this->cachenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cachenum(), output);
  }

  // int32 Status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LogicUpdateInfoReq)
}

::google::protobuf::uint8* LogicUpdateInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogicUpdateInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicUpdateInfoReq.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // int32 MaxOnline = 3;
  if (this->maxonline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxonline(), target);
  }

  // int32 CurOnline = 4;
  if (this->curonline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->curonline(), target);
  }

  // int32 TotalNum = 5;
  if (this->totalnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->totalnum(), target);
  }

  // int32 CacheNum = 6;
  if (this->cachenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cachenum(), target);
  }

  // int32 Status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogicUpdateInfoReq)
  return target;
}

size_t LogicUpdateInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogicUpdateInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ServerName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // int32 MaxOnline = 3;
  if (this->maxonline() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxonline());
  }

  // int32 CurOnline = 4;
  if (this->curonline() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->curonline());
  }

  // int32 TotalNum = 5;
  if (this->totalnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->totalnum());
  }

  // int32 CacheNum = 6;
  if (this->cachenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cachenum());
  }

  // int32 Status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicUpdateInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogicUpdateInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicUpdateInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicUpdateInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogicUpdateInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogicUpdateInfoReq)
    MergeFrom(*source);
  }
}

void LogicUpdateInfoReq::MergeFrom(const LogicUpdateInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogicUpdateInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.maxonline() != 0) {
    set_maxonline(from.maxonline());
  }
  if (from.curonline() != 0) {
    set_curonline(from.curonline());
  }
  if (from.totalnum() != 0) {
    set_totalnum(from.totalnum());
  }
  if (from.cachenum() != 0) {
    set_cachenum(from.cachenum());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void LogicUpdateInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogicUpdateInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicUpdateInfoReq::CopyFrom(const LogicUpdateInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogicUpdateInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicUpdateInfoReq::IsInitialized() const {
  return true;
}

void LogicUpdateInfoReq::Swap(LogicUpdateInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicUpdateInfoReq::InternalSwap(LogicUpdateInfoReq* other) {
  using std::swap;
  servername_.Swap(&other->servername_);
  swap(serverid_, other->serverid_);
  swap(maxonline_, other->maxonline_);
  swap(curonline_, other->curonline_);
  swap(totalnum_, other->totalnum_);
  swap(cachenum_, other->cachenum_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicUpdateInfoReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogicUpdateInfoAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicUpdateInfoAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicUpdateInfoAck::LogicUpdateInfoAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsLogicUpdateInfoAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicUpdateInfoAck)
}
LogicUpdateInfoAck::LogicUpdateInfoAck(const LogicUpdateInfoAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:LogicUpdateInfoAck)
}

void LogicUpdateInfoAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

LogicUpdateInfoAck::~LogicUpdateInfoAck() {
  // @@protoc_insertion_point(destructor:LogicUpdateInfoAck)
  SharedDtor();
}

void LogicUpdateInfoAck::SharedDtor() {
}

void LogicUpdateInfoAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicUpdateInfoAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogicUpdateInfoAck& LogicUpdateInfoAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsLogicUpdateInfoAck();
  return *internal_default_instance();
}

LogicUpdateInfoAck* LogicUpdateInfoAck::New(::google::protobuf::Arena* arena) const {
  LogicUpdateInfoAck* n = new LogicUpdateInfoAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicUpdateInfoAck::Clear() {
// @@protoc_insertion_point(message_clear_start:LogicUpdateInfoAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool LogicUpdateInfoAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicUpdateInfoAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicUpdateInfoAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicUpdateInfoAck)
  return false;
#undef DO_
}

void LogicUpdateInfoAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicUpdateInfoAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LogicUpdateInfoAck)
}

::google::protobuf::uint8* LogicUpdateInfoAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogicUpdateInfoAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogicUpdateInfoAck)
  return target;
}

size_t LogicUpdateInfoAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogicUpdateInfoAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicUpdateInfoAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogicUpdateInfoAck)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicUpdateInfoAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicUpdateInfoAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogicUpdateInfoAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogicUpdateInfoAck)
    MergeFrom(*source);
  }
}

void LogicUpdateInfoAck::MergeFrom(const LogicUpdateInfoAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogicUpdateInfoAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void LogicUpdateInfoAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogicUpdateInfoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicUpdateInfoAck::CopyFrom(const LogicUpdateInfoAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogicUpdateInfoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicUpdateInfoAck::IsInitialized() const {
  return true;
}

void LogicUpdateInfoAck::Swap(LogicUpdateInfoAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicUpdateInfoAck::InternalSwap(LogicUpdateInfoAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicUpdateInfoAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchHeartBeatReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchHeartBeatReq::kDataFieldNumber;
const int WatchHeartBeatReq::kProcessIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchHeartBeatReq::WatchHeartBeatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsWatchHeartBeatReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WatchHeartBeatReq)
}
WatchHeartBeatReq::WatchHeartBeatReq(const WatchHeartBeatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&processid_, &from.processid_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&processid_)) + sizeof(data_));
  // @@protoc_insertion_point(copy_constructor:WatchHeartBeatReq)
}

void WatchHeartBeatReq::SharedCtor() {
  ::memset(&processid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&processid_)) + sizeof(data_));
  _cached_size_ = 0;
}

WatchHeartBeatReq::~WatchHeartBeatReq() {
  // @@protoc_insertion_point(destructor:WatchHeartBeatReq)
  SharedDtor();
}

void WatchHeartBeatReq::SharedDtor() {
}

void WatchHeartBeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchHeartBeatReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchHeartBeatReq& WatchHeartBeatReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsWatchHeartBeatReq();
  return *internal_default_instance();
}

WatchHeartBeatReq* WatchHeartBeatReq::New(::google::protobuf::Arena* arena) const {
  WatchHeartBeatReq* n = new WatchHeartBeatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchHeartBeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:WatchHeartBeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&processid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&processid_)) + sizeof(data_));
  _internal_metadata_.Clear();
}

bool WatchHeartBeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WatchHeartBeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ProcessID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &processid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WatchHeartBeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WatchHeartBeatReq)
  return false;
#undef DO_
}

void WatchHeartBeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WatchHeartBeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  // uint64 ProcessID = 2;
  if (this->processid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->processid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WatchHeartBeatReq)
}

::google::protobuf::uint8* WatchHeartBeatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WatchHeartBeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  // uint64 ProcessID = 2;
  if (this->processid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->processid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WatchHeartBeatReq)
  return target;
}

size_t WatchHeartBeatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WatchHeartBeatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ProcessID = 2;
  if (this->processid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->processid());
  }

  // uint32 Data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchHeartBeatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WatchHeartBeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchHeartBeatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchHeartBeatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WatchHeartBeatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WatchHeartBeatReq)
    MergeFrom(*source);
  }
}

void WatchHeartBeatReq::MergeFrom(const WatchHeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WatchHeartBeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.processid() != 0) {
    set_processid(from.processid());
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
}

void WatchHeartBeatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WatchHeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchHeartBeatReq::CopyFrom(const WatchHeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WatchHeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchHeartBeatReq::IsInitialized() const {
  return true;
}

void WatchHeartBeatReq::Swap(WatchHeartBeatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchHeartBeatReq::InternalSwap(WatchHeartBeatReq* other) {
  using std::swap;
  swap(processid_, other->processid_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchHeartBeatReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchHeartBeatAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchHeartBeatAck::kRetCodeFieldNumber;
const int WatchHeartBeatAck::kDataFieldNumber;
const int WatchHeartBeatAck::kProcessIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchHeartBeatAck::WatchHeartBeatAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsWatchHeartBeatAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WatchHeartBeatAck)
}
WatchHeartBeatAck::WatchHeartBeatAck(const WatchHeartBeatAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&processid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(processid_));
  // @@protoc_insertion_point(copy_constructor:WatchHeartBeatAck)
}

void WatchHeartBeatAck::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&processid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(processid_));
  _cached_size_ = 0;
}

WatchHeartBeatAck::~WatchHeartBeatAck() {
  // @@protoc_insertion_point(destructor:WatchHeartBeatAck)
  SharedDtor();
}

void WatchHeartBeatAck::SharedDtor() {
}

void WatchHeartBeatAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchHeartBeatAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchHeartBeatAck& WatchHeartBeatAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsWatchHeartBeatAck();
  return *internal_default_instance();
}

WatchHeartBeatAck* WatchHeartBeatAck::New(::google::protobuf::Arena* arena) const {
  WatchHeartBeatAck* n = new WatchHeartBeatAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchHeartBeatAck::Clear() {
// @@protoc_insertion_point(message_clear_start:WatchHeartBeatAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&processid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(processid_));
  _internal_metadata_.Clear();
}

bool WatchHeartBeatAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WatchHeartBeatAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ProcessID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &processid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WatchHeartBeatAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WatchHeartBeatAck)
  return false;
#undef DO_
}

void WatchHeartBeatAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WatchHeartBeatAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint32 Data = 2;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data(), output);
  }

  // uint64 ProcessID = 3;
  if (this->processid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->processid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WatchHeartBeatAck)
}

::google::protobuf::uint8* WatchHeartBeatAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WatchHeartBeatAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint32 Data = 2;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data(), target);
  }

  // uint64 ProcessID = 3;
  if (this->processid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->processid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WatchHeartBeatAck)
  return target;
}

size_t WatchHeartBeatAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WatchHeartBeatAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // uint32 Data = 2;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  // uint64 ProcessID = 3;
  if (this->processid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->processid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchHeartBeatAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WatchHeartBeatAck)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchHeartBeatAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchHeartBeatAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WatchHeartBeatAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WatchHeartBeatAck)
    MergeFrom(*source);
  }
}

void WatchHeartBeatAck::MergeFrom(const WatchHeartBeatAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WatchHeartBeatAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
  if (from.processid() != 0) {
    set_processid(from.processid());
  }
}

void WatchHeartBeatAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WatchHeartBeatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchHeartBeatAck::CopyFrom(const WatchHeartBeatAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WatchHeartBeatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchHeartBeatAck::IsInitialized() const {
  return true;
}

void WatchHeartBeatAck::Swap(WatchHeartBeatAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchHeartBeatAck::InternalSwap(WatchHeartBeatAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(data_, other->data_);
  swap(processid_, other->processid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchHeartBeatAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupEquipReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupEquipReq::kEquipGuidFieldNumber;
const int SetupEquipReq::kBagGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupEquipReq::SetupEquipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupEquipReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupEquipReq)
}
SetupEquipReq::SetupEquipReq(const SetupEquipReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&equipguid_, &from.equipguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagguid_) -
    reinterpret_cast<char*>(&equipguid_)) + sizeof(bagguid_));
  // @@protoc_insertion_point(copy_constructor:SetupEquipReq)
}

void SetupEquipReq::SharedCtor() {
  ::memset(&equipguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bagguid_) -
      reinterpret_cast<char*>(&equipguid_)) + sizeof(bagguid_));
  _cached_size_ = 0;
}

SetupEquipReq::~SetupEquipReq() {
  // @@protoc_insertion_point(destructor:SetupEquipReq)
  SharedDtor();
}

void SetupEquipReq::SharedDtor() {
}

void SetupEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupEquipReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupEquipReq& SetupEquipReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupEquipReq();
  return *internal_default_instance();
}

SetupEquipReq* SetupEquipReq::New(::google::protobuf::Arena* arena) const {
  SetupEquipReq* n = new SetupEquipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupEquipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupEquipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&equipguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bagguid_) -
      reinterpret_cast<char*>(&equipguid_)) + sizeof(bagguid_));
  _internal_metadata_.Clear();
}

bool SetupEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 EquipGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &equipguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 BagGuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bagguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupEquipReq)
  return false;
#undef DO_
}

void SetupEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupEquipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->equipguid(), output);
  }

  // uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bagguid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupEquipReq)
}

::google::protobuf::uint8* SetupEquipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupEquipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->equipguid(), target);
  }

  // uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bagguid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupEquipReq)
  return target;
}

size_t SetupEquipReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupEquipReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->equipguid());
  }

  // uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bagguid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupEquipReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupEquipReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupEquipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupEquipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupEquipReq)
    MergeFrom(*source);
  }
}

void SetupEquipReq::MergeFrom(const SetupEquipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupEquipReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.equipguid() != 0) {
    set_equipguid(from.equipguid());
  }
  if (from.bagguid() != 0) {
    set_bagguid(from.bagguid());
  }
}

void SetupEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupEquipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupEquipReq::CopyFrom(const SetupEquipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupEquipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupEquipReq::IsInitialized() const {
  return true;
}

void SetupEquipReq::Swap(SetupEquipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupEquipReq::InternalSwap(SetupEquipReq* other) {
  using std::swap;
  swap(equipguid_, other->equipguid_);
  swap(bagguid_, other->bagguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupEquipReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupEquipAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupEquipAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupEquipAck::SetupEquipAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupEquipAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupEquipAck)
}
SetupEquipAck::SetupEquipAck(const SetupEquipAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:SetupEquipAck)
}

void SetupEquipAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

SetupEquipAck::~SetupEquipAck() {
  // @@protoc_insertion_point(destructor:SetupEquipAck)
  SharedDtor();
}

void SetupEquipAck::SharedDtor() {
}

void SetupEquipAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupEquipAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupEquipAck& SetupEquipAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupEquipAck();
  return *internal_default_instance();
}

SetupEquipAck* SetupEquipAck::New(::google::protobuf::Arena* arena) const {
  SetupEquipAck* n = new SetupEquipAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupEquipAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupEquipAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool SetupEquipAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupEquipAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupEquipAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupEquipAck)
  return false;
#undef DO_
}

void SetupEquipAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupEquipAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupEquipAck)
}

::google::protobuf::uint8* SetupEquipAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupEquipAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupEquipAck)
  return target;
}

size_t SetupEquipAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupEquipAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupEquipAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupEquipAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupEquipAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupEquipAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupEquipAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupEquipAck)
    MergeFrom(*source);
  }
}

void SetupEquipAck::MergeFrom(const SetupEquipAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupEquipAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupEquipAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupEquipAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupEquipAck::CopyFrom(const SetupEquipAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupEquipAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupEquipAck::IsInitialized() const {
  return true;
}

void SetupEquipAck::Swap(SetupEquipAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupEquipAck::InternalSwap(SetupEquipAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupEquipAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetEquipReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetEquipReq::kEquipGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetEquipReq::UnsetEquipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetEquipReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetEquipReq)
}
UnsetEquipReq::UnsetEquipReq(const UnsetEquipReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  equipguid_ = from.equipguid_;
  // @@protoc_insertion_point(copy_constructor:UnsetEquipReq)
}

void UnsetEquipReq::SharedCtor() {
  equipguid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

UnsetEquipReq::~UnsetEquipReq() {
  // @@protoc_insertion_point(destructor:UnsetEquipReq)
  SharedDtor();
}

void UnsetEquipReq::SharedDtor() {
}

void UnsetEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetEquipReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetEquipReq& UnsetEquipReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetEquipReq();
  return *internal_default_instance();
}

UnsetEquipReq* UnsetEquipReq::New(::google::protobuf::Arena* arena) const {
  UnsetEquipReq* n = new UnsetEquipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetEquipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetEquipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equipguid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool UnsetEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 EquipGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &equipguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetEquipReq)
  return false;
#undef DO_
}

void UnsetEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetEquipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->equipguid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetEquipReq)
}

::google::protobuf::uint8* UnsetEquipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetEquipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->equipguid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetEquipReq)
  return target;
}

size_t UnsetEquipReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetEquipReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->equipguid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetEquipReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetEquipReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetEquipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetEquipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetEquipReq)
    MergeFrom(*source);
  }
}

void UnsetEquipReq::MergeFrom(const UnsetEquipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetEquipReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.equipguid() != 0) {
    set_equipguid(from.equipguid());
  }
}

void UnsetEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetEquipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetEquipReq::CopyFrom(const UnsetEquipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetEquipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetEquipReq::IsInitialized() const {
  return true;
}

void UnsetEquipReq::Swap(UnsetEquipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetEquipReq::InternalSwap(UnsetEquipReq* other) {
  using std::swap;
  swap(equipguid_, other->equipguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetEquipReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetEquipAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetEquipAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetEquipAck::UnsetEquipAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetEquipAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetEquipAck)
}
UnsetEquipAck::UnsetEquipAck(const UnsetEquipAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:UnsetEquipAck)
}

void UnsetEquipAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

UnsetEquipAck::~UnsetEquipAck() {
  // @@protoc_insertion_point(destructor:UnsetEquipAck)
  SharedDtor();
}

void UnsetEquipAck::SharedDtor() {
}

void UnsetEquipAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetEquipAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetEquipAck& UnsetEquipAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetEquipAck();
  return *internal_default_instance();
}

UnsetEquipAck* UnsetEquipAck::New(::google::protobuf::Arena* arena) const {
  UnsetEquipAck* n = new UnsetEquipAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetEquipAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetEquipAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool UnsetEquipAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetEquipAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetEquipAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetEquipAck)
  return false;
#undef DO_
}

void UnsetEquipAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetEquipAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetEquipAck)
}

::google::protobuf::uint8* UnsetEquipAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetEquipAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetEquipAck)
  return target;
}

size_t UnsetEquipAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetEquipAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetEquipAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetEquipAck)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetEquipAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetEquipAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetEquipAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetEquipAck)
    MergeFrom(*source);
  }
}

void UnsetEquipAck::MergeFrom(const UnsetEquipAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetEquipAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetEquipAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetEquipAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetEquipAck::CopyFrom(const UnsetEquipAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetEquipAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetEquipAck::IsInitialized() const {
  return true;
}

void UnsetEquipAck::Swap(UnsetEquipAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetEquipAck::InternalSwap(UnsetEquipAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetEquipAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupGemReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupGemReq::kGemGuidFieldNumber;
const int SetupGemReq::kBagGuidFieldNumber;
const int SetupGemReq::kTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupGemReq::SetupGemReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupGemReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupGemReq)
}
SetupGemReq::SetupGemReq(const SetupGemReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gemguid_, &from.gemguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetpos_) -
    reinterpret_cast<char*>(&gemguid_)) + sizeof(targetpos_));
  // @@protoc_insertion_point(copy_constructor:SetupGemReq)
}

void SetupGemReq::SharedCtor() {
  ::memset(&gemguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetpos_) -
      reinterpret_cast<char*>(&gemguid_)) + sizeof(targetpos_));
  _cached_size_ = 0;
}

SetupGemReq::~SetupGemReq() {
  // @@protoc_insertion_point(destructor:SetupGemReq)
  SharedDtor();
}

void SetupGemReq::SharedDtor() {
}

void SetupGemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupGemReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupGemReq& SetupGemReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupGemReq();
  return *internal_default_instance();
}

SetupGemReq* SetupGemReq::New(::google::protobuf::Arena* arena) const {
  SetupGemReq* n = new SetupGemReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupGemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupGemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gemguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetpos_) -
      reinterpret_cast<char*>(&gemguid_)) + sizeof(targetpos_));
  _internal_metadata_.Clear();
}

bool SetupGemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupGemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 GemGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gemguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 BagGuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bagguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TargetPos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupGemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupGemReq)
  return false;
#undef DO_
}

void SetupGemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupGemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gemguid(), output);
  }

  // uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bagguid(), output);
  }

  // int32 TargetPos = 3;
  if (this->targetpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->targetpos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupGemReq)
}

::google::protobuf::uint8* SetupGemReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupGemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gemguid(), target);
  }

  // uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bagguid(), target);
  }

  // int32 TargetPos = 3;
  if (this->targetpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->targetpos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupGemReq)
  return target;
}

size_t SetupGemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupGemReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gemguid());
  }

  // uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bagguid());
  }

  // int32 TargetPos = 3;
  if (this->targetpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetpos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupGemReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupGemReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupGemReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupGemReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupGemReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupGemReq)
    MergeFrom(*source);
  }
}

void SetupGemReq::MergeFrom(const SetupGemReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupGemReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gemguid() != 0) {
    set_gemguid(from.gemguid());
  }
  if (from.bagguid() != 0) {
    set_bagguid(from.bagguid());
  }
  if (from.targetpos() != 0) {
    set_targetpos(from.targetpos());
  }
}

void SetupGemReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupGemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupGemReq::CopyFrom(const SetupGemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupGemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupGemReq::IsInitialized() const {
  return true;
}

void SetupGemReq::Swap(SetupGemReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupGemReq::InternalSwap(SetupGemReq* other) {
  using std::swap;
  swap(gemguid_, other->gemguid_);
  swap(bagguid_, other->bagguid_);
  swap(targetpos_, other->targetpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupGemReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupGemAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupGemAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupGemAck::SetupGemAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupGemAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupGemAck)
}
SetupGemAck::SetupGemAck(const SetupGemAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:SetupGemAck)
}

void SetupGemAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

SetupGemAck::~SetupGemAck() {
  // @@protoc_insertion_point(destructor:SetupGemAck)
  SharedDtor();
}

void SetupGemAck::SharedDtor() {
}

void SetupGemAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupGemAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupGemAck& SetupGemAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupGemAck();
  return *internal_default_instance();
}

SetupGemAck* SetupGemAck::New(::google::protobuf::Arena* arena) const {
  SetupGemAck* n = new SetupGemAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupGemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupGemAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool SetupGemAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupGemAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupGemAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupGemAck)
  return false;
#undef DO_
}

void SetupGemAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupGemAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupGemAck)
}

::google::protobuf::uint8* SetupGemAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupGemAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupGemAck)
  return target;
}

size_t SetupGemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupGemAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupGemAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupGemAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupGemAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupGemAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupGemAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupGemAck)
    MergeFrom(*source);
  }
}

void SetupGemAck::MergeFrom(const SetupGemAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupGemAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupGemAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupGemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupGemAck::CopyFrom(const SetupGemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupGemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupGemAck::IsInitialized() const {
  return true;
}

void SetupGemAck::Swap(SetupGemAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupGemAck::InternalSwap(SetupGemAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupGemAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetGemReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetGemReq::kGemGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetGemReq::UnsetGemReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetGemReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetGemReq)
}
UnsetGemReq::UnsetGemReq(const UnsetGemReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gemguid_ = from.gemguid_;
  // @@protoc_insertion_point(copy_constructor:UnsetGemReq)
}

void UnsetGemReq::SharedCtor() {
  gemguid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

UnsetGemReq::~UnsetGemReq() {
  // @@protoc_insertion_point(destructor:UnsetGemReq)
  SharedDtor();
}

void UnsetGemReq::SharedDtor() {
}

void UnsetGemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetGemReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetGemReq& UnsetGemReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetGemReq();
  return *internal_default_instance();
}

UnsetGemReq* UnsetGemReq::New(::google::protobuf::Arena* arena) const {
  UnsetGemReq* n = new UnsetGemReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetGemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetGemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gemguid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool UnsetGemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetGemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 GemGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gemguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetGemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetGemReq)
  return false;
#undef DO_
}

void UnsetGemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetGemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gemguid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetGemReq)
}

::google::protobuf::uint8* UnsetGemReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetGemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gemguid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetGemReq)
  return target;
}

size_t UnsetGemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetGemReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gemguid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetGemReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetGemReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetGemReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetGemReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetGemReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetGemReq)
    MergeFrom(*source);
  }
}

void UnsetGemReq::MergeFrom(const UnsetGemReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetGemReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gemguid() != 0) {
    set_gemguid(from.gemguid());
  }
}

void UnsetGemReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetGemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetGemReq::CopyFrom(const UnsetGemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetGemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetGemReq::IsInitialized() const {
  return true;
}

void UnsetGemReq::Swap(UnsetGemReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetGemReq::InternalSwap(UnsetGemReq* other) {
  using std::swap;
  swap(gemguid_, other->gemguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetGemReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetGemAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetGemAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetGemAck::UnsetGemAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetGemAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetGemAck)
}
UnsetGemAck::UnsetGemAck(const UnsetGemAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:UnsetGemAck)
}

void UnsetGemAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

UnsetGemAck::~UnsetGemAck() {
  // @@protoc_insertion_point(destructor:UnsetGemAck)
  SharedDtor();
}

void UnsetGemAck::SharedDtor() {
}

void UnsetGemAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetGemAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetGemAck& UnsetGemAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetGemAck();
  return *internal_default_instance();
}

UnsetGemAck* UnsetGemAck::New(::google::protobuf::Arena* arena) const {
  UnsetGemAck* n = new UnsetGemAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetGemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetGemAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool UnsetGemAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetGemAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetGemAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetGemAck)
  return false;
#undef DO_
}

void UnsetGemAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetGemAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetGemAck)
}

::google::protobuf::uint8* UnsetGemAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetGemAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetGemAck)
  return target;
}

size_t UnsetGemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetGemAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetGemAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetGemAck)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetGemAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetGemAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetGemAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetGemAck)
    MergeFrom(*source);
  }
}

void UnsetGemAck::MergeFrom(const UnsetGemAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetGemAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetGemAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetGemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetGemAck::CopyFrom(const UnsetGemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetGemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetGemAck::IsInitialized() const {
  return true;
}

void UnsetGemAck::Swap(UnsetGemAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetGemAck::InternalSwap(UnsetGemAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetGemAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupPartnerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupPartnerReq::kPartnerGuidFieldNumber;
const int SetupPartnerReq::kTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupPartnerReq::SetupPartnerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupPartnerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupPartnerReq)
}
SetupPartnerReq::SetupPartnerReq(const SetupPartnerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&partnerguid_, &from.partnerguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetpos_) -
    reinterpret_cast<char*>(&partnerguid_)) + sizeof(targetpos_));
  // @@protoc_insertion_point(copy_constructor:SetupPartnerReq)
}

void SetupPartnerReq::SharedCtor() {
  ::memset(&partnerguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetpos_) -
      reinterpret_cast<char*>(&partnerguid_)) + sizeof(targetpos_));
  _cached_size_ = 0;
}

SetupPartnerReq::~SetupPartnerReq() {
  // @@protoc_insertion_point(destructor:SetupPartnerReq)
  SharedDtor();
}

void SetupPartnerReq::SharedDtor() {
}

void SetupPartnerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupPartnerReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupPartnerReq& SetupPartnerReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupPartnerReq();
  return *internal_default_instance();
}

SetupPartnerReq* SetupPartnerReq::New(::google::protobuf::Arena* arena) const {
  SetupPartnerReq* n = new SetupPartnerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupPartnerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupPartnerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&partnerguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetpos_) -
      reinterpret_cast<char*>(&partnerguid_)) + sizeof(targetpos_));
  _internal_metadata_.Clear();
}

bool SetupPartnerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupPartnerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 PartnerGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partnerguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TargetPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupPartnerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupPartnerReq)
  return false;
#undef DO_
}

void SetupPartnerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupPartnerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->partnerguid(), output);
  }

  // int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->targetpos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupPartnerReq)
}

::google::protobuf::uint8* SetupPartnerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupPartnerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->partnerguid(), target);
  }

  // int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->targetpos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupPartnerReq)
  return target;
}

size_t SetupPartnerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupPartnerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->partnerguid());
  }

  // int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetpos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupPartnerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupPartnerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupPartnerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupPartnerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupPartnerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupPartnerReq)
    MergeFrom(*source);
  }
}

void SetupPartnerReq::MergeFrom(const SetupPartnerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupPartnerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.partnerguid() != 0) {
    set_partnerguid(from.partnerguid());
  }
  if (from.targetpos() != 0) {
    set_targetpos(from.targetpos());
  }
}

void SetupPartnerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupPartnerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupPartnerReq::CopyFrom(const SetupPartnerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupPartnerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupPartnerReq::IsInitialized() const {
  return true;
}

void SetupPartnerReq::Swap(SetupPartnerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupPartnerReq::InternalSwap(SetupPartnerReq* other) {
  using std::swap;
  swap(partnerguid_, other->partnerguid_);
  swap(targetpos_, other->targetpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupPartnerReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupPartnerAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupPartnerAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupPartnerAck::SetupPartnerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupPartnerAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupPartnerAck)
}
SetupPartnerAck::SetupPartnerAck(const SetupPartnerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:SetupPartnerAck)
}

void SetupPartnerAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

SetupPartnerAck::~SetupPartnerAck() {
  // @@protoc_insertion_point(destructor:SetupPartnerAck)
  SharedDtor();
}

void SetupPartnerAck::SharedDtor() {
}

void SetupPartnerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupPartnerAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupPartnerAck& SetupPartnerAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupPartnerAck();
  return *internal_default_instance();
}

SetupPartnerAck* SetupPartnerAck::New(::google::protobuf::Arena* arena) const {
  SetupPartnerAck* n = new SetupPartnerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupPartnerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupPartnerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool SetupPartnerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupPartnerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupPartnerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupPartnerAck)
  return false;
#undef DO_
}

void SetupPartnerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupPartnerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupPartnerAck)
}

::google::protobuf::uint8* SetupPartnerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupPartnerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupPartnerAck)
  return target;
}

size_t SetupPartnerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupPartnerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupPartnerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupPartnerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupPartnerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupPartnerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupPartnerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupPartnerAck)
    MergeFrom(*source);
  }
}

void SetupPartnerAck::MergeFrom(const SetupPartnerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupPartnerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupPartnerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupPartnerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupPartnerAck::CopyFrom(const SetupPartnerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupPartnerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupPartnerAck::IsInitialized() const {
  return true;
}

void SetupPartnerAck::Swap(SetupPartnerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupPartnerAck::InternalSwap(SetupPartnerAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupPartnerAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetPartnerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetPartnerReq::kTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetPartnerReq::UnsetPartnerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetPartnerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetPartnerReq)
}
UnsetPartnerReq::UnsetPartnerReq(const UnsetPartnerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetpos_ = from.targetpos_;
  // @@protoc_insertion_point(copy_constructor:UnsetPartnerReq)
}

void UnsetPartnerReq::SharedCtor() {
  targetpos_ = 0;
  _cached_size_ = 0;
}

UnsetPartnerReq::~UnsetPartnerReq() {
  // @@protoc_insertion_point(destructor:UnsetPartnerReq)
  SharedDtor();
}

void UnsetPartnerReq::SharedDtor() {
}

void UnsetPartnerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetPartnerReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetPartnerReq& UnsetPartnerReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetPartnerReq();
  return *internal_default_instance();
}

UnsetPartnerReq* UnsetPartnerReq::New(::google::protobuf::Arena* arena) const {
  UnsetPartnerReq* n = new UnsetPartnerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetPartnerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetPartnerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetpos_ = 0;
  _internal_metadata_.Clear();
}

bool UnsetPartnerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetPartnerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 TargetPos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetPartnerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetPartnerReq)
  return false;
#undef DO_
}

void UnsetPartnerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetPartnerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 TargetPos = 1;
  if (this->targetpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->targetpos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetPartnerReq)
}

::google::protobuf::uint8* UnsetPartnerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetPartnerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 TargetPos = 1;
  if (this->targetpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->targetpos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetPartnerReq)
  return target;
}

size_t UnsetPartnerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetPartnerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 TargetPos = 1;
  if (this->targetpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetpos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetPartnerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetPartnerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetPartnerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetPartnerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetPartnerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetPartnerReq)
    MergeFrom(*source);
  }
}

void UnsetPartnerReq::MergeFrom(const UnsetPartnerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetPartnerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetpos() != 0) {
    set_targetpos(from.targetpos());
  }
}

void UnsetPartnerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetPartnerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetPartnerReq::CopyFrom(const UnsetPartnerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetPartnerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetPartnerReq::IsInitialized() const {
  return true;
}

void UnsetPartnerReq::Swap(UnsetPartnerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetPartnerReq::InternalSwap(UnsetPartnerReq* other) {
  using std::swap;
  swap(targetpos_, other->targetpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetPartnerReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetPartnerAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetPartnerAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetPartnerAck::UnsetPartnerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetPartnerAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetPartnerAck)
}
UnsetPartnerAck::UnsetPartnerAck(const UnsetPartnerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:UnsetPartnerAck)
}

void UnsetPartnerAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

UnsetPartnerAck::~UnsetPartnerAck() {
  // @@protoc_insertion_point(destructor:UnsetPartnerAck)
  SharedDtor();
}

void UnsetPartnerAck::SharedDtor() {
}

void UnsetPartnerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetPartnerAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetPartnerAck& UnsetPartnerAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetPartnerAck();
  return *internal_default_instance();
}

UnsetPartnerAck* UnsetPartnerAck::New(::google::protobuf::Arena* arena) const {
  UnsetPartnerAck* n = new UnsetPartnerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetPartnerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetPartnerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool UnsetPartnerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetPartnerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetPartnerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetPartnerAck)
  return false;
#undef DO_
}

void UnsetPartnerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetPartnerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetPartnerAck)
}

::google::protobuf::uint8* UnsetPartnerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetPartnerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetPartnerAck)
  return target;
}

size_t UnsetPartnerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetPartnerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetPartnerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetPartnerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetPartnerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetPartnerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetPartnerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetPartnerAck)
    MergeFrom(*source);
  }
}

void UnsetPartnerAck::MergeFrom(const UnsetPartnerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetPartnerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetPartnerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetPartnerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetPartnerAck::CopyFrom(const UnsetPartnerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetPartnerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetPartnerAck::IsInitialized() const {
  return true;
}

void UnsetPartnerAck::Swap(UnsetPartnerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetPartnerAck::InternalSwap(UnsetPartnerAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetPartnerAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupMountReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupMountReq::kMountGuidFieldNumber;
const int SetupMountReq::kTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupMountReq::SetupMountReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupMountReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupMountReq)
}
SetupMountReq::SetupMountReq(const SetupMountReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mountguid_, &from.mountguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetpos_) -
    reinterpret_cast<char*>(&mountguid_)) + sizeof(targetpos_));
  // @@protoc_insertion_point(copy_constructor:SetupMountReq)
}

void SetupMountReq::SharedCtor() {
  ::memset(&mountguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetpos_) -
      reinterpret_cast<char*>(&mountguid_)) + sizeof(targetpos_));
  _cached_size_ = 0;
}

SetupMountReq::~SetupMountReq() {
  // @@protoc_insertion_point(destructor:SetupMountReq)
  SharedDtor();
}

void SetupMountReq::SharedDtor() {
}

void SetupMountReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupMountReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupMountReq& SetupMountReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupMountReq();
  return *internal_default_instance();
}

SetupMountReq* SetupMountReq::New(::google::protobuf::Arena* arena) const {
  SetupMountReq* n = new SetupMountReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupMountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupMountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mountguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetpos_) -
      reinterpret_cast<char*>(&mountguid_)) + sizeof(targetpos_));
  _internal_metadata_.Clear();
}

bool SetupMountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupMountReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 MountGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mountguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TargetPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupMountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupMountReq)
  return false;
#undef DO_
}

void SetupMountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupMountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mountguid(), output);
  }

  // int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->targetpos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupMountReq)
}

::google::protobuf::uint8* SetupMountReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupMountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mountguid(), target);
  }

  // int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->targetpos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupMountReq)
  return target;
}

size_t SetupMountReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupMountReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mountguid());
  }

  // int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetpos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupMountReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupMountReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupMountReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupMountReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupMountReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupMountReq)
    MergeFrom(*source);
  }
}

void SetupMountReq::MergeFrom(const SetupMountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupMountReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mountguid() != 0) {
    set_mountguid(from.mountguid());
  }
  if (from.targetpos() != 0) {
    set_targetpos(from.targetpos());
  }
}

void SetupMountReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupMountReq::CopyFrom(const SetupMountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupMountReq::IsInitialized() const {
  return true;
}

void SetupMountReq::Swap(SetupMountReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupMountReq::InternalSwap(SetupMountReq* other) {
  using std::swap;
  swap(mountguid_, other->mountguid_);
  swap(targetpos_, other->targetpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupMountReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupMountAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupMountAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupMountAck::SetupMountAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupMountAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupMountAck)
}
SetupMountAck::SetupMountAck(const SetupMountAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:SetupMountAck)
}

void SetupMountAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

SetupMountAck::~SetupMountAck() {
  // @@protoc_insertion_point(destructor:SetupMountAck)
  SharedDtor();
}

void SetupMountAck::SharedDtor() {
}

void SetupMountAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupMountAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupMountAck& SetupMountAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupMountAck();
  return *internal_default_instance();
}

SetupMountAck* SetupMountAck::New(::google::protobuf::Arena* arena) const {
  SetupMountAck* n = new SetupMountAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupMountAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupMountAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool SetupMountAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupMountAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupMountAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupMountAck)
  return false;
#undef DO_
}

void SetupMountAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupMountAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupMountAck)
}

::google::protobuf::uint8* SetupMountAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupMountAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupMountAck)
  return target;
}

size_t SetupMountAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupMountAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupMountAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupMountAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupMountAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupMountAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupMountAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupMountAck)
    MergeFrom(*source);
  }
}

void SetupMountAck::MergeFrom(const SetupMountAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupMountAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupMountAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupMountAck::CopyFrom(const SetupMountAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupMountAck::IsInitialized() const {
  return true;
}

void SetupMountAck::Swap(SetupMountAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupMountAck::InternalSwap(SetupMountAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupMountAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetMountReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetMountReq::kMountGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetMountReq::UnsetMountReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetMountReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetMountReq)
}
UnsetMountReq::UnsetMountReq(const UnsetMountReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mountguid_ = from.mountguid_;
  // @@protoc_insertion_point(copy_constructor:UnsetMountReq)
}

void UnsetMountReq::SharedCtor() {
  mountguid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

UnsetMountReq::~UnsetMountReq() {
  // @@protoc_insertion_point(destructor:UnsetMountReq)
  SharedDtor();
}

void UnsetMountReq::SharedDtor() {
}

void UnsetMountReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetMountReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetMountReq& UnsetMountReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetMountReq();
  return *internal_default_instance();
}

UnsetMountReq* UnsetMountReq::New(::google::protobuf::Arena* arena) const {
  UnsetMountReq* n = new UnsetMountReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetMountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetMountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mountguid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool UnsetMountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetMountReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 MountGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mountguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetMountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetMountReq)
  return false;
#undef DO_
}

void UnsetMountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetMountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mountguid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetMountReq)
}

::google::protobuf::uint8* UnsetMountReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetMountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mountguid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetMountReq)
  return target;
}

size_t UnsetMountReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetMountReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mountguid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetMountReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetMountReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetMountReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetMountReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetMountReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetMountReq)
    MergeFrom(*source);
  }
}

void UnsetMountReq::MergeFrom(const UnsetMountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetMountReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mountguid() != 0) {
    set_mountguid(from.mountguid());
  }
}

void UnsetMountReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetMountReq::CopyFrom(const UnsetMountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetMountReq::IsInitialized() const {
  return true;
}

void UnsetMountReq::Swap(UnsetMountReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetMountReq::InternalSwap(UnsetMountReq* other) {
  using std::swap;
  swap(mountguid_, other->mountguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetMountReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetMountAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetMountAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetMountAck::UnsetMountAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetMountAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetMountAck)
}
UnsetMountAck::UnsetMountAck(const UnsetMountAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:UnsetMountAck)
}

void UnsetMountAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

UnsetMountAck::~UnsetMountAck() {
  // @@protoc_insertion_point(destructor:UnsetMountAck)
  SharedDtor();
}

void UnsetMountAck::SharedDtor() {
}

void UnsetMountAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetMountAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetMountAck& UnsetMountAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetMountAck();
  return *internal_default_instance();
}

UnsetMountAck* UnsetMountAck::New(::google::protobuf::Arena* arena) const {
  UnsetMountAck* n = new UnsetMountAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetMountAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetMountAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool UnsetMountAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetMountAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetMountAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetMountAck)
  return false;
#undef DO_
}

void UnsetMountAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetMountAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetMountAck)
}

::google::protobuf::uint8* UnsetMountAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetMountAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetMountAck)
  return target;
}

size_t UnsetMountAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetMountAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetMountAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetMountAck)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetMountAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetMountAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetMountAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetMountAck)
    MergeFrom(*source);
  }
}

void UnsetMountAck::MergeFrom(const UnsetMountAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetMountAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetMountAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetMountAck::CopyFrom(const UnsetMountAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetMountAck::IsInitialized() const {
  return true;
}

void UnsetMountAck::Swap(UnsetMountAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetMountAck::InternalSwap(UnsetMountAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetMountAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupPetReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupPetReq::kPetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupPetReq::SetupPetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupPetReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupPetReq)
}
SetupPetReq::SetupPetReq(const SetupPetReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  petguid_ = from.petguid_;
  // @@protoc_insertion_point(copy_constructor:SetupPetReq)
}

void SetupPetReq::SharedCtor() {
  petguid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SetupPetReq::~SetupPetReq() {
  // @@protoc_insertion_point(destructor:SetupPetReq)
  SharedDtor();
}

void SetupPetReq::SharedDtor() {
}

void SetupPetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupPetReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupPetReq& SetupPetReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupPetReq();
  return *internal_default_instance();
}

SetupPetReq* SetupPetReq::New(::google::protobuf::Arena* arena) const {
  SetupPetReq* n = new SetupPetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupPetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupPetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  petguid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SetupPetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupPetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 PetGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &petguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupPetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupPetReq)
  return false;
#undef DO_
}

void SetupPetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupPetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->petguid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupPetReq)
}

::google::protobuf::uint8* SetupPetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupPetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->petguid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupPetReq)
  return target;
}

size_t SetupPetReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupPetReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->petguid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupPetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupPetReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupPetReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupPetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupPetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupPetReq)
    MergeFrom(*source);
  }
}

void SetupPetReq::MergeFrom(const SetupPetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupPetReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.petguid() != 0) {
    set_petguid(from.petguid());
  }
}

void SetupPetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupPetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupPetReq::CopyFrom(const SetupPetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupPetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupPetReq::IsInitialized() const {
  return true;
}

void SetupPetReq::Swap(SetupPetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupPetReq::InternalSwap(SetupPetReq* other) {
  using std::swap;
  swap(petguid_, other->petguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupPetReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetupPetAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupPetAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupPetAck::SetupPetAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupPetAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupPetAck)
}
SetupPetAck::SetupPetAck(const SetupPetAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:SetupPetAck)
}

void SetupPetAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

SetupPetAck::~SetupPetAck() {
  // @@protoc_insertion_point(destructor:SetupPetAck)
  SharedDtor();
}

void SetupPetAck::SharedDtor() {
}

void SetupPetAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupPetAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupPetAck& SetupPetAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsSetupPetAck();
  return *internal_default_instance();
}

SetupPetAck* SetupPetAck::New(::google::protobuf::Arena* arena) const {
  SetupPetAck* n = new SetupPetAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupPetAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupPetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool SetupPetAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupPetAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupPetAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupPetAck)
  return false;
#undef DO_
}

void SetupPetAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupPetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetupPetAck)
}

::google::protobuf::uint8* SetupPetAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupPetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetupPetAck)
  return target;
}

size_t SetupPetAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetupPetAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupPetAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupPetAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupPetAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupPetAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupPetAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupPetAck)
    MergeFrom(*source);
  }
}

void SetupPetAck::MergeFrom(const SetupPetAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupPetAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupPetAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupPetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupPetAck::CopyFrom(const SetupPetAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupPetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupPetAck::IsInitialized() const {
  return true;
}

void SetupPetAck::Swap(SetupPetAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupPetAck::InternalSwap(SetupPetAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupPetAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetPetReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetPetReq::kPetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetPetReq::UnsetPetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetPetReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetPetReq)
}
UnsetPetReq::UnsetPetReq(const UnsetPetReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  petguid_ = from.petguid_;
  // @@protoc_insertion_point(copy_constructor:UnsetPetReq)
}

void UnsetPetReq::SharedCtor() {
  petguid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

UnsetPetReq::~UnsetPetReq() {
  // @@protoc_insertion_point(destructor:UnsetPetReq)
  SharedDtor();
}

void UnsetPetReq::SharedDtor() {
}

void UnsetPetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetPetReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetPetReq& UnsetPetReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetPetReq();
  return *internal_default_instance();
}

UnsetPetReq* UnsetPetReq::New(::google::protobuf::Arena* arena) const {
  UnsetPetReq* n = new UnsetPetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetPetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetPetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  petguid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool UnsetPetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetPetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 PetGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &petguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetPetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetPetReq)
  return false;
#undef DO_
}

void UnsetPetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetPetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->petguid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetPetReq)
}

::google::protobuf::uint8* UnsetPetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetPetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->petguid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetPetReq)
  return target;
}

size_t UnsetPetReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetPetReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->petguid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetPetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetPetReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetPetReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetPetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetPetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetPetReq)
    MergeFrom(*source);
  }
}

void UnsetPetReq::MergeFrom(const UnsetPetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetPetReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.petguid() != 0) {
    set_petguid(from.petguid());
  }
}

void UnsetPetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetPetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetPetReq::CopyFrom(const UnsetPetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetPetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetPetReq::IsInitialized() const {
  return true;
}

void UnsetPetReq::Swap(UnsetPetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetPetReq::InternalSwap(UnsetPetReq* other) {
  using std::swap;
  swap(petguid_, other->petguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetPetReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsetPetAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetPetAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetPetAck::UnsetPetAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetPetAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetPetAck)
}
UnsetPetAck::UnsetPetAck(const UnsetPetAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:UnsetPetAck)
}

void UnsetPetAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

UnsetPetAck::~UnsetPetAck() {
  // @@protoc_insertion_point(destructor:UnsetPetAck)
  SharedDtor();
}

void UnsetPetAck::SharedDtor() {
}

void UnsetPetAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetPetAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsetPetAck& UnsetPetAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUnsetPetAck();
  return *internal_default_instance();
}

UnsetPetAck* UnsetPetAck::New(::google::protobuf::Arena* arena) const {
  UnsetPetAck* n = new UnsetPetAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetPetAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetPetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool UnsetPetAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetPetAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetPetAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetPetAck)
  return false;
#undef DO_
}

void UnsetPetAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetPetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnsetPetAck)
}

::google::protobuf::uint8* UnsetPetAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetPetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnsetPetAck)
  return target;
}

size_t UnsetPetAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetPetAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetPetAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetPetAck)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsetPetAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetPetAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetPetAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetPetAck)
    MergeFrom(*source);
  }
}

void UnsetPetAck::MergeFrom(const UnsetPetAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetPetAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetPetAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetPetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetPetAck::CopyFrom(const UnsetPetAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetPetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetPetAck::IsInitialized() const {
  return true;
}

void UnsetPetAck::Swap(UnsetPetAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetPetAck::InternalSwap(UnsetPetAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetPetAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreBuyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreBuyReq::kStoreTypeFieldNumber;
const int StoreBuyReq::kStoreIDFieldNumber;
const int StoreBuyReq::kBuyNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreBuyReq::StoreBuyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsStoreBuyReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreBuyReq)
}
StoreBuyReq::StoreBuyReq(const StoreBuyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&storetype_, &from.storetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&buynum_) -
    reinterpret_cast<char*>(&storetype_)) + sizeof(buynum_));
  // @@protoc_insertion_point(copy_constructor:StoreBuyReq)
}

void StoreBuyReq::SharedCtor() {
  ::memset(&storetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buynum_) -
      reinterpret_cast<char*>(&storetype_)) + sizeof(buynum_));
  _cached_size_ = 0;
}

StoreBuyReq::~StoreBuyReq() {
  // @@protoc_insertion_point(destructor:StoreBuyReq)
  SharedDtor();
}

void StoreBuyReq::SharedDtor() {
}

void StoreBuyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreBuyReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreBuyReq& StoreBuyReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsStoreBuyReq();
  return *internal_default_instance();
}

StoreBuyReq* StoreBuyReq::New(::google::protobuf::Arena* arena) const {
  StoreBuyReq* n = new StoreBuyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreBuyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreBuyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&storetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buynum_) -
      reinterpret_cast<char*>(&storetype_)) + sizeof(buynum_));
  _internal_metadata_.Clear();
}

bool StoreBuyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreBuyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 StoreType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StoreID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BuyNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buynum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreBuyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreBuyReq)
  return false;
#undef DO_
}

void StoreBuyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreBuyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 StoreType = 1;
  if (this->storetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->storetype(), output);
  }

  // int32 StoreID = 2;
  if (this->storeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->storeid(), output);
  }

  // int32 BuyNum = 3;
  if (this->buynum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buynum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreBuyReq)
}

::google::protobuf::uint8* StoreBuyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreBuyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 StoreType = 1;
  if (this->storetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->storetype(), target);
  }

  // int32 StoreID = 2;
  if (this->storeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->storeid(), target);
  }

  // int32 BuyNum = 3;
  if (this->buynum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buynum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreBuyReq)
  return target;
}

size_t StoreBuyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreBuyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 StoreType = 1;
  if (this->storetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storetype());
  }

  // int32 StoreID = 2;
  if (this->storeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storeid());
  }

  // int32 BuyNum = 3;
  if (this->buynum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buynum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreBuyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreBuyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreBuyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreBuyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreBuyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreBuyReq)
    MergeFrom(*source);
  }
}

void StoreBuyReq::MergeFrom(const StoreBuyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreBuyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.storetype() != 0) {
    set_storetype(from.storetype());
  }
  if (from.storeid() != 0) {
    set_storeid(from.storeid());
  }
  if (from.buynum() != 0) {
    set_buynum(from.buynum());
  }
}

void StoreBuyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreBuyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreBuyReq::CopyFrom(const StoreBuyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreBuyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreBuyReq::IsInitialized() const {
  return true;
}

void StoreBuyReq::Swap(StoreBuyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreBuyReq::InternalSwap(StoreBuyReq* other) {
  using std::swap;
  swap(storetype_, other->storetype_);
  swap(storeid_, other->storeid_);
  swap(buynum_, other->buynum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreBuyReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreBuyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreBuyAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreBuyAck::StoreBuyAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsStoreBuyAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreBuyAck)
}
StoreBuyAck::StoreBuyAck(const StoreBuyAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:StoreBuyAck)
}

void StoreBuyAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

StoreBuyAck::~StoreBuyAck() {
  // @@protoc_insertion_point(destructor:StoreBuyAck)
  SharedDtor();
}

void StoreBuyAck::SharedDtor() {
}

void StoreBuyAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreBuyAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreBuyAck& StoreBuyAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsStoreBuyAck();
  return *internal_default_instance();
}

StoreBuyAck* StoreBuyAck::New(::google::protobuf::Arena* arena) const {
  StoreBuyAck* n = new StoreBuyAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreBuyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreBuyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool StoreBuyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreBuyAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreBuyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreBuyAck)
  return false;
#undef DO_
}

void StoreBuyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreBuyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreBuyAck)
}

::google::protobuf::uint8* StoreBuyAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreBuyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreBuyAck)
  return target;
}

size_t StoreBuyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreBuyAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreBuyAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreBuyAck)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreBuyAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreBuyAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreBuyAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreBuyAck)
    MergeFrom(*source);
  }
}

void StoreBuyAck::MergeFrom(const StoreBuyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreBuyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void StoreBuyAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreBuyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreBuyAck::CopyFrom(const StoreBuyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreBuyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreBuyAck::IsInitialized() const {
  return true;
}

void StoreBuyAck::Swap(StoreBuyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreBuyAck::InternalSwap(StoreBuyAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreBuyAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectChangeNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectChangeNotify::kRoleIDFieldNumber;
const int ObjectChangeNotify::kChangeTypeFieldNumber;
const int ObjectChangeNotify::kIntValue1FieldNumber;
const int ObjectChangeNotify::kIntValue2FieldNumber;
const int ObjectChangeNotify::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectChangeNotify::ObjectChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsObjectChangeNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ObjectChangeNotify)
}
ObjectChangeNotify::ObjectChangeNotify(const ObjectChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strvalue().size() > 0) {
    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&changetype_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(changetype_));
  // @@protoc_insertion_point(copy_constructor:ObjectChangeNotify)
}

void ObjectChangeNotify::SharedCtor() {
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&changetype_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(changetype_));
  _cached_size_ = 0;
}

ObjectChangeNotify::~ObjectChangeNotify() {
  // @@protoc_insertion_point(destructor:ObjectChangeNotify)
  SharedDtor();
}

void ObjectChangeNotify::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ObjectChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectChangeNotify::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectChangeNotify& ObjectChangeNotify::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsObjectChangeNotify();
  return *internal_default_instance();
}

ObjectChangeNotify* ObjectChangeNotify::New(::google::protobuf::Arena* arena) const {
  ObjectChangeNotify* n = new ObjectChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&changetype_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(changetype_));
  _internal_metadata_.Clear();
}

bool ObjectChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ObjectChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ChangeType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &changetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 IntValue1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &intvalue1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 IntValue2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &intvalue2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string StrValue = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), static_cast<int>(this->strvalue().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ObjectChangeNotify.StrValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ObjectChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ObjectChangeNotify)
  return false;
#undef DO_
}

void ObjectChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ObjectChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleid(), output);
  }

  // int32 ChangeType = 2;
  if (this->changetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->changetype(), output);
  }

  // int64 IntValue1 = 3;
  if (this->intvalue1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->intvalue1(), output);
  }

  // int64 IntValue2 = 4;
  if (this->intvalue2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->intvalue2(), output);
  }

  // string StrValue = 5;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), static_cast<int>(this->strvalue().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ObjectChangeNotify.StrValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strvalue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ObjectChangeNotify)
}

::google::protobuf::uint8* ObjectChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ObjectChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleid(), target);
  }

  // int32 ChangeType = 2;
  if (this->changetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->changetype(), target);
  }

  // int64 IntValue1 = 3;
  if (this->intvalue1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->intvalue1(), target);
  }

  // int64 IntValue2 = 4;
  if (this->intvalue2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->intvalue2(), target);
  }

  // string StrValue = 5;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), static_cast<int>(this->strvalue().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ObjectChangeNotify.StrValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strvalue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectChangeNotify)
  return target;
}

size_t ObjectChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string StrValue = 5;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  // int64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }

  // int64 IntValue1 = 3;
  if (this->intvalue1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->intvalue1());
  }

  // int64 IntValue2 = 4;
  if (this->intvalue2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->intvalue2());
  }

  // int32 ChangeType = 2;
  if (this->changetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->changetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectChangeNotify)
    MergeFrom(*source);
  }
}

void ObjectChangeNotify::MergeFrom(const ObjectChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.intvalue1() != 0) {
    set_intvalue1(from.intvalue1());
  }
  if (from.intvalue2() != 0) {
    set_intvalue2(from.intvalue2());
  }
  if (from.changetype() != 0) {
    set_changetype(from.changetype());
  }
}

void ObjectChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectChangeNotify::CopyFrom(const ObjectChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectChangeNotify::IsInitialized() const {
  return true;
}

void ObjectChangeNotify::Swap(ObjectChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectChangeNotify::InternalSwap(ObjectChangeNotify* other) {
  using std::swap;
  strvalue_.Swap(&other->strvalue_);
  swap(roleid_, other->roleid_);
  swap(intvalue1_, other->intvalue1_);
  swap(intvalue2_, other->intvalue2_);
  swap(changetype_, other->changetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectChangeNotify::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HitEffectItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HitEffectItem::kCastGuidFieldNumber;
const int HitEffectItem::kTargetGuidFieldNumber;
const int HitEffectItem::kHurtValueFieldNumber;
const int HitEffectItem::kCritFieldNumber;
const int HitEffectItem::kHitActionIDFieldNumber;
const int HitEffectItem::kHitEffectIDFieldNumber;
const int HitEffectItem::kHitDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HitEffectItem::HitEffectItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsHitEffectItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HitEffectItem)
}
HitEffectItem::HitEffectItem(const HitEffectItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&castguid_, &from.castguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hitdistance_) -
    reinterpret_cast<char*>(&castguid_)) + sizeof(hitdistance_));
  // @@protoc_insertion_point(copy_constructor:HitEffectItem)
}

void HitEffectItem::SharedCtor() {
  ::memset(&castguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hitdistance_) -
      reinterpret_cast<char*>(&castguid_)) + sizeof(hitdistance_));
  _cached_size_ = 0;
}

HitEffectItem::~HitEffectItem() {
  // @@protoc_insertion_point(destructor:HitEffectItem)
  SharedDtor();
}

void HitEffectItem::SharedDtor() {
}

void HitEffectItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HitEffectItem::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HitEffectItem& HitEffectItem::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsHitEffectItem();
  return *internal_default_instance();
}

HitEffectItem* HitEffectItem::New(::google::protobuf::Arena* arena) const {
  HitEffectItem* n = new HitEffectItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HitEffectItem::Clear() {
// @@protoc_insertion_point(message_clear_start:HitEffectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&castguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hitdistance_) -
      reinterpret_cast<char*>(&castguid_)) + sizeof(hitdistance_));
  _internal_metadata_.Clear();
}

bool HitEffectItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HitEffectItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 CastGuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &castguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 TargetGuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 HurtValue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hurtvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Crit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &crit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HitActionID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hitactionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HitEffectID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hiteffectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float HitDistance = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hitdistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HitEffectItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HitEffectItem)
  return false;
#undef DO_
}

void HitEffectItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HitEffectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 CastGuid = 1;
  if (this->castguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->castguid(), output);
  }

  // uint64 TargetGuid = 2;
  if (this->targetguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetguid(), output);
  }

  // int32 HurtValue = 3;
  if (this->hurtvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hurtvalue(), output);
  }

  // bool Crit = 4;
  if (this->crit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->crit(), output);
  }

  // uint32 HitActionID = 5;
  if (this->hitactionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hitactionid(), output);
  }

  // uint32 HitEffectID = 6;
  if (this->hiteffectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->hiteffectid(), output);
  }

  // float HitDistance = 7;
  if (this->hitdistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->hitdistance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HitEffectItem)
}

::google::protobuf::uint8* HitEffectItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HitEffectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 CastGuid = 1;
  if (this->castguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->castguid(), target);
  }

  // uint64 TargetGuid = 2;
  if (this->targetguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetguid(), target);
  }

  // int32 HurtValue = 3;
  if (this->hurtvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hurtvalue(), target);
  }

  // bool Crit = 4;
  if (this->crit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->crit(), target);
  }

  // uint32 HitActionID = 5;
  if (this->hitactionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hitactionid(), target);
  }

  // uint32 HitEffectID = 6;
  if (this->hiteffectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->hiteffectid(), target);
  }

  // float HitDistance = 7;
  if (this->hitdistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->hitdistance(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HitEffectItem)
  return target;
}

size_t HitEffectItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HitEffectItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 CastGuid = 1;
  if (this->castguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->castguid());
  }

  // uint64 TargetGuid = 2;
  if (this->targetguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetguid());
  }

  // int32 HurtValue = 3;
  if (this->hurtvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hurtvalue());
  }

  // bool Crit = 4;
  if (this->crit() != 0) {
    total_size += 1 + 1;
  }

  // uint32 HitActionID = 5;
  if (this->hitactionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hitactionid());
  }

  // uint32 HitEffectID = 6;
  if (this->hiteffectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hiteffectid());
  }

  // float HitDistance = 7;
  if (this->hitdistance() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HitEffectItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HitEffectItem)
  GOOGLE_DCHECK_NE(&from, this);
  const HitEffectItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HitEffectItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HitEffectItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HitEffectItem)
    MergeFrom(*source);
  }
}

void HitEffectItem::MergeFrom(const HitEffectItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HitEffectItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.castguid() != 0) {
    set_castguid(from.castguid());
  }
  if (from.targetguid() != 0) {
    set_targetguid(from.targetguid());
  }
  if (from.hurtvalue() != 0) {
    set_hurtvalue(from.hurtvalue());
  }
  if (from.crit() != 0) {
    set_crit(from.crit());
  }
  if (from.hitactionid() != 0) {
    set_hitactionid(from.hitactionid());
  }
  if (from.hiteffectid() != 0) {
    set_hiteffectid(from.hiteffectid());
  }
  if (from.hitdistance() != 0) {
    set_hitdistance(from.hitdistance());
  }
}

void HitEffectItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HitEffectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HitEffectItem::CopyFrom(const HitEffectItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HitEffectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HitEffectItem::IsInitialized() const {
  return true;
}

void HitEffectItem::Swap(HitEffectItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HitEffectItem::InternalSwap(HitEffectItem* other) {
  using std::swap;
  swap(castguid_, other->castguid_);
  swap(targetguid_, other->targetguid_);
  swap(hurtvalue_, other->hurtvalue_);
  swap(crit_, other->crit_);
  swap(hitactionid_, other->hitactionid_);
  swap(hiteffectid_, other->hiteffectid_);
  swap(hitdistance_, other->hitdistance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HitEffectItem::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HitEffectNtf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HitEffectNtf::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HitEffectNtf::HitEffectNtf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsHitEffectNtf();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HitEffectNtf)
}
HitEffectNtf::HitEffectNtf(const HitEffectNtf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      itemlist_(from.itemlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HitEffectNtf)
}

void HitEffectNtf::SharedCtor() {
  _cached_size_ = 0;
}

HitEffectNtf::~HitEffectNtf() {
  // @@protoc_insertion_point(destructor:HitEffectNtf)
  SharedDtor();
}

void HitEffectNtf::SharedDtor() {
}

void HitEffectNtf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HitEffectNtf::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HitEffectNtf& HitEffectNtf::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsHitEffectNtf();
  return *internal_default_instance();
}

HitEffectNtf* HitEffectNtf::New(::google::protobuf::Arena* arena) const {
  HitEffectNtf* n = new HitEffectNtf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HitEffectNtf::Clear() {
// @@protoc_insertion_point(message_clear_start:HitEffectNtf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemlist_.Clear();
  _internal_metadata_.Clear();
}

bool HitEffectNtf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HitEffectNtf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HitEffectItem ItemList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HitEffectNtf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HitEffectNtf)
  return false;
#undef DO_
}

void HitEffectNtf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HitEffectNtf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HitEffectItem ItemList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HitEffectNtf)
}

::google::protobuf::uint8* HitEffectNtf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HitEffectNtf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HitEffectItem ItemList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HitEffectNtf)
  return target;
}

size_t HitEffectNtf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HitEffectNtf)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HitEffectItem ItemList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->itemlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HitEffectNtf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HitEffectNtf)
  GOOGLE_DCHECK_NE(&from, this);
  const HitEffectNtf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HitEffectNtf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HitEffectNtf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HitEffectNtf)
    MergeFrom(*source);
  }
}

void HitEffectNtf::MergeFrom(const HitEffectNtf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HitEffectNtf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  itemlist_.MergeFrom(from.itemlist_);
}

void HitEffectNtf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HitEffectNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HitEffectNtf::CopyFrom(const HitEffectNtf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HitEffectNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HitEffectNtf::IsInitialized() const {
  return true;
}

void HitEffectNtf::Swap(HitEffectNtf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HitEffectNtf::InternalSwap(HitEffectNtf* other) {
  using std::swap;
  itemlist_.InternalSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HitEffectNtf::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseItemReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseItemReq::UseItemReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseItemReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseItemReq)
}
UseItemReq::UseItemReq(const UseItemReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UseItemReq)
}

void UseItemReq::SharedCtor() {
  _cached_size_ = 0;
}

UseItemReq::~UseItemReq() {
  // @@protoc_insertion_point(destructor:UseItemReq)
  SharedDtor();
}

void UseItemReq::SharedDtor() {
}

void UseItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseItemReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseItemReq& UseItemReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseItemReq();
  return *internal_default_instance();
}

UseItemReq* UseItemReq::New(::google::protobuf::Arena* arena) const {
  UseItemReq* n = new UseItemReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UseItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UseItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:UseItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseItemReq)
  return false;
#undef DO_
}

void UseItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UseItemReq)
}

::google::protobuf::uint8* UseItemReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UseItemReq)
  return target;
}

size_t UseItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UseItemReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseItemReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseItemReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UseItemReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseItemReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseItemReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseItemReq)
    MergeFrom(*source);
  }
}

void UseItemReq::MergeFrom(const UseItemReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseItemReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UseItemReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseItemReq::CopyFrom(const UseItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemReq::IsInitialized() const {
  return true;
}

void UseItemReq::Swap(UseItemReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseItemReq::InternalSwap(UseItemReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseItemReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseItemAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseItemAck::UseItemAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseItemAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseItemAck)
}
UseItemAck::UseItemAck(const UseItemAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UseItemAck)
}

void UseItemAck::SharedCtor() {
  _cached_size_ = 0;
}

UseItemAck::~UseItemAck() {
  // @@protoc_insertion_point(destructor:UseItemAck)
  SharedDtor();
}

void UseItemAck::SharedDtor() {
}

void UseItemAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseItemAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseItemAck& UseItemAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsUseItemAck();
  return *internal_default_instance();
}

UseItemAck* UseItemAck::New(::google::protobuf::Arena* arena) const {
  UseItemAck* n = new UseItemAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UseItemAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UseItemAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseItemAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:UseItemAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseItemAck)
  return false;
#undef DO_
}

void UseItemAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseItemAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UseItemAck)
}

::google::protobuf::uint8* UseItemAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseItemAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UseItemAck)
  return target;
}

size_t UseItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UseItemAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseItemAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseItemAck)
  GOOGLE_DCHECK_NE(&from, this);
  const UseItemAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseItemAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseItemAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseItemAck)
    MergeFrom(*source);
  }
}

void UseItemAck::MergeFrom(const UseItemAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseItemAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UseItemAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseItemAck::CopyFrom(const UseItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemAck::IsInitialized() const {
  return true;
}

void UseItemAck::Swap(UseItemAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseItemAck::InternalSwap(UseItemAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseItemAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgGetRandomNameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetRandomNameReq::kSexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetRandomNameReq::MsgGetRandomNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsMsgGetRandomNameReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgGetRandomNameReq)
}
MsgGetRandomNameReq::MsgGetRandomNameReq(const MsgGetRandomNameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sex_ = from.sex_;
  // @@protoc_insertion_point(copy_constructor:MsgGetRandomNameReq)
}

void MsgGetRandomNameReq::SharedCtor() {
  sex_ = 0;
  _cached_size_ = 0;
}

MsgGetRandomNameReq::~MsgGetRandomNameReq() {
  // @@protoc_insertion_point(destructor:MsgGetRandomNameReq)
  SharedDtor();
}

void MsgGetRandomNameReq::SharedDtor() {
}

void MsgGetRandomNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetRandomNameReq::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgGetRandomNameReq& MsgGetRandomNameReq::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsMsgGetRandomNameReq();
  return *internal_default_instance();
}

MsgGetRandomNameReq* MsgGetRandomNameReq::New(::google::protobuf::Arena* arena) const {
  MsgGetRandomNameReq* n = new MsgGetRandomNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGetRandomNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgGetRandomNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sex_ = 0;
  _internal_metadata_.Clear();
}

bool MsgGetRandomNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgGetRandomNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Sex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgGetRandomNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgGetRandomNameReq)
  return false;
#undef DO_
}

void MsgGetRandomNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgGetRandomNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Sex = 1;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sex(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgGetRandomNameReq)
}

::google::protobuf::uint8* MsgGetRandomNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgGetRandomNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Sex = 1;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sex(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgGetRandomNameReq)
  return target;
}

size_t MsgGetRandomNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgGetRandomNameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Sex = 1;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetRandomNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgGetRandomNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGetRandomNameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgGetRandomNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgGetRandomNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgGetRandomNameReq)
    MergeFrom(*source);
  }
}

void MsgGetRandomNameReq::MergeFrom(const MsgGetRandomNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgGetRandomNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sex() != 0) {
    set_sex(from.sex());
  }
}

void MsgGetRandomNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgGetRandomNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetRandomNameReq::CopyFrom(const MsgGetRandomNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgGetRandomNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetRandomNameReq::IsInitialized() const {
  return true;
}

void MsgGetRandomNameReq::Swap(MsgGetRandomNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetRandomNameReq::InternalSwap(MsgGetRandomNameReq* other) {
  using std::swap;
  swap(sex_, other->sex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGetRandomNameReq::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgGetRandomNameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetRandomNameAck::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetRandomNameAck::MsgGetRandomNameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fGame_2eproto::InitDefaultsMsgGetRandomNameAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgGetRandomNameAck)
}
MsgGetRandomNameAck::MsgGetRandomNameAck(const MsgGetRandomNameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:MsgGetRandomNameAck)
}

void MsgGetRandomNameAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgGetRandomNameAck::~MsgGetRandomNameAck() {
  // @@protoc_insertion_point(destructor:MsgGetRandomNameAck)
  SharedDtor();
}

void MsgGetRandomNameAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgGetRandomNameAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetRandomNameAck::descriptor() {
  ::protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgGetRandomNameAck& MsgGetRandomNameAck::default_instance() {
  ::protobuf_Msg_5fGame_2eproto::InitDefaultsMsgGetRandomNameAck();
  return *internal_default_instance();
}

MsgGetRandomNameAck* MsgGetRandomNameAck::New(::google::protobuf::Arena* arena) const {
  MsgGetRandomNameAck* n = new MsgGetRandomNameAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGetRandomNameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgGetRandomNameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MsgGetRandomNameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgGetRandomNameAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgGetRandomNameAck.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgGetRandomNameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgGetRandomNameAck)
  return false;
#undef DO_
}

void MsgGetRandomNameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgGetRandomNameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgGetRandomNameAck.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgGetRandomNameAck)
}

::google::protobuf::uint8* MsgGetRandomNameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgGetRandomNameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgGetRandomNameAck.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgGetRandomNameAck)
  return target;
}

size_t MsgGetRandomNameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgGetRandomNameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetRandomNameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgGetRandomNameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGetRandomNameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgGetRandomNameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgGetRandomNameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgGetRandomNameAck)
    MergeFrom(*source);
  }
}

void MsgGetRandomNameAck::MergeFrom(const MsgGetRandomNameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgGetRandomNameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void MsgGetRandomNameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgGetRandomNameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetRandomNameAck::CopyFrom(const MsgGetRandomNameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgGetRandomNameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetRandomNameAck::IsInitialized() const {
  return true;
}

void MsgGetRandomNameAck::Swap(MsgGetRandomNameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetRandomNameAck::InternalSwap(MsgGetRandomNameAck* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGetRandomNameAck::GetMetadata() const {
  protobuf_Msg_5fGame_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fGame_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

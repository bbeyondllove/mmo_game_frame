// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_LoginDBData.proto

#include "Msg_LoginDBData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class DBRoleDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBRoleData>
      _instance;
} _DBRoleData_default_instance_;
class DBBagItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBBagItem>
      _instance;
} _DBBagItem_default_instance_;
class DBBagDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBBagData>
      _instance;
} _DBBagData_default_instance_;
class DBCopyItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBCopyItem>
      _instance;
} _DBCopyItem_default_instance_;
class DBChapterItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBChapterItem>
      _instance;
} _DBChapterItem_default_instance_;
class DBCopyDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBCopyData>
      _instance;
} _DBCopyData_default_instance_;
class DBEquipItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBEquipItem>
      _instance;
} _DBEquipItem_default_instance_;
class DBEquipDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBEquipData>
      _instance;
} _DBEquipData_default_instance_;
class DBGemItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBGemItem>
      _instance;
} _DBGemItem_default_instance_;
class DBGemDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBGemData>
      _instance;
} _DBGemData_default_instance_;
class DBSkillItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBSkillItem>
      _instance;
} _DBSkillItem_default_instance_;
class DBSkillDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBSkillData>
      _instance;
} _DBSkillData_default_instance_;
class DBPetItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPetItem>
      _instance;
} _DBPetItem_default_instance_;
class DBPetDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPetData>
      _instance;
} _DBPetData_default_instance_;
class DBMountItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBMountItem>
      _instance;
} _DBMountItem_default_instance_;
class DBMountDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBMountData>
      _instance;
} _DBMountData_default_instance_;
class DBPartnerItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPartnerItem>
      _instance;
} _DBPartnerItem_default_instance_;
class DBPartnerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPartnerData>
      _instance;
} _DBPartnerData_default_instance_;
class DBTaskItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBTaskItem>
      _instance;
} _DBTaskItem_default_instance_;
class DBTaskDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBTaskData>
      _instance;
} _DBTaskData_default_instance_;
class DBMailItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBMailItem>
      _instance;
} _DBMailItem_default_instance_;
class DBMailDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBMailData>
      _instance;
} _DBMailData_default_instance_;
class DBActivityItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBActivityItem>
      _instance;
} _DBActivityItem_default_instance_;
class DBActivityDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBActivityData>
      _instance;
} _DBActivityData_default_instance_;
class DBCounterItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBCounterItem>
      _instance;
} _DBCounterItem_default_instance_;
class DBCounterDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBCounterData>
      _instance;
} _DBCounterData_default_instance_;
class DBFriendItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBFriendItem>
      _instance;
} _DBFriendItem_default_instance_;
class DBFriendDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBFriendData>
      _instance;
} _DBFriendData_default_instance_;
class DBRoleLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBRoleLoginAck>
      _instance;
} _DBRoleLoginAck_default_instance_;
namespace protobuf_Msg_5fLoginDBData_2eproto {
void InitDefaultsDBRoleDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBRoleData_default_instance_;
    new (ptr) ::DBRoleData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBRoleData::InitAsDefaultInstance();
}

void InitDefaultsDBRoleData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBRoleDataImpl);
}

void InitDefaultsDBBagItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBBagItem_default_instance_;
    new (ptr) ::DBBagItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBBagItem::InitAsDefaultInstance();
}

void InitDefaultsDBBagItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBBagItemImpl);
}

void InitDefaultsDBBagDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBBagItem();
  {
    void* ptr = &::_DBBagData_default_instance_;
    new (ptr) ::DBBagData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBBagData::InitAsDefaultInstance();
}

void InitDefaultsDBBagData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBBagDataImpl);
}

void InitDefaultsDBCopyItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBCopyItem_default_instance_;
    new (ptr) ::DBCopyItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBCopyItem::InitAsDefaultInstance();
}

void InitDefaultsDBCopyItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBCopyItemImpl);
}

void InitDefaultsDBChapterItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBChapterItem_default_instance_;
    new (ptr) ::DBChapterItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBChapterItem::InitAsDefaultInstance();
}

void InitDefaultsDBChapterItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBChapterItemImpl);
}

void InitDefaultsDBCopyDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCopyItem();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBChapterItem();
  {
    void* ptr = &::_DBCopyData_default_instance_;
    new (ptr) ::DBCopyData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBCopyData::InitAsDefaultInstance();
}

void InitDefaultsDBCopyData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBCopyDataImpl);
}

void InitDefaultsDBEquipItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBEquipItem_default_instance_;
    new (ptr) ::DBEquipItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBEquipItem::InitAsDefaultInstance();
}

void InitDefaultsDBEquipItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBEquipItemImpl);
}

void InitDefaultsDBEquipDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBEquipItem();
  {
    void* ptr = &::_DBEquipData_default_instance_;
    new (ptr) ::DBEquipData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBEquipData::InitAsDefaultInstance();
}

void InitDefaultsDBEquipData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBEquipDataImpl);
}

void InitDefaultsDBGemItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBGemItem_default_instance_;
    new (ptr) ::DBGemItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBGemItem::InitAsDefaultInstance();
}

void InitDefaultsDBGemItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBGemItemImpl);
}

void InitDefaultsDBGemDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBGemItem();
  {
    void* ptr = &::_DBGemData_default_instance_;
    new (ptr) ::DBGemData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBGemData::InitAsDefaultInstance();
}

void InitDefaultsDBGemData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBGemDataImpl);
}

void InitDefaultsDBSkillItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBSkillItem_default_instance_;
    new (ptr) ::DBSkillItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBSkillItem::InitAsDefaultInstance();
}

void InitDefaultsDBSkillItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBSkillItemImpl);
}

void InitDefaultsDBSkillDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBSkillItem();
  {
    void* ptr = &::_DBSkillData_default_instance_;
    new (ptr) ::DBSkillData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBSkillData::InitAsDefaultInstance();
}

void InitDefaultsDBSkillData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBSkillDataImpl);
}

void InitDefaultsDBPetItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBPetItem_default_instance_;
    new (ptr) ::DBPetItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBPetItem::InitAsDefaultInstance();
}

void InitDefaultsDBPetItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBPetItemImpl);
}

void InitDefaultsDBPetDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPetItem();
  {
    void* ptr = &::_DBPetData_default_instance_;
    new (ptr) ::DBPetData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBPetData::InitAsDefaultInstance();
}

void InitDefaultsDBPetData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBPetDataImpl);
}

void InitDefaultsDBMountItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBMountItem_default_instance_;
    new (ptr) ::DBMountItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBMountItem::InitAsDefaultInstance();
}

void InitDefaultsDBMountItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBMountItemImpl);
}

void InitDefaultsDBMountDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMountItem();
  {
    void* ptr = &::_DBMountData_default_instance_;
    new (ptr) ::DBMountData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBMountData::InitAsDefaultInstance();
}

void InitDefaultsDBMountData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBMountDataImpl);
}

void InitDefaultsDBPartnerItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBPartnerItem_default_instance_;
    new (ptr) ::DBPartnerItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBPartnerItem::InitAsDefaultInstance();
}

void InitDefaultsDBPartnerItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBPartnerItemImpl);
}

void InitDefaultsDBPartnerDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPartnerItem();
  {
    void* ptr = &::_DBPartnerData_default_instance_;
    new (ptr) ::DBPartnerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBPartnerData::InitAsDefaultInstance();
}

void InitDefaultsDBPartnerData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBPartnerDataImpl);
}

void InitDefaultsDBTaskItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBTaskItem_default_instance_;
    new (ptr) ::DBTaskItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBTaskItem::InitAsDefaultInstance();
}

void InitDefaultsDBTaskItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBTaskItemImpl);
}

void InitDefaultsDBTaskDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBTaskItem();
  {
    void* ptr = &::_DBTaskData_default_instance_;
    new (ptr) ::DBTaskData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBTaskData::InitAsDefaultInstance();
}

void InitDefaultsDBTaskData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBTaskDataImpl);
}

void InitDefaultsDBMailItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBMailItem_default_instance_;
    new (ptr) ::DBMailItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBMailItem::InitAsDefaultInstance();
}

void InitDefaultsDBMailItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBMailItemImpl);
}

void InitDefaultsDBMailDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMailItem();
  {
    void* ptr = &::_DBMailData_default_instance_;
    new (ptr) ::DBMailData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBMailData::InitAsDefaultInstance();
}

void InitDefaultsDBMailData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBMailDataImpl);
}

void InitDefaultsDBActivityItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBActivityItem_default_instance_;
    new (ptr) ::DBActivityItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBActivityItem::InitAsDefaultInstance();
}

void InitDefaultsDBActivityItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBActivityItemImpl);
}

void InitDefaultsDBActivityDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBActivityItem();
  {
    void* ptr = &::_DBActivityData_default_instance_;
    new (ptr) ::DBActivityData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBActivityData::InitAsDefaultInstance();
}

void InitDefaultsDBActivityData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBActivityDataImpl);
}

void InitDefaultsDBCounterItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBCounterItem_default_instance_;
    new (ptr) ::DBCounterItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBCounterItem::InitAsDefaultInstance();
}

void InitDefaultsDBCounterItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBCounterItemImpl);
}

void InitDefaultsDBCounterDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCounterItem();
  {
    void* ptr = &::_DBCounterData_default_instance_;
    new (ptr) ::DBCounterData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBCounterData::InitAsDefaultInstance();
}

void InitDefaultsDBCounterData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBCounterDataImpl);
}

void InitDefaultsDBFriendItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBFriendItem_default_instance_;
    new (ptr) ::DBFriendItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBFriendItem::InitAsDefaultInstance();
}

void InitDefaultsDBFriendItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBFriendItemImpl);
}

void InitDefaultsDBFriendDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBFriendItem();
  {
    void* ptr = &::_DBFriendData_default_instance_;
    new (ptr) ::DBFriendData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBFriendData::InitAsDefaultInstance();
}

void InitDefaultsDBFriendData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBFriendDataImpl);
}

void InitDefaultsDBRoleLoginAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBRoleData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBBagData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCopyData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBEquipData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBGemData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPetData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPartnerData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBTaskData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMailData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMountData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBActivityData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCounterData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBFriendData();
  protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBSkillData();
  {
    void* ptr = &::_DBRoleLoginAck_default_instance_;
    new (ptr) ::DBRoleLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBRoleLoginAck::InitAsDefaultInstance();
}

void InitDefaultsDBRoleLoginAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBRoleLoginAckImpl);
}

::google::protobuf::Metadata file_level_metadata[29];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, carrerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, langid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, viplvl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, vipexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, fightvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, citycopyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, actime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, logontime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, logofftime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagItem, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagItem, itemguid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagItem, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagItem, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagItem, bind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagItem, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBBagData, itemlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyItem, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyItem, starnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyItem, battlecnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyItem, resetcnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyItem, battletime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyItem, resettime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBChapterItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBChapterItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBChapterItem, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBChapterItem, chapterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBChapterItem, staraward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBChapterItem, sceneaward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyData, copylist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCopyData, chapterlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, equipid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, strengthlvl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, refinelevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, starlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, refineexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, starexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipItem, isusing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBEquipData, equiplist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, gemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, strengthlvl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, refinelevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, starlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, refineexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, starexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemItem, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBGemData, gemlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBSkillItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBSkillItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBSkillItem, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBSkillItem, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBSkillItem, keypos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBSkillData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBSkillData, skilllist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetItem, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetItem, petid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetItem, strengthlvl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetItem, refinelevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetItem, starlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetItem, isusing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPetData, petlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountItem, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountItem, mountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountItem, strengthlvl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountItem, refinelevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountItem, starlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountItem, isusing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMountData, mountlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerItem, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerItem, partnerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerItem, strengthlvl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerItem, refinelevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerItem, starlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerItem, setpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBPartnerData, partnerlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBTaskItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBTaskItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBTaskItem, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBTaskItem, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBTaskItem, progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBTaskData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBTaskData, tasklist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailItem, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBMailData, maillist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBActivityItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBActivityItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBActivityItem, activityid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBActivityItem, activitytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBActivityItem, jointime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBActivityItem, datalen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBActivityItem, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBActivityData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBActivityData, activitylist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterItem, counterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterItem, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterItem, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterItem, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterItem, param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterItem, param2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBCounterData, counterlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBFriendItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBFriendItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBFriendItem, friendid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBFriendData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBFriendData, friendlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, roledata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, bagdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, copydata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, equipdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, gemdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, petdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, partnerdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, taskdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, maildata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, mountdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, activitydata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, counterdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, frienddata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, skilldata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DBRoleData)},
  { 21, -1, sizeof(::DBBagItem)},
  { 33, -1, sizeof(::DBBagData)},
  { 39, -1, sizeof(::DBCopyItem)},
  { 51, -1, sizeof(::DBChapterItem)},
  { 61, -1, sizeof(::DBCopyData)},
  { 68, -1, sizeof(::DBEquipItem)},
  { 82, -1, sizeof(::DBEquipData)},
  { 88, -1, sizeof(::DBGemItem)},
  { 102, -1, sizeof(::DBGemData)},
  { 108, -1, sizeof(::DBSkillItem)},
  { 117, -1, sizeof(::DBSkillData)},
  { 123, -1, sizeof(::DBPetItem)},
  { 135, -1, sizeof(::DBPetData)},
  { 141, -1, sizeof(::DBMountItem)},
  { 153, -1, sizeof(::DBMountData)},
  { 159, -1, sizeof(::DBPartnerItem)},
  { 171, -1, sizeof(::DBPartnerData)},
  { 177, -1, sizeof(::DBTaskItem)},
  { 186, -1, sizeof(::DBTaskData)},
  { 192, -1, sizeof(::DBMailItem)},
  { 206, -1, sizeof(::DBMailData)},
  { 212, -1, sizeof(::DBActivityItem)},
  { 223, -1, sizeof(::DBActivityData)},
  { 229, -1, sizeof(::DBCounterItem)},
  { 241, -1, sizeof(::DBCounterData)},
  { 247, -1, sizeof(::DBFriendItem)},
  { 254, -1, sizeof(::DBFriendData)},
  { 260, -1, sizeof(::DBRoleLoginAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBRoleData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBBagItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBBagData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBCopyItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBChapterItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBCopyData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBEquipItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBEquipData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBGemItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBGemData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBSkillItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBSkillData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBPetItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBPetData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBMountItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBMountData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBPartnerItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBPartnerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBTaskItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBTaskData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBMailItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBMailData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBActivityItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBActivityData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBCounterItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBCounterData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBFriendItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBFriendData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBRoleLoginAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Msg_LoginDBData.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 29);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025Msg_LoginDBData.proto\"\236\002\n\nDBRoleData\022\021"
      "\n\tAccountID\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004\022\020\n\010Car"
      "rerID\030\003 \001(\005\022\r\n\005Level\030\004 \001(\005\022\013\n\003Exp\030\005 \001(\003\022"
      "\014\n\004Name\030\006 \001(\t\022\016\n\006LangID\030\007 \001(\005\022\016\n\006VipLvl\030"
      "\010 \001(\005\022\016\n\006VipExp\030\t \001(\005\022\022\n\nFightValue\030\n \001("
      "\003\022\022\n\nCityCopyID\030\013 \001(\005\022\016\n\006Action\030\014 \003(\003\022\016\n"
      "\006Actime\030\r \003(\003\022\022\n\nCreateTime\030\016 \001(\004\022\021\n\tLog"
      "onTime\030\017 \001(\004\022\022\n\nLogoffTime\030\020 \001(\004\"x\n\tDBBa"
      "gItem\022\014\n\004Guid\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004\022\020\n\010I"
      "temGuid\030\003 \001(\004\022\016\n\006ItemID\030\004 \001(\r\022\r\n\005Count\030\005"
      " \001(\003\022\014\n\004Bind\030\006 \001(\005\022\016\n\006Status\030\007 \001(\005\")\n\tDB"
      "BagData\022\034\n\010ItemList\030\001 \003(\0132\n.DBBagItem\"\211\001"
      "\n\nDBCopyItem\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006CopyID\030\002"
      " \001(\r\022\017\n\007StarNum\030\003 \001(\005\022\021\n\tBattleCnt\030\004 \001(\005"
      "\022\020\n\010ResetCnt\030\005 \001(\005\022\022\n\nBattleTime\030\006 \001(\004\022\021"
      "\n\tResetTime\030\007 \001(\004\"k\n\rDBChapterItem\022\016\n\006Ro"
      "leID\030\001 \001(\004\022\020\n\010CopyType\030\002 \001(\r\022\021\n\tChapterI"
      "D\030\003 \001(\r\022\021\n\tStarAward\030\004 \001(\r\022\022\n\nSceneAward"
      "\030\005 \001(\r\"P\n\nDBCopyData\022\035\n\010CopyList\030\001 \003(\0132\013"
      ".DBCopyItem\022#\n\013ChapterList\030\002 \003(\0132\016.DBCha"
      "pterItem\"\256\001\n\013DBEquipItem\022\016\n\006RoleID\030\001 \001(\004"
      "\022\014\n\004Guid\030\002 \001(\004\022\017\n\007EquipID\030\003 \001(\005\022\023\n\013Stren"
      "gthLvl\030\004 \001(\005\022\023\n\013RefineLevel\030\005 \001(\005\022\021\n\tSta"
      "rLevel\030\006 \001(\005\022\021\n\tRefineExp\030\007 \001(\005\022\017\n\007StarE"
      "xp\030\010 \001(\005\022\017\n\007IsUsing\030\t \001(\010\".\n\013DBEquipData"
      "\022\037\n\tEquipList\030\001 \003(\0132\014.DBEquipItem\"\246\001\n\tDB"
      "GemItem\022\016\n\006RoleID\030\001 \001(\004\022\014\n\004Guid\030\002 \001(\004\022\r\n"
      "\005GemID\030\003 \001(\005\022\023\n\013StrengthLvl\030\004 \001(\005\022\023\n\013Ref"
      "ineLevel\030\005 \001(\005\022\021\n\tStarLevel\030\006 \001(\005\022\021\n\tRef"
      "ineExp\030\007 \001(\005\022\017\n\007StarExp\030\010 \001(\005\022\013\n\003Pos\030\t \001"
      "(\005\"(\n\tDBGemData\022\033\n\007GemList\030\001 \003(\0132\n.DBGem"
      "Item\"M\n\013DBSkillItem\022\016\n\006RoleID\030\001 \001(\004\022\017\n\007S"
      "killID\030\002 \001(\r\022\r\n\005Level\030\003 \001(\005\022\016\n\006KeyPos\030\004 "
      "\001(\005\".\n\013DBSkillData\022\037\n\tSkillList\030\001 \003(\0132\014."
      "DBSkillItem\"\206\001\n\tDBPetItem\022\016\n\006RoleID\030\001 \001("
      "\004\022\014\n\004Guid\030\002 \001(\004\022\r\n\005PetID\030\003 \001(\005\022\023\n\013Streng"
      "thLvl\030\004 \001(\005\022\023\n\013RefineLevel\030\005 \001(\005\022\021\n\tStar"
      "Level\030\006 \001(\005\022\017\n\007IsUsing\030\007 \001(\010\"(\n\tDBPetDat"
      "a\022\033\n\007PetList\030\001 \003(\0132\n.DBPetItem\"\212\001\n\013DBMou"
      "ntItem\022\016\n\006RoleID\030\001 \001(\004\022\014\n\004Guid\030\002 \001(\004\022\017\n\007"
      "MountID\030\003 \001(\005\022\023\n\013StrengthLvl\030\004 \001(\005\022\023\n\013Re"
      "fineLevel\030\005 \001(\005\022\021\n\tStarLevel\030\006 \001(\005\022\017\n\007Is"
      "Using\030\007 \001(\010\".\n\013DBMountData\022\037\n\tMountList\030"
      "\001 \003(\0132\014.DBMountItem\"\215\001\n\rDBPartnerItem\022\016\n"
      "\006RoleID\030\001 \001(\004\022\014\n\004Guid\030\002 \001(\004\022\021\n\tPartnerID"
      "\030\003 \001(\005\022\023\n\013StrengthLvl\030\004 \001(\005\022\023\n\013RefineLev"
      "el\030\005 \001(\005\022\021\n\tStarLevel\030\006 \001(\005\022\016\n\006SetPos\030\007 "
      "\001(\005\"4\n\rDBPartnerData\022#\n\013PartnerList\030\001 \003("
      "\0132\016.DBPartnerItem\"N\n\nDBTaskItem\022\016\n\006RoleI"
      "D\030\001 \001(\004\022\016\n\006TaskID\030\002 \001(\r\022\016\n\006Status\030\003 \001(\005\022"
      "\020\n\010Progress\030\004 \001(\005\"+\n\nDBTaskData\022\035\n\010TaskL"
      "ist\030\001 \003(\0132\013.DBTaskItem\"\232\001\n\nDBMailItem\022\016\n"
      "\006RoleID\030\001 \001(\004\022\014\n\004Guid\030\002 \001(\004\022\017\n\007GroupID\030\003"
      " \001(\005\022\014\n\004Time\030\004 \001(\004\022\020\n\010SenderID\030\005 \001(\004\022\016\n\006"
      "Sender\030\006 \001(\t\022\r\n\005Title\030\007 \001(\t\022\017\n\007Content\030\010"
      " \001(\t\022\r\n\005Items\030\t \001(\014\"+\n\nDBMailData\022\035\n\010Mai"
      "lList\030\001 \003(\0132\013.DBMailItem\"{\n\016DBActivityIt"
      "em\022\016\n\006RoleID\030\001 \001(\004\022\022\n\nActivityID\030\002 \001(\r\022\024"
      "\n\014ActivityType\030\003 \001(\r\022\020\n\010JoinTime\030\004 \001(\r\022\017"
      "\n\007DataLen\030\005 \001(\r\022\014\n\004Data\030\006 \001(\014\"7\n\016DBActiv"
      "ityData\022%\n\014ActivityList\030\001 \003(\0132\017.DBActivi"
      "tyItem\"~\n\rDBCounterItem\022\016\n\006RoleID\030\001 \001(\004\022"
      "\021\n\tCounterID\030\002 \001(\004\022\r\n\005Index\030\003 \001(\r\022\r\n\005Val"
      "ue\030\004 \001(\r\022\014\n\004Time\030\005 \001(\r\022\016\n\006Param1\030\006 \001(\r\022\016"
      "\n\006Param2\030\007 \001(\r\"4\n\rDBCounterData\022#\n\013Count"
      "erList\030\001 \003(\0132\016.DBCounterItem\"0\n\014DBFriend"
      "Item\022\016\n\006RoleID\030\001 \001(\004\022\020\n\010FriendID\030\002 \001(\004\"1"
      "\n\014DBFriendData\022!\n\nFriendList\030\001 \003(\0132\r.DBF"
      "riendItem\"\373\003\n\016DBRoleLoginAck\022\017\n\007RetCode\030"
      "\001 \001(\r\022\016\n\006RoleID\030\002 \001(\004\022\035\n\010RoleData\030\003 \001(\0132"
      "\013.DBRoleData\022\033\n\007BagData\030\004 \001(\0132\n.DBBagDat"
      "a\022\035\n\010CopyData\030\005 \001(\0132\013.DBCopyData\022\037\n\tEqui"
      "pData\030\006 \001(\0132\014.DBEquipData\022\033\n\007GemData\030\007 \001"
      "(\0132\n.DBGemData\022\033\n\007PetData\030\010 \001(\0132\n.DBPetD"
      "ata\022#\n\013PartnerData\030\t \001(\0132\016.DBPartnerData"
      "\022\035\n\010TaskData\030\n \001(\0132\013.DBTaskData\022\035\n\010MailD"
      "ata\030\013 \001(\0132\013.DBMailData\022\037\n\tMountData\030\014 \001("
      "\0132\014.DBMountData\022%\n\014ActivityData\030\r \001(\0132\017."
      "DBActivityData\022#\n\013CounterData\030\016 \001(\0132\016.DB"
      "CounterData\022!\n\nFriendData\030\017 \001(\0132\r.DBFrie"
      "ndData\022\037\n\tSkillData\030\020 \001(\0132\014.DBSkillDatab"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_LoginDBData.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Msg_5fLoginDBData_2eproto

// ===================================================================

void DBRoleData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBRoleData::kAccountIDFieldNumber;
const int DBRoleData::kRoleIDFieldNumber;
const int DBRoleData::kCarrerIDFieldNumber;
const int DBRoleData::kLevelFieldNumber;
const int DBRoleData::kExpFieldNumber;
const int DBRoleData::kNameFieldNumber;
const int DBRoleData::kLangIDFieldNumber;
const int DBRoleData::kVipLvlFieldNumber;
const int DBRoleData::kVipExpFieldNumber;
const int DBRoleData::kFightValueFieldNumber;
const int DBRoleData::kCityCopyIDFieldNumber;
const int DBRoleData::kActionFieldNumber;
const int DBRoleData::kActimeFieldNumber;
const int DBRoleData::kCreateTimeFieldNumber;
const int DBRoleData::kLogonTimeFieldNumber;
const int DBRoleData::kLogoffTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBRoleData::DBRoleData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBRoleData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBRoleData)
}
DBRoleData::DBRoleData(const DBRoleData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      action_(from.action_),
      actime_(from.actime_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&logofftime_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(logofftime_));
  // @@protoc_insertion_point(copy_constructor:DBRoleData)
}

void DBRoleData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logofftime_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logofftime_));
  _cached_size_ = 0;
}

DBRoleData::~DBRoleData() {
  // @@protoc_insertion_point(destructor:DBRoleData)
  SharedDtor();
}

void DBRoleData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBRoleData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBRoleData& DBRoleData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBRoleData();
  return *internal_default_instance();
}

DBRoleData* DBRoleData::New(::google::protobuf::Arena* arena) const {
  DBRoleData* n = new DBRoleData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBRoleData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBRoleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.Clear();
  actime_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logofftime_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logofftime_));
  _internal_metadata_.Clear();
}

bool DBRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBRoleData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CarrerID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Exp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBRoleData.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LangID = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &langid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 VipLvl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 VipExp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vipexp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 FightValue = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fightvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CityCopyID = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &citycopyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 Action = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_action())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 98u, input, this->mutable_action())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 Actime = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_actime())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 106u, input, this->mutable_actime())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CreateTime = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 LogonTime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logontime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 LogoffTime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logofftime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBRoleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBRoleData)
  return false;
#undef DO_
}

void DBRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBRoleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->carrerid(), output);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // int64 Exp = 5;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->exp(), output);
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBRoleData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // int32 LangID = 7;
  if (this->langid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->langid(), output);
  }

  // int32 VipLvl = 8;
  if (this->viplvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->viplvl(), output);
  }

  // int32 VipExp = 9;
  if (this->vipexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->vipexp(), output);
  }

  // int64 FightValue = 10;
  if (this->fightvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->fightvalue(), output);
  }

  // int32 CityCopyID = 11;
  if (this->citycopyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->citycopyid(), output);
  }

  // repeated int64 Action = 12;
  if (this->action_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _action_cached_byte_size_));
  }
  for (int i = 0, n = this->action_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->action(i), output);
  }

  // repeated int64 Actime = 13;
  if (this->actime_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _actime_cached_byte_size_));
  }
  for (int i = 0, n = this->actime_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->actime(i), output);
  }

  // uint64 CreateTime = 14;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->createtime(), output);
  }

  // uint64 LogonTime = 15;
  if (this->logontime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->logontime(), output);
  }

  // uint64 LogoffTime = 16;
  if (this->logofftime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->logofftime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBRoleData)
}

::google::protobuf::uint8* DBRoleData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBRoleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->carrerid(), target);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // int64 Exp = 5;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->exp(), target);
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBRoleData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // int32 LangID = 7;
  if (this->langid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->langid(), target);
  }

  // int32 VipLvl = 8;
  if (this->viplvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->viplvl(), target);
  }

  // int32 VipExp = 9;
  if (this->vipexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->vipexp(), target);
  }

  // int64 FightValue = 10;
  if (this->fightvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->fightvalue(), target);
  }

  // int32 CityCopyID = 11;
  if (this->citycopyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->citycopyid(), target);
  }

  // repeated int64 Action = 12;
  if (this->action_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _action_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->action_, target);
  }

  // repeated int64 Actime = 13;
  if (this->actime_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _actime_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->actime_, target);
  }

  // uint64 CreateTime = 14;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->createtime(), target);
  }

  // uint64 LogonTime = 15;
  if (this->logontime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->logontime(), target);
  }

  // uint64 LogoffTime = 16;
  if (this->logofftime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->logofftime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBRoleData)
  return target;
}

size_t DBRoleData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBRoleData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 Action = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->action_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _action_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 Actime = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->actime_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _actime_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrerid());
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int64 Exp = 5;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exp());
  }

  // int32 LangID = 7;
  if (this->langid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->langid());
  }

  // int32 VipLvl = 8;
  if (this->viplvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->viplvl());
  }

  // int64 FightValue = 10;
  if (this->fightvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fightvalue());
  }

  // int32 VipExp = 9;
  if (this->vipexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vipexp());
  }

  // int32 CityCopyID = 11;
  if (this->citycopyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->citycopyid());
  }

  // uint64 CreateTime = 14;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createtime());
  }

  // uint64 LogonTime = 15;
  if (this->logontime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->logontime());
  }

  // uint64 LogoffTime = 16;
  if (this->logofftime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->logofftime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBRoleData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBRoleData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBRoleData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBRoleData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBRoleData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBRoleData)
    MergeFrom(*source);
  }
}

void DBRoleData::MergeFrom(const DBRoleData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBRoleData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  action_.MergeFrom(from.action_);
  actime_.MergeFrom(from.actime_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.carrerid() != 0) {
    set_carrerid(from.carrerid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.langid() != 0) {
    set_langid(from.langid());
  }
  if (from.viplvl() != 0) {
    set_viplvl(from.viplvl());
  }
  if (from.fightvalue() != 0) {
    set_fightvalue(from.fightvalue());
  }
  if (from.vipexp() != 0) {
    set_vipexp(from.vipexp());
  }
  if (from.citycopyid() != 0) {
    set_citycopyid(from.citycopyid());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.logontime() != 0) {
    set_logontime(from.logontime());
  }
  if (from.logofftime() != 0) {
    set_logofftime(from.logofftime());
  }
}

void DBRoleData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBRoleData::CopyFrom(const DBRoleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleData::IsInitialized() const {
  return true;
}

void DBRoleData::Swap(DBRoleData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBRoleData::InternalSwap(DBRoleData* other) {
  using std::swap;
  action_.InternalSwap(&other->action_);
  actime_.InternalSwap(&other->actime_);
  name_.Swap(&other->name_);
  swap(accountid_, other->accountid_);
  swap(roleid_, other->roleid_);
  swap(carrerid_, other->carrerid_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(langid_, other->langid_);
  swap(viplvl_, other->viplvl_);
  swap(fightvalue_, other->fightvalue_);
  swap(vipexp_, other->vipexp_);
  swap(citycopyid_, other->citycopyid_);
  swap(createtime_, other->createtime_);
  swap(logontime_, other->logontime_);
  swap(logofftime_, other->logofftime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBRoleData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBBagItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBBagItem::kGuidFieldNumber;
const int DBBagItem::kRoleIDFieldNumber;
const int DBBagItem::kItemGuidFieldNumber;
const int DBBagItem::kItemIDFieldNumber;
const int DBBagItem::kCountFieldNumber;
const int DBBagItem::kBindFieldNumber;
const int DBBagItem::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBBagItem::DBBagItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBBagItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBBagItem)
}
DBBagItem::DBBagItem(const DBBagItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:DBBagItem)
}

void DBBagItem::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(status_));
  _cached_size_ = 0;
}

DBBagItem::~DBBagItem() {
  // @@protoc_insertion_point(destructor:DBBagItem)
  SharedDtor();
}

void DBBagItem::SharedDtor() {
}

void DBBagItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBBagItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBBagItem& DBBagItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBBagItem();
  return *internal_default_instance();
}

DBBagItem* DBBagItem::New(::google::protobuf::Arena* arena) const {
  DBBagItem* n = new DBBagItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBBagItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBBagItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool DBBagItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBBagItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ItemGuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &itemguid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ItemID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Bind = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBBagItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBBagItem)
  return false;
#undef DO_
}

void DBBagItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBBagItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // uint64 ItemGuid = 3;
  if (this->itemguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->itemguid(), output);
  }

  // uint32 ItemID = 4;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->itemid(), output);
  }

  // int64 Count = 5;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->count(), output);
  }

  // int32 Bind = 6;
  if (this->bind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->bind(), output);
  }

  // int32 Status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBBagItem)
}

::google::protobuf::uint8* DBBagItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBBagItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // uint64 ItemGuid = 3;
  if (this->itemguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->itemguid(), target);
  }

  // uint32 ItemID = 4;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->itemid(), target);
  }

  // int64 Count = 5;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->count(), target);
  }

  // int32 Bind = 6;
  if (this->bind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->bind(), target);
  }

  // int32 Status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBBagItem)
  return target;
}

size_t DBBagItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBBagItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 ItemGuid = 3;
  if (this->itemguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->itemguid());
  }

  // int64 Count = 5;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // uint32 ItemID = 4;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // int32 Bind = 6;
  if (this->bind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bind());
  }

  // int32 Status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBBagItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBBagItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBBagItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBBagItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBBagItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBBagItem)
    MergeFrom(*source);
  }
}

void DBBagItem::MergeFrom(const DBBagItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBBagItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.itemguid() != 0) {
    set_itemguid(from.itemguid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.bind() != 0) {
    set_bind(from.bind());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void DBBagItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBBagItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBBagItem::CopyFrom(const DBBagItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBBagItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBBagItem::IsInitialized() const {
  return true;
}

void DBBagItem::Swap(DBBagItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBBagItem::InternalSwap(DBBagItem* other) {
  using std::swap;
  swap(guid_, other->guid_);
  swap(roleid_, other->roleid_);
  swap(itemguid_, other->itemguid_);
  swap(count_, other->count_);
  swap(itemid_, other->itemid_);
  swap(bind_, other->bind_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBBagItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBBagData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBBagData::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBBagData::DBBagData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBBagData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBBagData)
}
DBBagData::DBBagData(const DBBagData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      itemlist_(from.itemlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBBagData)
}

void DBBagData::SharedCtor() {
  _cached_size_ = 0;
}

DBBagData::~DBBagData() {
  // @@protoc_insertion_point(destructor:DBBagData)
  SharedDtor();
}

void DBBagData::SharedDtor() {
}

void DBBagData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBBagData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBBagData& DBBagData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBBagData();
  return *internal_default_instance();
}

DBBagData* DBBagData::New(::google::protobuf::Arena* arena) const {
  DBBagData* n = new DBBagData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBBagData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBBagData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemlist_.Clear();
  _internal_metadata_.Clear();
}

bool DBBagData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBBagData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBBagItem ItemList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBBagData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBBagData)
  return false;
#undef DO_
}

void DBBagData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBBagData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBBagItem ItemList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBBagData)
}

::google::protobuf::uint8* DBBagData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBBagData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBBagItem ItemList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBBagData)
  return target;
}

size_t DBBagData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBBagData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBBagItem ItemList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->itemlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBBagData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBBagData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBBagData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBBagData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBBagData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBBagData)
    MergeFrom(*source);
  }
}

void DBBagData::MergeFrom(const DBBagData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBBagData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  itemlist_.MergeFrom(from.itemlist_);
}

void DBBagData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBBagData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBBagData::CopyFrom(const DBBagData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBBagData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBBagData::IsInitialized() const {
  return true;
}

void DBBagData::Swap(DBBagData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBBagData::InternalSwap(DBBagData* other) {
  using std::swap;
  itemlist_.InternalSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBBagData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBCopyItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBCopyItem::kRoleIDFieldNumber;
const int DBCopyItem::kCopyIDFieldNumber;
const int DBCopyItem::kStarNumFieldNumber;
const int DBCopyItem::kBattleCntFieldNumber;
const int DBCopyItem::kResetCntFieldNumber;
const int DBCopyItem::kBattleTimeFieldNumber;
const int DBCopyItem::kResetTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBCopyItem::DBCopyItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCopyItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBCopyItem)
}
DBCopyItem::DBCopyItem(const DBCopyItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&resettime_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(resettime_));
  // @@protoc_insertion_point(copy_constructor:DBCopyItem)
}

void DBCopyItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resettime_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(resettime_));
  _cached_size_ = 0;
}

DBCopyItem::~DBCopyItem() {
  // @@protoc_insertion_point(destructor:DBCopyItem)
  SharedDtor();
}

void DBCopyItem::SharedDtor() {
}

void DBCopyItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBCopyItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBCopyItem& DBCopyItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCopyItem();
  return *internal_default_instance();
}

DBCopyItem* DBCopyItem::New(::google::protobuf::Arena* arena) const {
  DBCopyItem* n = new DBCopyItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBCopyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBCopyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resettime_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(resettime_));
  _internal_metadata_.Clear();
}

bool DBCopyItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBCopyItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CopyID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StarNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BattleCnt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battlecnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ResetCnt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resetcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 BattleTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battletime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ResetTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &resettime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBCopyItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBCopyItem)
  return false;
#undef DO_
}

void DBCopyItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBCopyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->copyid(), output);
  }

  // int32 StarNum = 3;
  if (this->starnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->starnum(), output);
  }

  // int32 BattleCnt = 4;
  if (this->battlecnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->battlecnt(), output);
  }

  // int32 ResetCnt = 5;
  if (this->resetcnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->resetcnt(), output);
  }

  // uint64 BattleTime = 6;
  if (this->battletime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->battletime(), output);
  }

  // uint64 ResetTime = 7;
  if (this->resettime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->resettime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBCopyItem)
}

::google::protobuf::uint8* DBCopyItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBCopyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->copyid(), target);
  }

  // int32 StarNum = 3;
  if (this->starnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->starnum(), target);
  }

  // int32 BattleCnt = 4;
  if (this->battlecnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->battlecnt(), target);
  }

  // int32 ResetCnt = 5;
  if (this->resetcnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->resetcnt(), target);
  }

  // uint64 BattleTime = 6;
  if (this->battletime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->battletime(), target);
  }

  // uint64 ResetTime = 7;
  if (this->resettime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->resettime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBCopyItem)
  return target;
}

size_t DBCopyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBCopyItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyid());
  }

  // int32 StarNum = 3;
  if (this->starnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starnum());
  }

  // int32 BattleCnt = 4;
  if (this->battlecnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battlecnt());
  }

  // int32 ResetCnt = 5;
  if (this->resetcnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resetcnt());
  }

  // uint64 BattleTime = 6;
  if (this->battletime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battletime());
  }

  // uint64 ResetTime = 7;
  if (this->resettime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->resettime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBCopyItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBCopyItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBCopyItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBCopyItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBCopyItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBCopyItem)
    MergeFrom(*source);
  }
}

void DBCopyItem::MergeFrom(const DBCopyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBCopyItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.starnum() != 0) {
    set_starnum(from.starnum());
  }
  if (from.battlecnt() != 0) {
    set_battlecnt(from.battlecnt());
  }
  if (from.resetcnt() != 0) {
    set_resetcnt(from.resetcnt());
  }
  if (from.battletime() != 0) {
    set_battletime(from.battletime());
  }
  if (from.resettime() != 0) {
    set_resettime(from.resettime());
  }
}

void DBCopyItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBCopyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBCopyItem::CopyFrom(const DBCopyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBCopyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBCopyItem::IsInitialized() const {
  return true;
}

void DBCopyItem::Swap(DBCopyItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBCopyItem::InternalSwap(DBCopyItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(copyid_, other->copyid_);
  swap(starnum_, other->starnum_);
  swap(battlecnt_, other->battlecnt_);
  swap(resetcnt_, other->resetcnt_);
  swap(battletime_, other->battletime_);
  swap(resettime_, other->resettime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBCopyItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBChapterItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBChapterItem::kRoleIDFieldNumber;
const int DBChapterItem::kCopyTypeFieldNumber;
const int DBChapterItem::kChapterIDFieldNumber;
const int DBChapterItem::kStarAwardFieldNumber;
const int DBChapterItem::kSceneAwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBChapterItem::DBChapterItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBChapterItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBChapterItem)
}
DBChapterItem::DBChapterItem(const DBChapterItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sceneaward_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(sceneaward_));
  // @@protoc_insertion_point(copy_constructor:DBChapterItem)
}

void DBChapterItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sceneaward_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(sceneaward_));
  _cached_size_ = 0;
}

DBChapterItem::~DBChapterItem() {
  // @@protoc_insertion_point(destructor:DBChapterItem)
  SharedDtor();
}

void DBChapterItem::SharedDtor() {
}

void DBChapterItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBChapterItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBChapterItem& DBChapterItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBChapterItem();
  return *internal_default_instance();
}

DBChapterItem* DBChapterItem::New(::google::protobuf::Arena* arena) const {
  DBChapterItem* n = new DBChapterItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBChapterItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBChapterItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sceneaward_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(sceneaward_));
  _internal_metadata_.Clear();
}

bool DBChapterItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBChapterItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CopyType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ChapterID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 StarAward = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &staraward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SceneAward = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sceneaward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBChapterItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBChapterItem)
  return false;
#undef DO_
}

void DBChapterItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBChapterItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint32 CopyType = 2;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->copytype(), output);
  }

  // uint32 ChapterID = 3;
  if (this->chapterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->chapterid(), output);
  }

  // uint32 StarAward = 4;
  if (this->staraward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->staraward(), output);
  }

  // uint32 SceneAward = 5;
  if (this->sceneaward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sceneaward(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBChapterItem)
}

::google::protobuf::uint8* DBChapterItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBChapterItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint32 CopyType = 2;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->copytype(), target);
  }

  // uint32 ChapterID = 3;
  if (this->chapterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->chapterid(), target);
  }

  // uint32 StarAward = 4;
  if (this->staraward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->staraward(), target);
  }

  // uint32 SceneAward = 5;
  if (this->sceneaward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sceneaward(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBChapterItem)
  return target;
}

size_t DBChapterItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBChapterItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 CopyType = 2;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copytype());
  }

  // uint32 ChapterID = 3;
  if (this->chapterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chapterid());
  }

  // uint32 StarAward = 4;
  if (this->staraward() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->staraward());
  }

  // uint32 SceneAward = 5;
  if (this->sceneaward() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sceneaward());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBChapterItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBChapterItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBChapterItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBChapterItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBChapterItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBChapterItem)
    MergeFrom(*source);
  }
}

void DBChapterItem::MergeFrom(const DBChapterItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBChapterItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.chapterid() != 0) {
    set_chapterid(from.chapterid());
  }
  if (from.staraward() != 0) {
    set_staraward(from.staraward());
  }
  if (from.sceneaward() != 0) {
    set_sceneaward(from.sceneaward());
  }
}

void DBChapterItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBChapterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBChapterItem::CopyFrom(const DBChapterItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBChapterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBChapterItem::IsInitialized() const {
  return true;
}

void DBChapterItem::Swap(DBChapterItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBChapterItem::InternalSwap(DBChapterItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(copytype_, other->copytype_);
  swap(chapterid_, other->chapterid_);
  swap(staraward_, other->staraward_);
  swap(sceneaward_, other->sceneaward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBChapterItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBCopyData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBCopyData::kCopyListFieldNumber;
const int DBCopyData::kChapterListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBCopyData::DBCopyData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCopyData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBCopyData)
}
DBCopyData::DBCopyData(const DBCopyData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      copylist_(from.copylist_),
      chapterlist_(from.chapterlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBCopyData)
}

void DBCopyData::SharedCtor() {
  _cached_size_ = 0;
}

DBCopyData::~DBCopyData() {
  // @@protoc_insertion_point(destructor:DBCopyData)
  SharedDtor();
}

void DBCopyData::SharedDtor() {
}

void DBCopyData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBCopyData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBCopyData& DBCopyData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCopyData();
  return *internal_default_instance();
}

DBCopyData* DBCopyData::New(::google::protobuf::Arena* arena) const {
  DBCopyData* n = new DBCopyData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBCopyData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBCopyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  copylist_.Clear();
  chapterlist_.Clear();
  _internal_metadata_.Clear();
}

bool DBCopyData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBCopyData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBCopyItem CopyList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_copylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DBChapterItem ChapterList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBCopyData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBCopyData)
  return false;
#undef DO_
}

void DBCopyData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBCopyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBCopyItem CopyList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->copylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->copylist(static_cast<int>(i)), output);
  }

  // repeated .DBChapterItem ChapterList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chapterlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->chapterlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBCopyData)
}

::google::protobuf::uint8* DBCopyData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBCopyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBCopyItem CopyList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->copylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->copylist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .DBChapterItem ChapterList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chapterlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->chapterlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBCopyData)
  return target;
}

size_t DBCopyData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBCopyData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBCopyItem CopyList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->copylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->copylist(static_cast<int>(i)));
    }
  }

  // repeated .DBChapterItem ChapterList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->chapterlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chapterlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBCopyData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBCopyData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBCopyData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBCopyData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBCopyData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBCopyData)
    MergeFrom(*source);
  }
}

void DBCopyData::MergeFrom(const DBCopyData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBCopyData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  copylist_.MergeFrom(from.copylist_);
  chapterlist_.MergeFrom(from.chapterlist_);
}

void DBCopyData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBCopyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBCopyData::CopyFrom(const DBCopyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBCopyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBCopyData::IsInitialized() const {
  return true;
}

void DBCopyData::Swap(DBCopyData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBCopyData::InternalSwap(DBCopyData* other) {
  using std::swap;
  copylist_.InternalSwap(&other->copylist_);
  chapterlist_.InternalSwap(&other->chapterlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBCopyData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBEquipItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBEquipItem::kRoleIDFieldNumber;
const int DBEquipItem::kGuidFieldNumber;
const int DBEquipItem::kEquipIDFieldNumber;
const int DBEquipItem::kStrengthLvlFieldNumber;
const int DBEquipItem::kRefineLevelFieldNumber;
const int DBEquipItem::kStarLevelFieldNumber;
const int DBEquipItem::kRefineExpFieldNumber;
const int DBEquipItem::kStarExpFieldNumber;
const int DBEquipItem::kIsUsingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBEquipItem::DBEquipItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBEquipItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBEquipItem)
}
DBEquipItem::DBEquipItem(const DBEquipItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isusing_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(isusing_));
  // @@protoc_insertion_point(copy_constructor:DBEquipItem)
}

void DBEquipItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isusing_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(isusing_));
  _cached_size_ = 0;
}

DBEquipItem::~DBEquipItem() {
  // @@protoc_insertion_point(destructor:DBEquipItem)
  SharedDtor();
}

void DBEquipItem::SharedDtor() {
}

void DBEquipItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBEquipItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBEquipItem& DBEquipItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBEquipItem();
  return *internal_default_instance();
}

DBEquipItem* DBEquipItem::New(::google::protobuf::Arena* arena) const {
  DBEquipItem* n = new DBEquipItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBEquipItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBEquipItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isusing_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(isusing_));
  _internal_metadata_.Clear();
}

bool DBEquipItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBEquipItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 EquipID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StrengthLvl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RefineLevel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StarLevel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RefineExp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refineexp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StarExp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starexp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsUsing = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isusing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBEquipItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBEquipItem)
  return false;
#undef DO_
}

void DBEquipItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBEquipItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // int32 EquipID = 3;
  if (this->equipid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->equipid(), output);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->refineexp(), output);
  }

  // int32 StarExp = 8;
  if (this->starexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->starexp(), output);
  }

  // bool IsUsing = 9;
  if (this->isusing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isusing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBEquipItem)
}

::google::protobuf::uint8* DBEquipItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBEquipItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // int32 EquipID = 3;
  if (this->equipid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->equipid(), target);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->refineexp(), target);
  }

  // int32 StarExp = 8;
  if (this->starexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->starexp(), target);
  }

  // bool IsUsing = 9;
  if (this->isusing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isusing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBEquipItem)
  return target;
}

size_t DBEquipItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBEquipItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 EquipID = 3;
  if (this->equipid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->equipid());
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refineexp());
  }

  // int32 StarExp = 8;
  if (this->starexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starexp());
  }

  // bool IsUsing = 9;
  if (this->isusing() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBEquipItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBEquipItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBEquipItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBEquipItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBEquipItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBEquipItem)
    MergeFrom(*source);
  }
}

void DBEquipItem::MergeFrom(const DBEquipItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBEquipItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.equipid() != 0) {
    set_equipid(from.equipid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.refineexp() != 0) {
    set_refineexp(from.refineexp());
  }
  if (from.starexp() != 0) {
    set_starexp(from.starexp());
  }
  if (from.isusing() != 0) {
    set_isusing(from.isusing());
  }
}

void DBEquipItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBEquipItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBEquipItem::CopyFrom(const DBEquipItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBEquipItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBEquipItem::IsInitialized() const {
  return true;
}

void DBEquipItem::Swap(DBEquipItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBEquipItem::InternalSwap(DBEquipItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(guid_, other->guid_);
  swap(equipid_, other->equipid_);
  swap(strengthlvl_, other->strengthlvl_);
  swap(refinelevel_, other->refinelevel_);
  swap(starlevel_, other->starlevel_);
  swap(refineexp_, other->refineexp_);
  swap(starexp_, other->starexp_);
  swap(isusing_, other->isusing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBEquipItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBEquipData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBEquipData::kEquipListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBEquipData::DBEquipData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBEquipData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBEquipData)
}
DBEquipData::DBEquipData(const DBEquipData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      equiplist_(from.equiplist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBEquipData)
}

void DBEquipData::SharedCtor() {
  _cached_size_ = 0;
}

DBEquipData::~DBEquipData() {
  // @@protoc_insertion_point(destructor:DBEquipData)
  SharedDtor();
}

void DBEquipData::SharedDtor() {
}

void DBEquipData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBEquipData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBEquipData& DBEquipData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBEquipData();
  return *internal_default_instance();
}

DBEquipData* DBEquipData::New(::google::protobuf::Arena* arena) const {
  DBEquipData* n = new DBEquipData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBEquipData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBEquipData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equiplist_.Clear();
  _internal_metadata_.Clear();
}

bool DBEquipData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBEquipData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBEquipItem EquipList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equiplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBEquipData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBEquipData)
  return false;
#undef DO_
}

void DBEquipData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBEquipData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBEquipItem EquipList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equiplist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equiplist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBEquipData)
}

::google::protobuf::uint8* DBEquipData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBEquipData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBEquipItem EquipList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equiplist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->equiplist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBEquipData)
  return target;
}

size_t DBEquipData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBEquipData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBEquipItem EquipList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->equiplist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equiplist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBEquipData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBEquipData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBEquipData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBEquipData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBEquipData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBEquipData)
    MergeFrom(*source);
  }
}

void DBEquipData::MergeFrom(const DBEquipData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBEquipData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equiplist_.MergeFrom(from.equiplist_);
}

void DBEquipData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBEquipData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBEquipData::CopyFrom(const DBEquipData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBEquipData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBEquipData::IsInitialized() const {
  return true;
}

void DBEquipData::Swap(DBEquipData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBEquipData::InternalSwap(DBEquipData* other) {
  using std::swap;
  equiplist_.InternalSwap(&other->equiplist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBEquipData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBGemItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBGemItem::kRoleIDFieldNumber;
const int DBGemItem::kGuidFieldNumber;
const int DBGemItem::kGemIDFieldNumber;
const int DBGemItem::kStrengthLvlFieldNumber;
const int DBGemItem::kRefineLevelFieldNumber;
const int DBGemItem::kStarLevelFieldNumber;
const int DBGemItem::kRefineExpFieldNumber;
const int DBGemItem::kStarExpFieldNumber;
const int DBGemItem::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBGemItem::DBGemItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBGemItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBGemItem)
}
DBGemItem::DBGemItem(const DBGemItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:DBGemItem)
}

void DBGemItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(pos_));
  _cached_size_ = 0;
}

DBGemItem::~DBGemItem() {
  // @@protoc_insertion_point(destructor:DBGemItem)
  SharedDtor();
}

void DBGemItem::SharedDtor() {
}

void DBGemItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBGemItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBGemItem& DBGemItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBGemItem();
  return *internal_default_instance();
}

DBGemItem* DBGemItem::New(::google::protobuf::Arena* arena) const {
  DBGemItem* n = new DBGemItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBGemItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBGemItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(pos_));
  _internal_metadata_.Clear();
}

bool DBGemItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBGemItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GemID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StrengthLvl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RefineLevel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StarLevel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RefineExp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refineexp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StarExp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starexp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Pos = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBGemItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBGemItem)
  return false;
#undef DO_
}

void DBGemItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBGemItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // int32 GemID = 3;
  if (this->gemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gemid(), output);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->refineexp(), output);
  }

  // int32 StarExp = 8;
  if (this->starexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->starexp(), output);
  }

  // int32 Pos = 9;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBGemItem)
}

::google::protobuf::uint8* DBGemItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBGemItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // int32 GemID = 3;
  if (this->gemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gemid(), target);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->refineexp(), target);
  }

  // int32 StarExp = 8;
  if (this->starexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->starexp(), target);
  }

  // int32 Pos = 9;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBGemItem)
  return target;
}

size_t DBGemItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBGemItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 GemID = 3;
  if (this->gemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gemid());
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refineexp());
  }

  // int32 StarExp = 8;
  if (this->starexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starexp());
  }

  // int32 Pos = 9;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBGemItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBGemItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBGemItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBGemItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBGemItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBGemItem)
    MergeFrom(*source);
  }
}

void DBGemItem::MergeFrom(const DBGemItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBGemItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.gemid() != 0) {
    set_gemid(from.gemid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.refineexp() != 0) {
    set_refineexp(from.refineexp());
  }
  if (from.starexp() != 0) {
    set_starexp(from.starexp());
  }
  if (from.pos() != 0) {
    set_pos(from.pos());
  }
}

void DBGemItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBGemItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBGemItem::CopyFrom(const DBGemItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBGemItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBGemItem::IsInitialized() const {
  return true;
}

void DBGemItem::Swap(DBGemItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBGemItem::InternalSwap(DBGemItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(guid_, other->guid_);
  swap(gemid_, other->gemid_);
  swap(strengthlvl_, other->strengthlvl_);
  swap(refinelevel_, other->refinelevel_);
  swap(starlevel_, other->starlevel_);
  swap(refineexp_, other->refineexp_);
  swap(starexp_, other->starexp_);
  swap(pos_, other->pos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBGemItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBGemData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBGemData::kGemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBGemData::DBGemData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBGemData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBGemData)
}
DBGemData::DBGemData(const DBGemData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gemlist_(from.gemlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBGemData)
}

void DBGemData::SharedCtor() {
  _cached_size_ = 0;
}

DBGemData::~DBGemData() {
  // @@protoc_insertion_point(destructor:DBGemData)
  SharedDtor();
}

void DBGemData::SharedDtor() {
}

void DBGemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBGemData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBGemData& DBGemData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBGemData();
  return *internal_default_instance();
}

DBGemData* DBGemData::New(::google::protobuf::Arena* arena) const {
  DBGemData* n = new DBGemData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBGemData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBGemData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gemlist_.Clear();
  _internal_metadata_.Clear();
}

bool DBGemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBGemData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBGemItem GemList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gemlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBGemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBGemData)
  return false;
#undef DO_
}

void DBGemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBGemData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBGemItem GemList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gemlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gemlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBGemData)
}

::google::protobuf::uint8* DBGemData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBGemData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBGemItem GemList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gemlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->gemlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBGemData)
  return target;
}

size_t DBGemData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBGemData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBGemItem GemList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->gemlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gemlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBGemData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBGemData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBGemData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBGemData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBGemData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBGemData)
    MergeFrom(*source);
  }
}

void DBGemData::MergeFrom(const DBGemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBGemData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gemlist_.MergeFrom(from.gemlist_);
}

void DBGemData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBGemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBGemData::CopyFrom(const DBGemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBGemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBGemData::IsInitialized() const {
  return true;
}

void DBGemData::Swap(DBGemData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBGemData::InternalSwap(DBGemData* other) {
  using std::swap;
  gemlist_.InternalSwap(&other->gemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBGemData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBSkillItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBSkillItem::kRoleIDFieldNumber;
const int DBSkillItem::kSkillIDFieldNumber;
const int DBSkillItem::kLevelFieldNumber;
const int DBSkillItem::kKeyPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBSkillItem::DBSkillItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBSkillItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBSkillItem)
}
DBSkillItem::DBSkillItem(const DBSkillItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&keypos_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(keypos_));
  // @@protoc_insertion_point(copy_constructor:DBSkillItem)
}

void DBSkillItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keypos_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(keypos_));
  _cached_size_ = 0;
}

DBSkillItem::~DBSkillItem() {
  // @@protoc_insertion_point(destructor:DBSkillItem)
  SharedDtor();
}

void DBSkillItem::SharedDtor() {
}

void DBSkillItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBSkillItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBSkillItem& DBSkillItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBSkillItem();
  return *internal_default_instance();
}

DBSkillItem* DBSkillItem::New(::google::protobuf::Arena* arena) const {
  DBSkillItem* n = new DBSkillItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBSkillItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBSkillItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keypos_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(keypos_));
  _internal_metadata_.Clear();
}

bool DBSkillItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBSkillItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SkillID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 KeyPos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keypos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBSkillItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBSkillItem)
  return false;
#undef DO_
}

void DBSkillItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBSkillItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint32 SkillID = 2;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skillid(), output);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // int32 KeyPos = 4;
  if (this->keypos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->keypos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBSkillItem)
}

::google::protobuf::uint8* DBSkillItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBSkillItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint32 SkillID = 2;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skillid(), target);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // int32 KeyPos = 4;
  if (this->keypos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->keypos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBSkillItem)
  return target;
}

size_t DBSkillItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBSkillItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 SkillID = 2;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skillid());
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 KeyPos = 4;
  if (this->keypos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->keypos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBSkillItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBSkillItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBSkillItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBSkillItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBSkillItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBSkillItem)
    MergeFrom(*source);
  }
}

void DBSkillItem::MergeFrom(const DBSkillItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBSkillItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.keypos() != 0) {
    set_keypos(from.keypos());
  }
}

void DBSkillItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBSkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBSkillItem::CopyFrom(const DBSkillItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBSkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBSkillItem::IsInitialized() const {
  return true;
}

void DBSkillItem::Swap(DBSkillItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBSkillItem::InternalSwap(DBSkillItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(skillid_, other->skillid_);
  swap(level_, other->level_);
  swap(keypos_, other->keypos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBSkillItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBSkillData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBSkillData::kSkillListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBSkillData::DBSkillData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBSkillData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBSkillData)
}
DBSkillData::DBSkillData(const DBSkillData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      skilllist_(from.skilllist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBSkillData)
}

void DBSkillData::SharedCtor() {
  _cached_size_ = 0;
}

DBSkillData::~DBSkillData() {
  // @@protoc_insertion_point(destructor:DBSkillData)
  SharedDtor();
}

void DBSkillData::SharedDtor() {
}

void DBSkillData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBSkillData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBSkillData& DBSkillData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBSkillData();
  return *internal_default_instance();
}

DBSkillData* DBSkillData::New(::google::protobuf::Arena* arena) const {
  DBSkillData* n = new DBSkillData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBSkillData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBSkillData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skilllist_.Clear();
  _internal_metadata_.Clear();
}

bool DBSkillData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBSkillData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBSkillItem SkillList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skilllist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBSkillData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBSkillData)
  return false;
#undef DO_
}

void DBSkillData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBSkillData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBSkillItem SkillList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skilllist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skilllist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBSkillData)
}

::google::protobuf::uint8* DBSkillData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBSkillData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBSkillItem SkillList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skilllist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->skilllist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBSkillData)
  return target;
}

size_t DBSkillData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBSkillData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBSkillItem SkillList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->skilllist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skilllist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBSkillData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBSkillData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBSkillData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBSkillData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBSkillData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBSkillData)
    MergeFrom(*source);
  }
}

void DBSkillData::MergeFrom(const DBSkillData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBSkillData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skilllist_.MergeFrom(from.skilllist_);
}

void DBSkillData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBSkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBSkillData::CopyFrom(const DBSkillData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBSkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBSkillData::IsInitialized() const {
  return true;
}

void DBSkillData::Swap(DBSkillData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBSkillData::InternalSwap(DBSkillData* other) {
  using std::swap;
  skilllist_.InternalSwap(&other->skilllist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBSkillData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBPetItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPetItem::kRoleIDFieldNumber;
const int DBPetItem::kGuidFieldNumber;
const int DBPetItem::kPetIDFieldNumber;
const int DBPetItem::kStrengthLvlFieldNumber;
const int DBPetItem::kRefineLevelFieldNumber;
const int DBPetItem::kStarLevelFieldNumber;
const int DBPetItem::kIsUsingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPetItem::DBPetItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPetItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBPetItem)
}
DBPetItem::DBPetItem(const DBPetItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isusing_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(isusing_));
  // @@protoc_insertion_point(copy_constructor:DBPetItem)
}

void DBPetItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isusing_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(isusing_));
  _cached_size_ = 0;
}

DBPetItem::~DBPetItem() {
  // @@protoc_insertion_point(destructor:DBPetItem)
  SharedDtor();
}

void DBPetItem::SharedDtor() {
}

void DBPetItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBPetItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPetItem& DBPetItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPetItem();
  return *internal_default_instance();
}

DBPetItem* DBPetItem::New(::google::protobuf::Arena* arena) const {
  DBPetItem* n = new DBPetItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBPetItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBPetItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isusing_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(isusing_));
  _internal_metadata_.Clear();
}

bool DBPetItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBPetItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PetID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &petid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StrengthLvl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RefineLevel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StarLevel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsUsing = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isusing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBPetItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBPetItem)
  return false;
#undef DO_
}

void DBPetItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBPetItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // int32 PetID = 3;
  if (this->petid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->petid(), output);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // bool IsUsing = 7;
  if (this->isusing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isusing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBPetItem)
}

::google::protobuf::uint8* DBPetItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBPetItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // int32 PetID = 3;
  if (this->petid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->petid(), target);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // bool IsUsing = 7;
  if (this->isusing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isusing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBPetItem)
  return target;
}

size_t DBPetItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBPetItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 PetID = 3;
  if (this->petid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->petid());
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // bool IsUsing = 7;
  if (this->isusing() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBPetItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBPetItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPetItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPetItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBPetItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBPetItem)
    MergeFrom(*source);
  }
}

void DBPetItem::MergeFrom(const DBPetItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBPetItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.petid() != 0) {
    set_petid(from.petid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.isusing() != 0) {
    set_isusing(from.isusing());
  }
}

void DBPetItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBPetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPetItem::CopyFrom(const DBPetItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBPetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPetItem::IsInitialized() const {
  return true;
}

void DBPetItem::Swap(DBPetItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPetItem::InternalSwap(DBPetItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(guid_, other->guid_);
  swap(petid_, other->petid_);
  swap(strengthlvl_, other->strengthlvl_);
  swap(refinelevel_, other->refinelevel_);
  swap(starlevel_, other->starlevel_);
  swap(isusing_, other->isusing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBPetItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBPetData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPetData::kPetListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPetData::DBPetData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPetData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBPetData)
}
DBPetData::DBPetData(const DBPetData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      petlist_(from.petlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBPetData)
}

void DBPetData::SharedCtor() {
  _cached_size_ = 0;
}

DBPetData::~DBPetData() {
  // @@protoc_insertion_point(destructor:DBPetData)
  SharedDtor();
}

void DBPetData::SharedDtor() {
}

void DBPetData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBPetData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPetData& DBPetData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPetData();
  return *internal_default_instance();
}

DBPetData* DBPetData::New(::google::protobuf::Arena* arena) const {
  DBPetData* n = new DBPetData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBPetData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBPetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  petlist_.Clear();
  _internal_metadata_.Clear();
}

bool DBPetData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBPetData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBPetItem PetList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_petlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBPetData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBPetData)
  return false;
#undef DO_
}

void DBPetData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBPetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBPetItem PetList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->petlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->petlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBPetData)
}

::google::protobuf::uint8* DBPetData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBPetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBPetItem PetList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->petlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->petlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBPetData)
  return target;
}

size_t DBPetData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBPetData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBPetItem PetList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->petlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->petlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBPetData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBPetData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPetData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPetData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBPetData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBPetData)
    MergeFrom(*source);
  }
}

void DBPetData::MergeFrom(const DBPetData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBPetData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  petlist_.MergeFrom(from.petlist_);
}

void DBPetData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBPetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPetData::CopyFrom(const DBPetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBPetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPetData::IsInitialized() const {
  return true;
}

void DBPetData::Swap(DBPetData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPetData::InternalSwap(DBPetData* other) {
  using std::swap;
  petlist_.InternalSwap(&other->petlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBPetData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBMountItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBMountItem::kRoleIDFieldNumber;
const int DBMountItem::kGuidFieldNumber;
const int DBMountItem::kMountIDFieldNumber;
const int DBMountItem::kStrengthLvlFieldNumber;
const int DBMountItem::kRefineLevelFieldNumber;
const int DBMountItem::kStarLevelFieldNumber;
const int DBMountItem::kIsUsingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBMountItem::DBMountItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMountItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBMountItem)
}
DBMountItem::DBMountItem(const DBMountItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isusing_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(isusing_));
  // @@protoc_insertion_point(copy_constructor:DBMountItem)
}

void DBMountItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isusing_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(isusing_));
  _cached_size_ = 0;
}

DBMountItem::~DBMountItem() {
  // @@protoc_insertion_point(destructor:DBMountItem)
  SharedDtor();
}

void DBMountItem::SharedDtor() {
}

void DBMountItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBMountItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBMountItem& DBMountItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMountItem();
  return *internal_default_instance();
}

DBMountItem* DBMountItem::New(::google::protobuf::Arena* arena) const {
  DBMountItem* n = new DBMountItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBMountItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBMountItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isusing_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(isusing_));
  _internal_metadata_.Clear();
}

bool DBMountItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBMountItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MountID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StrengthLvl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RefineLevel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StarLevel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsUsing = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isusing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBMountItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBMountItem)
  return false;
#undef DO_
}

void DBMountItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBMountItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // int32 MountID = 3;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mountid(), output);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // bool IsUsing = 7;
  if (this->isusing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isusing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBMountItem)
}

::google::protobuf::uint8* DBMountItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBMountItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // int32 MountID = 3;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mountid(), target);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // bool IsUsing = 7;
  if (this->isusing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isusing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBMountItem)
  return target;
}

size_t DBMountItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBMountItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 MountID = 3;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mountid());
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // bool IsUsing = 7;
  if (this->isusing() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBMountItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBMountItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBMountItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBMountItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBMountItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBMountItem)
    MergeFrom(*source);
  }
}

void DBMountItem::MergeFrom(const DBMountItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBMountItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.isusing() != 0) {
    set_isusing(from.isusing());
  }
}

void DBMountItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBMountItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBMountItem::CopyFrom(const DBMountItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBMountItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBMountItem::IsInitialized() const {
  return true;
}

void DBMountItem::Swap(DBMountItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBMountItem::InternalSwap(DBMountItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(guid_, other->guid_);
  swap(mountid_, other->mountid_);
  swap(strengthlvl_, other->strengthlvl_);
  swap(refinelevel_, other->refinelevel_);
  swap(starlevel_, other->starlevel_);
  swap(isusing_, other->isusing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBMountItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBMountData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBMountData::kMountListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBMountData::DBMountData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMountData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBMountData)
}
DBMountData::DBMountData(const DBMountData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mountlist_(from.mountlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBMountData)
}

void DBMountData::SharedCtor() {
  _cached_size_ = 0;
}

DBMountData::~DBMountData() {
  // @@protoc_insertion_point(destructor:DBMountData)
  SharedDtor();
}

void DBMountData::SharedDtor() {
}

void DBMountData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBMountData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBMountData& DBMountData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMountData();
  return *internal_default_instance();
}

DBMountData* DBMountData::New(::google::protobuf::Arena* arena) const {
  DBMountData* n = new DBMountData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBMountData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBMountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mountlist_.Clear();
  _internal_metadata_.Clear();
}

bool DBMountData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBMountData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBMountItem MountList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mountlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBMountData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBMountData)
  return false;
#undef DO_
}

void DBMountData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBMountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBMountItem MountList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mountlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mountlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBMountData)
}

::google::protobuf::uint8* DBMountData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBMountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBMountItem MountList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mountlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->mountlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBMountData)
  return target;
}

size_t DBMountData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBMountData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBMountItem MountList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->mountlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mountlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBMountData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBMountData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBMountData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBMountData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBMountData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBMountData)
    MergeFrom(*source);
  }
}

void DBMountData::MergeFrom(const DBMountData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBMountData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mountlist_.MergeFrom(from.mountlist_);
}

void DBMountData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBMountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBMountData::CopyFrom(const DBMountData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBMountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBMountData::IsInitialized() const {
  return true;
}

void DBMountData::Swap(DBMountData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBMountData::InternalSwap(DBMountData* other) {
  using std::swap;
  mountlist_.InternalSwap(&other->mountlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBMountData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBPartnerItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPartnerItem::kRoleIDFieldNumber;
const int DBPartnerItem::kGuidFieldNumber;
const int DBPartnerItem::kPartnerIDFieldNumber;
const int DBPartnerItem::kStrengthLvlFieldNumber;
const int DBPartnerItem::kRefineLevelFieldNumber;
const int DBPartnerItem::kStarLevelFieldNumber;
const int DBPartnerItem::kSetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPartnerItem::DBPartnerItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPartnerItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBPartnerItem)
}
DBPartnerItem::DBPartnerItem(const DBPartnerItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&setpos_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(setpos_));
  // @@protoc_insertion_point(copy_constructor:DBPartnerItem)
}

void DBPartnerItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setpos_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(setpos_));
  _cached_size_ = 0;
}

DBPartnerItem::~DBPartnerItem() {
  // @@protoc_insertion_point(destructor:DBPartnerItem)
  SharedDtor();
}

void DBPartnerItem::SharedDtor() {
}

void DBPartnerItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBPartnerItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPartnerItem& DBPartnerItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPartnerItem();
  return *internal_default_instance();
}

DBPartnerItem* DBPartnerItem::New(::google::protobuf::Arena* arena) const {
  DBPartnerItem* n = new DBPartnerItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBPartnerItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBPartnerItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setpos_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(setpos_));
  _internal_metadata_.Clear();
}

bool DBPartnerItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBPartnerItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PartnerID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partnerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StrengthLvl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RefineLevel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StarLevel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SetPos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBPartnerItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBPartnerItem)
  return false;
#undef DO_
}

void DBPartnerItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBPartnerItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // int32 PartnerID = 3;
  if (this->partnerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->partnerid(), output);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // int32 SetPos = 7;
  if (this->setpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->setpos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBPartnerItem)
}

::google::protobuf::uint8* DBPartnerItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBPartnerItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // int32 PartnerID = 3;
  if (this->partnerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->partnerid(), target);
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // int32 SetPos = 7;
  if (this->setpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->setpos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBPartnerItem)
  return target;
}

size_t DBPartnerItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBPartnerItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 PartnerID = 3;
  if (this->partnerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->partnerid());
  }

  // int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // int32 SetPos = 7;
  if (this->setpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->setpos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBPartnerItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBPartnerItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPartnerItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPartnerItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBPartnerItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBPartnerItem)
    MergeFrom(*source);
  }
}

void DBPartnerItem::MergeFrom(const DBPartnerItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBPartnerItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.partnerid() != 0) {
    set_partnerid(from.partnerid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.setpos() != 0) {
    set_setpos(from.setpos());
  }
}

void DBPartnerItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBPartnerItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPartnerItem::CopyFrom(const DBPartnerItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBPartnerItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPartnerItem::IsInitialized() const {
  return true;
}

void DBPartnerItem::Swap(DBPartnerItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPartnerItem::InternalSwap(DBPartnerItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(guid_, other->guid_);
  swap(partnerid_, other->partnerid_);
  swap(strengthlvl_, other->strengthlvl_);
  swap(refinelevel_, other->refinelevel_);
  swap(starlevel_, other->starlevel_);
  swap(setpos_, other->setpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBPartnerItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBPartnerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPartnerData::kPartnerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPartnerData::DBPartnerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPartnerData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBPartnerData)
}
DBPartnerData::DBPartnerData(const DBPartnerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      partnerlist_(from.partnerlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBPartnerData)
}

void DBPartnerData::SharedCtor() {
  _cached_size_ = 0;
}

DBPartnerData::~DBPartnerData() {
  // @@protoc_insertion_point(destructor:DBPartnerData)
  SharedDtor();
}

void DBPartnerData::SharedDtor() {
}

void DBPartnerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBPartnerData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPartnerData& DBPartnerData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBPartnerData();
  return *internal_default_instance();
}

DBPartnerData* DBPartnerData::New(::google::protobuf::Arena* arena) const {
  DBPartnerData* n = new DBPartnerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBPartnerData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBPartnerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partnerlist_.Clear();
  _internal_metadata_.Clear();
}

bool DBPartnerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBPartnerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBPartnerItem PartnerList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_partnerlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBPartnerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBPartnerData)
  return false;
#undef DO_
}

void DBPartnerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBPartnerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBPartnerItem PartnerList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partnerlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->partnerlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBPartnerData)
}

::google::protobuf::uint8* DBPartnerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBPartnerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBPartnerItem PartnerList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partnerlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->partnerlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBPartnerData)
  return target;
}

size_t DBPartnerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBPartnerData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBPartnerItem PartnerList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->partnerlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->partnerlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBPartnerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBPartnerData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPartnerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPartnerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBPartnerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBPartnerData)
    MergeFrom(*source);
  }
}

void DBPartnerData::MergeFrom(const DBPartnerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBPartnerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  partnerlist_.MergeFrom(from.partnerlist_);
}

void DBPartnerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBPartnerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPartnerData::CopyFrom(const DBPartnerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBPartnerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPartnerData::IsInitialized() const {
  return true;
}

void DBPartnerData::Swap(DBPartnerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPartnerData::InternalSwap(DBPartnerData* other) {
  using std::swap;
  partnerlist_.InternalSwap(&other->partnerlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBPartnerData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBTaskItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBTaskItem::kRoleIDFieldNumber;
const int DBTaskItem::kTaskIDFieldNumber;
const int DBTaskItem::kStatusFieldNumber;
const int DBTaskItem::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBTaskItem::DBTaskItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBTaskItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBTaskItem)
}
DBTaskItem::DBTaskItem(const DBTaskItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:DBTaskItem)
}

void DBTaskItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(progress_));
  _cached_size_ = 0;
}

DBTaskItem::~DBTaskItem() {
  // @@protoc_insertion_point(destructor:DBTaskItem)
  SharedDtor();
}

void DBTaskItem::SharedDtor() {
}

void DBTaskItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBTaskItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBTaskItem& DBTaskItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBTaskItem();
  return *internal_default_instance();
}

DBTaskItem* DBTaskItem::New(::google::protobuf::Arena* arena) const {
  DBTaskItem* n = new DBTaskItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBTaskItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBTaskItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool DBTaskItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBTaskItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TaskID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Progress = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBTaskItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBTaskItem)
  return false;
#undef DO_
}

void DBTaskItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBTaskItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint32 TaskID = 2;
  if (this->taskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->taskid(), output);
  }

  // int32 Status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // int32 Progress = 4;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBTaskItem)
}

::google::protobuf::uint8* DBTaskItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBTaskItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint32 TaskID = 2;
  if (this->taskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->taskid(), target);
  }

  // int32 Status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // int32 Progress = 4;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBTaskItem)
  return target;
}

size_t DBTaskItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBTaskItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 TaskID = 2;
  if (this->taskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->taskid());
  }

  // int32 Status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // int32 Progress = 4;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBTaskItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBTaskItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBTaskItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBTaskItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBTaskItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBTaskItem)
    MergeFrom(*source);
  }
}

void DBTaskItem::MergeFrom(const DBTaskItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBTaskItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.taskid() != 0) {
    set_taskid(from.taskid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void DBTaskItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBTaskItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBTaskItem::CopyFrom(const DBTaskItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBTaskItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBTaskItem::IsInitialized() const {
  return true;
}

void DBTaskItem::Swap(DBTaskItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBTaskItem::InternalSwap(DBTaskItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(taskid_, other->taskid_);
  swap(status_, other->status_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBTaskItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBTaskData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBTaskData::kTaskListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBTaskData::DBTaskData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBTaskData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBTaskData)
}
DBTaskData::DBTaskData(const DBTaskData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tasklist_(from.tasklist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBTaskData)
}

void DBTaskData::SharedCtor() {
  _cached_size_ = 0;
}

DBTaskData::~DBTaskData() {
  // @@protoc_insertion_point(destructor:DBTaskData)
  SharedDtor();
}

void DBTaskData::SharedDtor() {
}

void DBTaskData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBTaskData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBTaskData& DBTaskData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBTaskData();
  return *internal_default_instance();
}

DBTaskData* DBTaskData::New(::google::protobuf::Arena* arena) const {
  DBTaskData* n = new DBTaskData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBTaskData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBTaskData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasklist_.Clear();
  _internal_metadata_.Clear();
}

bool DBTaskData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBTaskData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBTaskItem TaskList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tasklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBTaskData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBTaskData)
  return false;
#undef DO_
}

void DBTaskData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBTaskData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBTaskItem TaskList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tasklist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBTaskData)
}

::google::protobuf::uint8* DBTaskData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBTaskData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBTaskItem TaskList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->tasklist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBTaskData)
  return target;
}

size_t DBTaskData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBTaskData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBTaskItem TaskList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tasklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tasklist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBTaskData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBTaskData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBTaskData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBTaskData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBTaskData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBTaskData)
    MergeFrom(*source);
  }
}

void DBTaskData::MergeFrom(const DBTaskData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBTaskData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasklist_.MergeFrom(from.tasklist_);
}

void DBTaskData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBTaskData::CopyFrom(const DBTaskData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBTaskData::IsInitialized() const {
  return true;
}

void DBTaskData::Swap(DBTaskData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBTaskData::InternalSwap(DBTaskData* other) {
  using std::swap;
  tasklist_.InternalSwap(&other->tasklist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBTaskData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBMailItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBMailItem::kRoleIDFieldNumber;
const int DBMailItem::kGuidFieldNumber;
const int DBMailItem::kGroupIDFieldNumber;
const int DBMailItem::kTimeFieldNumber;
const int DBMailItem::kSenderIDFieldNumber;
const int DBMailItem::kSenderFieldNumber;
const int DBMailItem::kTitleFieldNumber;
const int DBMailItem::kContentFieldNumber;
const int DBMailItem::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBMailItem::DBMailItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMailItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBMailItem)
}
DBMailItem::DBMailItem(const DBMailItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender().size() > 0) {
    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  items_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.items().size() > 0) {
    items_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_);
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(groupid_));
  // @@protoc_insertion_point(copy_constructor:DBMailItem)
}

void DBMailItem::SharedCtor() {
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(groupid_));
  _cached_size_ = 0;
}

DBMailItem::~DBMailItem() {
  // @@protoc_insertion_point(destructor:DBMailItem)
  SharedDtor();
}

void DBMailItem::SharedDtor() {
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBMailItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBMailItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBMailItem& DBMailItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMailItem();
  return *internal_default_instance();
}

DBMailItem* DBMailItem::New(::google::protobuf::Arena* arena) const {
  DBMailItem* n = new DBMailItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBMailItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBMailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(groupid_));
  _internal_metadata_.Clear();
}

bool DBMailItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBMailItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GroupID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 SenderID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &senderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Sender = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), static_cast<int>(this->sender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBMailItem.Sender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Title = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBMailItem.Title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBMailItem.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Items = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBMailItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBMailItem)
  return false;
#undef DO_
}

void DBMailItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBMailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // int32 GroupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->groupid(), output);
  }

  // uint64 Time = 4;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->time(), output);
  }

  // uint64 SenderID = 5;
  if (this->senderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->senderid(), output);
  }

  // string Sender = 6;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sender(), output);
  }

  // string Title = 7;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->title(), output);
  }

  // string Content = 8;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->content(), output);
  }

  // bytes Items = 9;
  if (this->items().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->items(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBMailItem)
}

::google::protobuf::uint8* DBMailItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBMailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // int32 GroupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->groupid(), target);
  }

  // uint64 Time = 4;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->time(), target);
  }

  // uint64 SenderID = 5;
  if (this->senderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->senderid(), target);
  }

  // string Sender = 6;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sender(), target);
  }

  // string Title = 7;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->title(), target);
  }

  // string Content = 8;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->content(), target);
  }

  // bytes Items = 9;
  if (this->items().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->items(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBMailItem)
  return target;
}

size_t DBMailItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBMailItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Sender = 6;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // string Title = 7;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string Content = 8;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // bytes Items = 9;
  if (this->items().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->items());
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 Time = 4;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  // uint64 SenderID = 5;
  if (this->senderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->senderid());
  }

  // int32 GroupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBMailItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBMailItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBMailItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBMailItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBMailItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBMailItem)
    MergeFrom(*source);
  }
}

void DBMailItem::MergeFrom(const DBMailItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBMailItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.items().size() > 0) {

    items_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.senderid() != 0) {
    set_senderid(from.senderid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void DBMailItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBMailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBMailItem::CopyFrom(const DBMailItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBMailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBMailItem::IsInitialized() const {
  return true;
}

void DBMailItem::Swap(DBMailItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBMailItem::InternalSwap(DBMailItem* other) {
  using std::swap;
  sender_.Swap(&other->sender_);
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  items_.Swap(&other->items_);
  swap(roleid_, other->roleid_);
  swap(guid_, other->guid_);
  swap(time_, other->time_);
  swap(senderid_, other->senderid_);
  swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBMailItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBMailData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBMailData::kMailListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBMailData::DBMailData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMailData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBMailData)
}
DBMailData::DBMailData(const DBMailData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      maillist_(from.maillist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBMailData)
}

void DBMailData::SharedCtor() {
  _cached_size_ = 0;
}

DBMailData::~DBMailData() {
  // @@protoc_insertion_point(destructor:DBMailData)
  SharedDtor();
}

void DBMailData::SharedDtor() {
}

void DBMailData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBMailData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBMailData& DBMailData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBMailData();
  return *internal_default_instance();
}

DBMailData* DBMailData::New(::google::protobuf::Arena* arena) const {
  DBMailData* n = new DBMailData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBMailData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBMailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maillist_.Clear();
  _internal_metadata_.Clear();
}

bool DBMailData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBMailData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBMailItem MailList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maillist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBMailData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBMailData)
  return false;
#undef DO_
}

void DBMailData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBMailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBMailItem MailList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->maillist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->maillist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBMailData)
}

::google::protobuf::uint8* DBMailData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBMailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBMailItem MailList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->maillist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->maillist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBMailData)
  return target;
}

size_t DBMailData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBMailData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBMailItem MailList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->maillist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->maillist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBMailData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBMailData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBMailData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBMailData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBMailData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBMailData)
    MergeFrom(*source);
  }
}

void DBMailData::MergeFrom(const DBMailData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBMailData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  maillist_.MergeFrom(from.maillist_);
}

void DBMailData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBMailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBMailData::CopyFrom(const DBMailData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBMailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBMailData::IsInitialized() const {
  return true;
}

void DBMailData::Swap(DBMailData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBMailData::InternalSwap(DBMailData* other) {
  using std::swap;
  maillist_.InternalSwap(&other->maillist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBMailData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBActivityItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBActivityItem::kRoleIDFieldNumber;
const int DBActivityItem::kActivityIDFieldNumber;
const int DBActivityItem::kActivityTypeFieldNumber;
const int DBActivityItem::kJoinTimeFieldNumber;
const int DBActivityItem::kDataLenFieldNumber;
const int DBActivityItem::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBActivityItem::DBActivityItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBActivityItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBActivityItem)
}
DBActivityItem::DBActivityItem(const DBActivityItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&datalen_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(datalen_));
  // @@protoc_insertion_point(copy_constructor:DBActivityItem)
}

void DBActivityItem::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datalen_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(datalen_));
  _cached_size_ = 0;
}

DBActivityItem::~DBActivityItem() {
  // @@protoc_insertion_point(destructor:DBActivityItem)
  SharedDtor();
}

void DBActivityItem::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBActivityItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBActivityItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBActivityItem& DBActivityItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBActivityItem();
  return *internal_default_instance();
}

DBActivityItem* DBActivityItem::New(::google::protobuf::Arena* arena) const {
  DBActivityItem* n = new DBActivityItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBActivityItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBActivityItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datalen_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(datalen_));
  _internal_metadata_.Clear();
}

bool DBActivityItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBActivityItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ActivityID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ActivityType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activitytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 JoinTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jointime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DataLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &datalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBActivityItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBActivityItem)
  return false;
#undef DO_
}

void DBActivityItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBActivityItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint32 ActivityID = 2;
  if (this->activityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->activityid(), output);
  }

  // uint32 ActivityType = 3;
  if (this->activitytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->activitytype(), output);
  }

  // uint32 JoinTime = 4;
  if (this->jointime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->jointime(), output);
  }

  // uint32 DataLen = 5;
  if (this->datalen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->datalen(), output);
  }

  // bytes Data = 6;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBActivityItem)
}

::google::protobuf::uint8* DBActivityItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBActivityItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint32 ActivityID = 2;
  if (this->activityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->activityid(), target);
  }

  // uint32 ActivityType = 3;
  if (this->activitytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->activitytype(), target);
  }

  // uint32 JoinTime = 4;
  if (this->jointime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->jointime(), target);
  }

  // uint32 DataLen = 5;
  if (this->datalen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->datalen(), target);
  }

  // bytes Data = 6;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBActivityItem)
  return target;
}

size_t DBActivityItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBActivityItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes Data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 ActivityID = 2;
  if (this->activityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activityid());
  }

  // uint32 ActivityType = 3;
  if (this->activitytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activitytype());
  }

  // uint32 JoinTime = 4;
  if (this->jointime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->jointime());
  }

  // uint32 DataLen = 5;
  if (this->datalen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->datalen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBActivityItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBActivityItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBActivityItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBActivityItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBActivityItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBActivityItem)
    MergeFrom(*source);
  }
}

void DBActivityItem::MergeFrom(const DBActivityItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBActivityItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.activityid() != 0) {
    set_activityid(from.activityid());
  }
  if (from.activitytype() != 0) {
    set_activitytype(from.activitytype());
  }
  if (from.jointime() != 0) {
    set_jointime(from.jointime());
  }
  if (from.datalen() != 0) {
    set_datalen(from.datalen());
  }
}

void DBActivityItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBActivityItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBActivityItem::CopyFrom(const DBActivityItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBActivityItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBActivityItem::IsInitialized() const {
  return true;
}

void DBActivityItem::Swap(DBActivityItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBActivityItem::InternalSwap(DBActivityItem* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(roleid_, other->roleid_);
  swap(activityid_, other->activityid_);
  swap(activitytype_, other->activitytype_);
  swap(jointime_, other->jointime_);
  swap(datalen_, other->datalen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBActivityItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBActivityData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBActivityData::kActivityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBActivityData::DBActivityData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBActivityData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBActivityData)
}
DBActivityData::DBActivityData(const DBActivityData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      activitylist_(from.activitylist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBActivityData)
}

void DBActivityData::SharedCtor() {
  _cached_size_ = 0;
}

DBActivityData::~DBActivityData() {
  // @@protoc_insertion_point(destructor:DBActivityData)
  SharedDtor();
}

void DBActivityData::SharedDtor() {
}

void DBActivityData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBActivityData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBActivityData& DBActivityData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBActivityData();
  return *internal_default_instance();
}

DBActivityData* DBActivityData::New(::google::protobuf::Arena* arena) const {
  DBActivityData* n = new DBActivityData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBActivityData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBActivityData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  activitylist_.Clear();
  _internal_metadata_.Clear();
}

bool DBActivityData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBActivityData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBActivityItem ActivityList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activitylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBActivityData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBActivityData)
  return false;
#undef DO_
}

void DBActivityData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBActivityData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBActivityItem ActivityList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activitylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activitylist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBActivityData)
}

::google::protobuf::uint8* DBActivityData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBActivityData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBActivityItem ActivityList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activitylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->activitylist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBActivityData)
  return target;
}

size_t DBActivityData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBActivityData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBActivityItem ActivityList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->activitylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activitylist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBActivityData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBActivityData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBActivityData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBActivityData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBActivityData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBActivityData)
    MergeFrom(*source);
  }
}

void DBActivityData::MergeFrom(const DBActivityData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBActivityData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  activitylist_.MergeFrom(from.activitylist_);
}

void DBActivityData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBActivityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBActivityData::CopyFrom(const DBActivityData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBActivityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBActivityData::IsInitialized() const {
  return true;
}

void DBActivityData::Swap(DBActivityData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBActivityData::InternalSwap(DBActivityData* other) {
  using std::swap;
  activitylist_.InternalSwap(&other->activitylist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBActivityData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBCounterItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBCounterItem::kRoleIDFieldNumber;
const int DBCounterItem::kCounterIDFieldNumber;
const int DBCounterItem::kIndexFieldNumber;
const int DBCounterItem::kValueFieldNumber;
const int DBCounterItem::kTimeFieldNumber;
const int DBCounterItem::kParam1FieldNumber;
const int DBCounterItem::kParam2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBCounterItem::DBCounterItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCounterItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBCounterItem)
}
DBCounterItem::DBCounterItem(const DBCounterItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&param2_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(param2_));
  // @@protoc_insertion_point(copy_constructor:DBCounterItem)
}

void DBCounterItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param2_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(param2_));
  _cached_size_ = 0;
}

DBCounterItem::~DBCounterItem() {
  // @@protoc_insertion_point(destructor:DBCounterItem)
  SharedDtor();
}

void DBCounterItem::SharedDtor() {
}

void DBCounterItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBCounterItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBCounterItem& DBCounterItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCounterItem();
  return *internal_default_instance();
}

DBCounterItem* DBCounterItem::New(::google::protobuf::Arena* arena) const {
  DBCounterItem* n = new DBCounterItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBCounterItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBCounterItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param2_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(param2_));
  _internal_metadata_.Clear();
}

bool DBCounterItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBCounterItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CounterID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &counterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Param1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Param2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBCounterItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBCounterItem)
  return false;
#undef DO_
}

void DBCounterItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBCounterItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint64 CounterID = 2;
  if (this->counterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->counterid(), output);
  }

  // uint32 Index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index(), output);
  }

  // uint32 Value = 4;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->value(), output);
  }

  // uint32 Time = 5;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time(), output);
  }

  // uint32 Param1 = 6;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->param1(), output);
  }

  // uint32 Param2 = 7;
  if (this->param2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->param2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBCounterItem)
}

::google::protobuf::uint8* DBCounterItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBCounterItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint64 CounterID = 2;
  if (this->counterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->counterid(), target);
  }

  // uint32 Index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index(), target);
  }

  // uint32 Value = 4;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->value(), target);
  }

  // uint32 Time = 5;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time(), target);
  }

  // uint32 Param1 = 6;
  if (this->param1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->param1(), target);
  }

  // uint32 Param2 = 7;
  if (this->param2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->param2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBCounterItem)
  return target;
}

size_t DBCounterItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBCounterItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 CounterID = 2;
  if (this->counterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->counterid());
  }

  // uint32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // uint32 Value = 4;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  // uint32 Time = 5;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time());
  }

  // uint32 Param1 = 6;
  if (this->param1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param1());
  }

  // uint32 Param2 = 7;
  if (this->param2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBCounterItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBCounterItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBCounterItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBCounterItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBCounterItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBCounterItem)
    MergeFrom(*source);
  }
}

void DBCounterItem::MergeFrom(const DBCounterItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBCounterItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.counterid() != 0) {
    set_counterid(from.counterid());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.param1() != 0) {
    set_param1(from.param1());
  }
  if (from.param2() != 0) {
    set_param2(from.param2());
  }
}

void DBCounterItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBCounterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBCounterItem::CopyFrom(const DBCounterItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBCounterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBCounterItem::IsInitialized() const {
  return true;
}

void DBCounterItem::Swap(DBCounterItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBCounterItem::InternalSwap(DBCounterItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(counterid_, other->counterid_);
  swap(index_, other->index_);
  swap(value_, other->value_);
  swap(time_, other->time_);
  swap(param1_, other->param1_);
  swap(param2_, other->param2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBCounterItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBCounterData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBCounterData::kCounterListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBCounterData::DBCounterData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCounterData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBCounterData)
}
DBCounterData::DBCounterData(const DBCounterData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      counterlist_(from.counterlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBCounterData)
}

void DBCounterData::SharedCtor() {
  _cached_size_ = 0;
}

DBCounterData::~DBCounterData() {
  // @@protoc_insertion_point(destructor:DBCounterData)
  SharedDtor();
}

void DBCounterData::SharedDtor() {
}

void DBCounterData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBCounterData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBCounterData& DBCounterData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBCounterData();
  return *internal_default_instance();
}

DBCounterData* DBCounterData::New(::google::protobuf::Arena* arena) const {
  DBCounterData* n = new DBCounterData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBCounterData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBCounterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  counterlist_.Clear();
  _internal_metadata_.Clear();
}

bool DBCounterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBCounterData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBCounterItem CounterList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_counterlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBCounterData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBCounterData)
  return false;
#undef DO_
}

void DBCounterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBCounterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBCounterItem CounterList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counterlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->counterlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBCounterData)
}

::google::protobuf::uint8* DBCounterData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBCounterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBCounterItem CounterList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counterlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->counterlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBCounterData)
  return target;
}

size_t DBCounterData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBCounterData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBCounterItem CounterList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->counterlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->counterlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBCounterData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBCounterData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBCounterData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBCounterData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBCounterData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBCounterData)
    MergeFrom(*source);
  }
}

void DBCounterData::MergeFrom(const DBCounterData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBCounterData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  counterlist_.MergeFrom(from.counterlist_);
}

void DBCounterData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBCounterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBCounterData::CopyFrom(const DBCounterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBCounterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBCounterData::IsInitialized() const {
  return true;
}

void DBCounterData::Swap(DBCounterData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBCounterData::InternalSwap(DBCounterData* other) {
  using std::swap;
  counterlist_.InternalSwap(&other->counterlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBCounterData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBFriendItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBFriendItem::kRoleIDFieldNumber;
const int DBFriendItem::kFriendIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBFriendItem::DBFriendItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBFriendItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBFriendItem)
}
DBFriendItem::DBFriendItem(const DBFriendItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&friendid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(friendid_));
  // @@protoc_insertion_point(copy_constructor:DBFriendItem)
}

void DBFriendItem::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(friendid_));
  _cached_size_ = 0;
}

DBFriendItem::~DBFriendItem() {
  // @@protoc_insertion_point(destructor:DBFriendItem)
  SharedDtor();
}

void DBFriendItem::SharedDtor() {
}

void DBFriendItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBFriendItem::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBFriendItem& DBFriendItem::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBFriendItem();
  return *internal_default_instance();
}

DBFriendItem* DBFriendItem::New(::google::protobuf::Arena* arena) const {
  DBFriendItem* n = new DBFriendItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBFriendItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBFriendItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(friendid_));
  _internal_metadata_.Clear();
}

bool DBFriendItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBFriendItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 FriendID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBFriendItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBFriendItem)
  return false;
#undef DO_
}

void DBFriendItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBFriendItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint64 FriendID = 2;
  if (this->friendid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->friendid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBFriendItem)
}

::google::protobuf::uint8* DBFriendItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBFriendItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint64 FriendID = 2;
  if (this->friendid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->friendid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBFriendItem)
  return target;
}

size_t DBFriendItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBFriendItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 FriendID = 2;
  if (this->friendid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friendid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBFriendItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBFriendItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DBFriendItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBFriendItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBFriendItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBFriendItem)
    MergeFrom(*source);
  }
}

void DBFriendItem::MergeFrom(const DBFriendItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBFriendItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.friendid() != 0) {
    set_friendid(from.friendid());
  }
}

void DBFriendItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBFriendItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBFriendItem::CopyFrom(const DBFriendItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBFriendItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBFriendItem::IsInitialized() const {
  return true;
}

void DBFriendItem::Swap(DBFriendItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBFriendItem::InternalSwap(DBFriendItem* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(friendid_, other->friendid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBFriendItem::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBFriendData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBFriendData::kFriendListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBFriendData::DBFriendData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBFriendData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBFriendData)
}
DBFriendData::DBFriendData(const DBFriendData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friendlist_(from.friendlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DBFriendData)
}

void DBFriendData::SharedCtor() {
  _cached_size_ = 0;
}

DBFriendData::~DBFriendData() {
  // @@protoc_insertion_point(destructor:DBFriendData)
  SharedDtor();
}

void DBFriendData::SharedDtor() {
}

void DBFriendData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBFriendData::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBFriendData& DBFriendData::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBFriendData();
  return *internal_default_instance();
}

DBFriendData* DBFriendData::New(::google::protobuf::Arena* arena) const {
  DBFriendData* n = new DBFriendData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBFriendData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBFriendData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendlist_.Clear();
  _internal_metadata_.Clear();
}

bool DBFriendData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBFriendData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBFriendItem FriendList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friendlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBFriendData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBFriendData)
  return false;
#undef DO_
}

void DBFriendData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBFriendData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBFriendItem FriendList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friendlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friendlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBFriendData)
}

::google::protobuf::uint8* DBFriendData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBFriendData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DBFriendItem FriendList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friendlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friendlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBFriendData)
  return target;
}

size_t DBFriendData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBFriendData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DBFriendItem FriendList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->friendlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBFriendData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBFriendData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBFriendData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBFriendData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBFriendData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBFriendData)
    MergeFrom(*source);
  }
}

void DBFriendData::MergeFrom(const DBFriendData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBFriendData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friendlist_.MergeFrom(from.friendlist_);
}

void DBFriendData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBFriendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBFriendData::CopyFrom(const DBFriendData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBFriendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBFriendData::IsInitialized() const {
  return true;
}

void DBFriendData::Swap(DBFriendData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBFriendData::InternalSwap(DBFriendData* other) {
  using std::swap;
  friendlist_.InternalSwap(&other->friendlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBFriendData::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBRoleLoginAck::InitAsDefaultInstance() {
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->roledata_ = const_cast< ::DBRoleData*>(
      ::DBRoleData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->bagdata_ = const_cast< ::DBBagData*>(
      ::DBBagData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->copydata_ = const_cast< ::DBCopyData*>(
      ::DBCopyData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->equipdata_ = const_cast< ::DBEquipData*>(
      ::DBEquipData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->gemdata_ = const_cast< ::DBGemData*>(
      ::DBGemData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->petdata_ = const_cast< ::DBPetData*>(
      ::DBPetData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->partnerdata_ = const_cast< ::DBPartnerData*>(
      ::DBPartnerData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->taskdata_ = const_cast< ::DBTaskData*>(
      ::DBTaskData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->maildata_ = const_cast< ::DBMailData*>(
      ::DBMailData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->mountdata_ = const_cast< ::DBMountData*>(
      ::DBMountData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->activitydata_ = const_cast< ::DBActivityData*>(
      ::DBActivityData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->counterdata_ = const_cast< ::DBCounterData*>(
      ::DBCounterData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->frienddata_ = const_cast< ::DBFriendData*>(
      ::DBFriendData::internal_default_instance());
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->skilldata_ = const_cast< ::DBSkillData*>(
      ::DBSkillData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBRoleLoginAck::kRetCodeFieldNumber;
const int DBRoleLoginAck::kRoleIDFieldNumber;
const int DBRoleLoginAck::kRoleDataFieldNumber;
const int DBRoleLoginAck::kBagDataFieldNumber;
const int DBRoleLoginAck::kCopyDataFieldNumber;
const int DBRoleLoginAck::kEquipDataFieldNumber;
const int DBRoleLoginAck::kGemDataFieldNumber;
const int DBRoleLoginAck::kPetDataFieldNumber;
const int DBRoleLoginAck::kPartnerDataFieldNumber;
const int DBRoleLoginAck::kTaskDataFieldNumber;
const int DBRoleLoginAck::kMailDataFieldNumber;
const int DBRoleLoginAck::kMountDataFieldNumber;
const int DBRoleLoginAck::kActivityDataFieldNumber;
const int DBRoleLoginAck::kCounterDataFieldNumber;
const int DBRoleLoginAck::kFriendDataFieldNumber;
const int DBRoleLoginAck::kSkillDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBRoleLoginAck::DBRoleLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBRoleLoginAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBRoleLoginAck)
}
DBRoleLoginAck::DBRoleLoginAck(const DBRoleLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_roledata()) {
    roledata_ = new ::DBRoleData(*from.roledata_);
  } else {
    roledata_ = NULL;
  }
  if (from.has_bagdata()) {
    bagdata_ = new ::DBBagData(*from.bagdata_);
  } else {
    bagdata_ = NULL;
  }
  if (from.has_copydata()) {
    copydata_ = new ::DBCopyData(*from.copydata_);
  } else {
    copydata_ = NULL;
  }
  if (from.has_equipdata()) {
    equipdata_ = new ::DBEquipData(*from.equipdata_);
  } else {
    equipdata_ = NULL;
  }
  if (from.has_gemdata()) {
    gemdata_ = new ::DBGemData(*from.gemdata_);
  } else {
    gemdata_ = NULL;
  }
  if (from.has_petdata()) {
    petdata_ = new ::DBPetData(*from.petdata_);
  } else {
    petdata_ = NULL;
  }
  if (from.has_partnerdata()) {
    partnerdata_ = new ::DBPartnerData(*from.partnerdata_);
  } else {
    partnerdata_ = NULL;
  }
  if (from.has_taskdata()) {
    taskdata_ = new ::DBTaskData(*from.taskdata_);
  } else {
    taskdata_ = NULL;
  }
  if (from.has_maildata()) {
    maildata_ = new ::DBMailData(*from.maildata_);
  } else {
    maildata_ = NULL;
  }
  if (from.has_mountdata()) {
    mountdata_ = new ::DBMountData(*from.mountdata_);
  } else {
    mountdata_ = NULL;
  }
  if (from.has_activitydata()) {
    activitydata_ = new ::DBActivityData(*from.activitydata_);
  } else {
    activitydata_ = NULL;
  }
  if (from.has_counterdata()) {
    counterdata_ = new ::DBCounterData(*from.counterdata_);
  } else {
    counterdata_ = NULL;
  }
  if (from.has_frienddata()) {
    frienddata_ = new ::DBFriendData(*from.frienddata_);
  } else {
    frienddata_ = NULL;
  }
  if (from.has_skilldata()) {
    skilldata_ = new ::DBSkillData(*from.skilldata_);
  } else {
    skilldata_ = NULL;
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:DBRoleLoginAck)
}

void DBRoleLoginAck::SharedCtor() {
  ::memset(&roledata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roledata_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

DBRoleLoginAck::~DBRoleLoginAck() {
  // @@protoc_insertion_point(destructor:DBRoleLoginAck)
  SharedDtor();
}

void DBRoleLoginAck::SharedDtor() {
  if (this != internal_default_instance()) delete roledata_;
  if (this != internal_default_instance()) delete bagdata_;
  if (this != internal_default_instance()) delete copydata_;
  if (this != internal_default_instance()) delete equipdata_;
  if (this != internal_default_instance()) delete gemdata_;
  if (this != internal_default_instance()) delete petdata_;
  if (this != internal_default_instance()) delete partnerdata_;
  if (this != internal_default_instance()) delete taskdata_;
  if (this != internal_default_instance()) delete maildata_;
  if (this != internal_default_instance()) delete mountdata_;
  if (this != internal_default_instance()) delete activitydata_;
  if (this != internal_default_instance()) delete counterdata_;
  if (this != internal_default_instance()) delete frienddata_;
  if (this != internal_default_instance()) delete skilldata_;
}

void DBRoleLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBRoleLoginAck::descriptor() {
  ::protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBRoleLoginAck& DBRoleLoginAck::default_instance() {
  ::protobuf_Msg_5fLoginDBData_2eproto::InitDefaultsDBRoleLoginAck();
  return *internal_default_instance();
}

DBRoleLoginAck* DBRoleLoginAck::New(::google::protobuf::Arena* arena) const {
  DBRoleLoginAck* n = new DBRoleLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBRoleLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:DBRoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && roledata_ != NULL) {
    delete roledata_;
  }
  roledata_ = NULL;
  if (GetArenaNoVirtual() == NULL && bagdata_ != NULL) {
    delete bagdata_;
  }
  bagdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && copydata_ != NULL) {
    delete copydata_;
  }
  copydata_ = NULL;
  if (GetArenaNoVirtual() == NULL && equipdata_ != NULL) {
    delete equipdata_;
  }
  equipdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && gemdata_ != NULL) {
    delete gemdata_;
  }
  gemdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && petdata_ != NULL) {
    delete petdata_;
  }
  petdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && partnerdata_ != NULL) {
    delete partnerdata_;
  }
  partnerdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && taskdata_ != NULL) {
    delete taskdata_;
  }
  taskdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && maildata_ != NULL) {
    delete maildata_;
  }
  maildata_ = NULL;
  if (GetArenaNoVirtual() == NULL && mountdata_ != NULL) {
    delete mountdata_;
  }
  mountdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && activitydata_ != NULL) {
    delete activitydata_;
  }
  activitydata_ = NULL;
  if (GetArenaNoVirtual() == NULL && counterdata_ != NULL) {
    delete counterdata_;
  }
  counterdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && frienddata_ != NULL) {
    delete frienddata_;
  }
  frienddata_ = NULL;
  if (GetArenaNoVirtual() == NULL && skilldata_ != NULL) {
    delete skilldata_;
  }
  skilldata_ = NULL;
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool DBRoleLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBRoleLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBRoleData RoleData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roledata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBBagData BagData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bagdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBCopyData CopyData = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_copydata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBEquipData EquipData = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBGemData GemData = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gemdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBPetData PetData = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_petdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBPartnerData PartnerData = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_partnerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBTaskData TaskData = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBMailData MailData = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maildata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBMountData MountData = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mountdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBActivityData ActivityData = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activitydata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBCounterData CounterData = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_counterdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBFriendData FriendData = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_frienddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBSkillData SkillData = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skilldata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBRoleLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBRoleLoginAck)
  return false;
#undef DO_
}

void DBRoleLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBRoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // .DBRoleData RoleData = 3;
  if (this->has_roledata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->roledata_, output);
  }

  // .DBBagData BagData = 4;
  if (this->has_bagdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->bagdata_, output);
  }

  // .DBCopyData CopyData = 5;
  if (this->has_copydata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->copydata_, output);
  }

  // .DBEquipData EquipData = 6;
  if (this->has_equipdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->equipdata_, output);
  }

  // .DBGemData GemData = 7;
  if (this->has_gemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->gemdata_, output);
  }

  // .DBPetData PetData = 8;
  if (this->has_petdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->petdata_, output);
  }

  // .DBPartnerData PartnerData = 9;
  if (this->has_partnerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->partnerdata_, output);
  }

  // .DBTaskData TaskData = 10;
  if (this->has_taskdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->taskdata_, output);
  }

  // .DBMailData MailData = 11;
  if (this->has_maildata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->maildata_, output);
  }

  // .DBMountData MountData = 12;
  if (this->has_mountdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->mountdata_, output);
  }

  // .DBActivityData ActivityData = 13;
  if (this->has_activitydata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->activitydata_, output);
  }

  // .DBCounterData CounterData = 14;
  if (this->has_counterdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->counterdata_, output);
  }

  // .DBFriendData FriendData = 15;
  if (this->has_frienddata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->frienddata_, output);
  }

  // .DBSkillData SkillData = 16;
  if (this->has_skilldata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->skilldata_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBRoleLoginAck)
}

::google::protobuf::uint8* DBRoleLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBRoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // .DBRoleData RoleData = 3;
  if (this->has_roledata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->roledata_, deterministic, target);
  }

  // .DBBagData BagData = 4;
  if (this->has_bagdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->bagdata_, deterministic, target);
  }

  // .DBCopyData CopyData = 5;
  if (this->has_copydata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->copydata_, deterministic, target);
  }

  // .DBEquipData EquipData = 6;
  if (this->has_equipdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->equipdata_, deterministic, target);
  }

  // .DBGemData GemData = 7;
  if (this->has_gemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->gemdata_, deterministic, target);
  }

  // .DBPetData PetData = 8;
  if (this->has_petdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->petdata_, deterministic, target);
  }

  // .DBPartnerData PartnerData = 9;
  if (this->has_partnerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->partnerdata_, deterministic, target);
  }

  // .DBTaskData TaskData = 10;
  if (this->has_taskdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->taskdata_, deterministic, target);
  }

  // .DBMailData MailData = 11;
  if (this->has_maildata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->maildata_, deterministic, target);
  }

  // .DBMountData MountData = 12;
  if (this->has_mountdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->mountdata_, deterministic, target);
  }

  // .DBActivityData ActivityData = 13;
  if (this->has_activitydata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->activitydata_, deterministic, target);
  }

  // .DBCounterData CounterData = 14;
  if (this->has_counterdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->counterdata_, deterministic, target);
  }

  // .DBFriendData FriendData = 15;
  if (this->has_frienddata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->frienddata_, deterministic, target);
  }

  // .DBSkillData SkillData = 16;
  if (this->has_skilldata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->skilldata_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBRoleLoginAck)
  return target;
}

size_t DBRoleLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBRoleLoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .DBRoleData RoleData = 3;
  if (this->has_roledata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roledata_);
  }

  // .DBBagData BagData = 4;
  if (this->has_bagdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bagdata_);
  }

  // .DBCopyData CopyData = 5;
  if (this->has_copydata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->copydata_);
  }

  // .DBEquipData EquipData = 6;
  if (this->has_equipdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->equipdata_);
  }

  // .DBGemData GemData = 7;
  if (this->has_gemdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gemdata_);
  }

  // .DBPetData PetData = 8;
  if (this->has_petdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->petdata_);
  }

  // .DBPartnerData PartnerData = 9;
  if (this->has_partnerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->partnerdata_);
  }

  // .DBTaskData TaskData = 10;
  if (this->has_taskdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->taskdata_);
  }

  // .DBMailData MailData = 11;
  if (this->has_maildata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->maildata_);
  }

  // .DBMountData MountData = 12;
  if (this->has_mountdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mountdata_);
  }

  // .DBActivityData ActivityData = 13;
  if (this->has_activitydata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->activitydata_);
  }

  // .DBCounterData CounterData = 14;
  if (this->has_counterdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->counterdata_);
  }

  // .DBFriendData FriendData = 15;
  if (this->has_frienddata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->frienddata_);
  }

  // .DBSkillData SkillData = 16;
  if (this->has_skilldata()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->skilldata_);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBRoleLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBRoleLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const DBRoleLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBRoleLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBRoleLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBRoleLoginAck)
    MergeFrom(*source);
  }
}

void DBRoleLoginAck::MergeFrom(const DBRoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBRoleLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roledata()) {
    mutable_roledata()->::DBRoleData::MergeFrom(from.roledata());
  }
  if (from.has_bagdata()) {
    mutable_bagdata()->::DBBagData::MergeFrom(from.bagdata());
  }
  if (from.has_copydata()) {
    mutable_copydata()->::DBCopyData::MergeFrom(from.copydata());
  }
  if (from.has_equipdata()) {
    mutable_equipdata()->::DBEquipData::MergeFrom(from.equipdata());
  }
  if (from.has_gemdata()) {
    mutable_gemdata()->::DBGemData::MergeFrom(from.gemdata());
  }
  if (from.has_petdata()) {
    mutable_petdata()->::DBPetData::MergeFrom(from.petdata());
  }
  if (from.has_partnerdata()) {
    mutable_partnerdata()->::DBPartnerData::MergeFrom(from.partnerdata());
  }
  if (from.has_taskdata()) {
    mutable_taskdata()->::DBTaskData::MergeFrom(from.taskdata());
  }
  if (from.has_maildata()) {
    mutable_maildata()->::DBMailData::MergeFrom(from.maildata());
  }
  if (from.has_mountdata()) {
    mutable_mountdata()->::DBMountData::MergeFrom(from.mountdata());
  }
  if (from.has_activitydata()) {
    mutable_activitydata()->::DBActivityData::MergeFrom(from.activitydata());
  }
  if (from.has_counterdata()) {
    mutable_counterdata()->::DBCounterData::MergeFrom(from.counterdata());
  }
  if (from.has_frienddata()) {
    mutable_frienddata()->::DBFriendData::MergeFrom(from.frienddata());
  }
  if (from.has_skilldata()) {
    mutable_skilldata()->::DBSkillData::MergeFrom(from.skilldata());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void DBRoleLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBRoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBRoleLoginAck::CopyFrom(const DBRoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBRoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleLoginAck::IsInitialized() const {
  return true;
}

void DBRoleLoginAck::Swap(DBRoleLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBRoleLoginAck::InternalSwap(DBRoleLoginAck* other) {
  using std::swap;
  swap(roledata_, other->roledata_);
  swap(bagdata_, other->bagdata_);
  swap(copydata_, other->copydata_);
  swap(equipdata_, other->equipdata_);
  swap(gemdata_, other->gemdata_);
  swap(petdata_, other->petdata_);
  swap(partnerdata_, other->partnerdata_);
  swap(taskdata_, other->taskdata_);
  swap(maildata_, other->maildata_);
  swap(mountdata_, other->mountdata_);
  swap(activitydata_, other->activitydata_);
  swap(counterdata_, other->counterdata_);
  swap(frienddata_, other->frienddata_);
  swap(skilldata_, other->skilldata_);
  swap(roleid_, other->roleid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBRoleLoginAck::GetMetadata() const {
  protobuf_Msg_5fLoginDBData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fLoginDBData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
